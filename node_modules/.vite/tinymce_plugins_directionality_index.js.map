{
  "version": 3,
  "sources": ["../tinymce/plugins/directionality/plugin.js", "../tinymce/plugins/directionality/index.js", "dep:tinymce_plugins_directionality_index"],
  "sourcesContent": ["(function () {\nvar directionality = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var setDir = function (editor, dir) {\n      var dom = editor.dom;\n      var curDir;\n      var blocks = editor.selection.getSelectedBlocks();\n      if (blocks.length) {\n        curDir = dom.getAttrib(blocks[0], 'dir');\n        global$1.each(blocks, function (block) {\n          if (!dom.getParent(block.parentNode, '*[dir=\"' + dir + '\"]', dom.getRoot())) {\n            dom.setAttrib(block, 'dir', curDir !== dir ? dir : null);\n          }\n        });\n        editor.nodeChanged();\n      }\n    };\n    var Direction = { setDir: setDir };\n\n    var register = function (editor) {\n      editor.addCommand('mceDirectionLTR', function () {\n        Direction.setDir(editor, 'ltr');\n      });\n      editor.addCommand('mceDirectionRTL', function () {\n        Direction.setDir(editor, 'rtl');\n      });\n    };\n    var Commands = { register: register };\n\n    var generateSelector = function (dir) {\n      var selector = [];\n      global$1.each('h1 h2 h3 h4 h5 h6 div p'.split(' '), function (name) {\n        selector.push(name + '[dir=' + dir + ']');\n      });\n      return selector.join(',');\n    };\n    var register$1 = function (editor) {\n      editor.addButton('ltr', {\n        title: 'Left to right',\n        cmd: 'mceDirectionLTR',\n        stateSelector: generateSelector('ltr')\n      });\n      editor.addButton('rtl', {\n        title: 'Right to left',\n        cmd: 'mceDirectionRTL',\n        stateSelector: generateSelector('rtl')\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('directionality', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"directionality\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/directionality')\n//   ES2015:\n//     import 'tinymce/plugins/directionality'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/directionality/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,IAAC,YAAY;AACb,UAAI,iBAAkB,WAAY;AAC9B;AAEA,YAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ;AAExC,YAAI,WAAW,QAAQ,KAAK,MAAM,QAAQ;AAE1C,YAAI,SAAS,SAAU,QAAQ,KAAK;AAClC,cAAI,MAAM,OAAO;AACjB,cAAI;AACJ,cAAI,SAAS,OAAO,UAAU;AAC9B,cAAI,OAAO,QAAQ;AACjB,qBAAS,IAAI,UAAU,OAAO,IAAI;AAClC,qBAAS,KAAK,QAAQ,SAAU,OAAO;AACrC,kBAAI,CAAC,IAAI,UAAU,MAAM,YAAY,YAAY,MAAM,MAAM,IAAI,YAAY;AAC3E,oBAAI,UAAU,OAAO,OAAO,WAAW,MAAM,MAAM;AAAA;AAAA;AAGvD,mBAAO;AAAA;AAAA;AAGX,YAAI,YAAY,EAAE;AAElB,YAAI,WAAW,SAAU,QAAQ;AAC/B,iBAAO,WAAW,mBAAmB,WAAY;AAC/C,sBAAU,OAAO,QAAQ;AAAA;AAE3B,iBAAO,WAAW,mBAAmB,WAAY;AAC/C,sBAAU,OAAO,QAAQ;AAAA;AAAA;AAG7B,YAAI,WAAW,EAAE;AAEjB,YAAI,mBAAmB,SAAU,KAAK;AACpC,cAAI,WAAW;AACf,mBAAS,KAAK,0BAA0B,MAAM,MAAM,SAAU,MAAM;AAClE,qBAAS,KAAK,OAAO,UAAU,MAAM;AAAA;AAEvC,iBAAO,SAAS,KAAK;AAAA;AAEvB,YAAI,aAAa,SAAU,QAAQ;AACjC,iBAAO,UAAU,OAAO;AAAA,YACtB,OAAO;AAAA,YACP,KAAK;AAAA,YACL,eAAe,iBAAiB;AAAA;AAElC,iBAAO,UAAU,OAAO;AAAA,YACtB,OAAO;AAAA,YACP,KAAK;AAAA,YACL,eAAe,iBAAiB;AAAA;AAAA;AAGpC,YAAI,UAAU,EAAE,UAAU;AAE1B,eAAO,IAAI,kBAAkB,SAAU,QAAQ;AAC7C,mBAAS,SAAS;AAClB,kBAAQ,SAAS;AAAA;AAEnB,0BAAmB;AAAA;AAGnB,eAAO;AAAA;AAAA;AAAA;AAAA;;;AC9DX;AAAA;AAMA;AAAA;AAAA;;;ACNA,IAAO,+CAAQ;",
  "names": []
}
