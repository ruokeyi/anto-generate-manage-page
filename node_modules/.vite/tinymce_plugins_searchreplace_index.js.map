{
  "version": 3,
  "sources": ["../tinymce/plugins/searchreplace/plugin.js", "../tinymce/plugins/searchreplace/index.js", "dep:tinymce_plugins_searchreplace_index"],
  "sourcesContent": ["(function () {\nvar searchreplace = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    function isContentEditableFalse(node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    }\n    function findAndReplaceDOMText(regex, node, replacementNode, captureGroup, schema) {\n      var m;\n      var matches = [];\n      var text, count = 0, doc;\n      var blockElementsMap, hiddenTextElementsMap, shortEndedElementsMap;\n      doc = node.ownerDocument;\n      blockElementsMap = schema.getBlockElements();\n      hiddenTextElementsMap = schema.getWhiteSpaceElements();\n      shortEndedElementsMap = schema.getShortEndedElements();\n      function getMatchIndexes(m, captureGroup) {\n        captureGroup = captureGroup || 0;\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        var index = m.index;\n        if (captureGroup > 0) {\n          var cg = m[captureGroup];\n          if (!cg) {\n            throw new Error('Invalid capture group');\n          }\n          index += m[0].indexOf(cg);\n          m[0] = cg;\n        }\n        return [\n          index,\n          index + m[0].length,\n          [m[0]]\n        ];\n      }\n      function getText(node) {\n        var txt;\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        txt = '';\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      }\n      function stepThroughMatches(node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation = matches.shift(), matchIndex = 0;\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation[1]) {\n                endNode = curNode;\n                endNodeIndex = matchLocation[1] - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation[0]) {\n                startNode = curNode;\n                startNodeIndex = matchLocation[0] - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation[2],\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      }\n      function genReplacer(nodeName) {\n        var makeReplacementNode;\n        if (typeof nodeName !== 'function') {\n          var stencilNode_1 = nodeName.nodeType ? nodeName : doc.createElement(nodeName);\n          makeReplacementNode = function (fill, matchIndex) {\n            var clone = stencilNode_1.cloneNode(false);\n            clone.setAttribute('data-mce-index', matchIndex);\n            if (fill) {\n              clone.appendChild(doc.createTextNode(fill));\n            }\n            return clone;\n          };\n        } else {\n          makeReplacementNode = nodeName;\n        }\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match[0], matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      }\n      text = getText(node);\n      if (!text) {\n        return;\n      }\n      if (regex.global) {\n        while (m = regex.exec(text)) {\n          matches.push(getMatchIndexes(m, captureGroup));\n        }\n      } else {\n        m = text.match(regex);\n        matches.push(getMatchIndexes(m, captureGroup));\n      }\n      if (matches.length) {\n        count = matches.length;\n        stepThroughMatches(node, matches, genReplacer(replacementNode));\n      }\n      return count;\n    }\n    var FindReplaceText = { findAndReplaceDOMText: findAndReplaceDOMText };\n\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var markAllMatches = function (editor, currentIndexState, regex) {\n      var node, marker;\n      marker = editor.dom.create('span', { 'data-mce-bogus': 1 });\n      marker.className = 'mce-match-marker';\n      node = editor.getBody();\n      done(editor, currentIndexState, false);\n      return FindReplaceText.findAndReplaceDOMText(regex, node, marker, false, editor.schema);\n    };\n    var unwrap = function (node) {\n      var parentNode = node.parentNode;\n      if (node.firstChild) {\n        parentNode.insertBefore(node.firstChild, node);\n      }\n      node.parentNode.removeChild(node);\n    };\n    var findSpansByIndex = function (editor, index) {\n      var nodes;\n      var spans = [];\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var moveSelection = function (editor, currentIndexState, forward) {\n      var testIndex = currentIndexState.get();\n      var dom = editor.dom;\n      forward = forward !== false;\n      if (forward) {\n        testIndex++;\n      } else {\n        testIndex--;\n      }\n      dom.removeClass(findSpansByIndex(editor, currentIndexState.get()), 'mce-match-marker-selected');\n      var spans = findSpansByIndex(editor, testIndex);\n      if (spans.length) {\n        dom.addClass(findSpansByIndex(editor, testIndex), 'mce-match-marker-selected');\n        editor.selection.scrollIntoView(spans[0]);\n        return testIndex;\n      }\n      return -1;\n    };\n    var removeNode = function (dom, node) {\n      var parent = node.parentNode;\n      dom.remove(node);\n      if (dom.isEmpty(parent)) {\n        dom.remove(parent);\n      }\n    };\n    var find = function (editor, currentIndexState, text, matchCase, wholeWord) {\n      text = text.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n      text = text.replace(/\\s/g, '[^\\\\S\\\\r\\\\n]');\n      text = wholeWord ? '\\\\b' + text + '\\\\b' : text;\n      var count = markAllMatches(editor, currentIndexState, new RegExp(text, matchCase ? 'g' : 'gi'));\n      if (count) {\n        currentIndexState.set(-1);\n        currentIndexState.set(moveSelection(editor, currentIndexState, true));\n      }\n      return count;\n    };\n    var next = function (editor, currentIndexState) {\n      var index = moveSelection(editor, currentIndexState, true);\n      if (index !== -1) {\n        currentIndexState.set(index);\n      }\n    };\n    var prev = function (editor, currentIndexState) {\n      var index = moveSelection(editor, currentIndexState, false);\n      if (index !== -1) {\n        currentIndexState.set(index);\n      }\n    };\n    var isMatchSpan = function (node) {\n      var matchIndex = getElmIndex(node);\n      return matchIndex !== null && matchIndex.length > 0;\n    };\n    var replace = function (editor, currentIndexState, text, forward, all) {\n      var i, nodes, node, matchIndex, currentMatchIndex, nextIndex = currentIndexState.get(), hasMore;\n      forward = forward !== false;\n      node = editor.getBody();\n      nodes = global$1.grep(global$1.toArray(node.getElementsByTagName('span')), isMatchSpan);\n      for (i = 0; i < nodes.length; i++) {\n        var nodeIndex = getElmIndex(nodes[i]);\n        matchIndex = currentMatchIndex = parseInt(nodeIndex, 10);\n        if (all || matchIndex === currentIndexState.get()) {\n          if (text.length) {\n            nodes[i].firstChild.nodeValue = text;\n            unwrap(nodes[i]);\n          } else {\n            removeNode(editor.dom, nodes[i]);\n          }\n          while (nodes[++i]) {\n            matchIndex = parseInt(getElmIndex(nodes[i]), 10);\n            if (matchIndex === currentMatchIndex) {\n              removeNode(editor.dom, nodes[i]);\n            } else {\n              i--;\n              break;\n            }\n          }\n          if (forward) {\n            nextIndex--;\n          }\n        } else if (currentMatchIndex > currentIndexState.get()) {\n          nodes[i].setAttribute('data-mce-index', currentMatchIndex - 1);\n        }\n      }\n      currentIndexState.set(nextIndex);\n      if (forward) {\n        hasMore = hasNext(editor, currentIndexState);\n        next(editor, currentIndexState);\n      } else {\n        hasMore = hasPrev(editor, currentIndexState);\n        prev(editor, currentIndexState);\n      }\n      return !all && hasMore;\n    };\n    var done = function (editor, currentIndexState, keepEditorSelection) {\n      var i, nodes, startContainer, endContainer;\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n      for (i = 0; i < nodes.length; i++) {\n        var nodeIndex = getElmIndex(nodes[i]);\n        if (nodeIndex !== null && nodeIndex.length) {\n          if (nodeIndex === currentIndexState.get().toString()) {\n            if (!startContainer) {\n              startContainer = nodes[i].firstChild;\n            }\n            endContainer = nodes[i].firstChild;\n          }\n          unwrap(nodes[i]);\n        }\n      }\n      if (startContainer && endContainer) {\n        var rng = editor.dom.createRng();\n        rng.setStart(startContainer, 0);\n        rng.setEnd(endContainer, endContainer.data.length);\n        if (keepEditorSelection !== false) {\n          editor.selection.setRng(rng);\n        }\n        return rng;\n      }\n    };\n    var hasNext = function (editor, currentIndexState) {\n      return findSpansByIndex(editor, currentIndexState.get() + 1).length > 0;\n    };\n    var hasPrev = function (editor, currentIndexState) {\n      return findSpansByIndex(editor, currentIndexState.get() - 1).length > 0;\n    };\n    var Actions = {\n      done: done,\n      find: find,\n      next: next,\n      prev: prev,\n      replace: replace,\n      hasNext: hasNext,\n      hasPrev: hasPrev\n    };\n\n    var get = function (editor, currentIndexState) {\n      var done = function (keepEditorSelection) {\n        return Actions.done(editor, currentIndexState, keepEditorSelection);\n      };\n      var find = function (text, matchCase, wholeWord) {\n        return Actions.find(editor, currentIndexState, text, matchCase, wholeWord);\n      };\n      var next = function () {\n        return Actions.next(editor, currentIndexState);\n      };\n      var prev = function () {\n        return Actions.prev(editor, currentIndexState);\n      };\n      var replace = function (text, forward, all) {\n        return Actions.replace(editor, currentIndexState, text, forward, all);\n      };\n      return {\n        done: done,\n        find: find,\n        next: next,\n        prev: prev,\n        replace: replace\n      };\n    };\n    var Api = { get: get };\n\n    var open = function (editor, currentIndexState) {\n      var last = {}, selectedText;\n      editor.undoManager.add();\n      selectedText = global$1.trim(editor.selection.getContent({ format: 'text' }));\n      function updateButtonStates() {\n        win.statusbar.find('#next').disabled(Actions.hasNext(editor, currentIndexState) === false);\n        win.statusbar.find('#prev').disabled(Actions.hasPrev(editor, currentIndexState) === false);\n      }\n      function notFoundAlert() {\n        editor.windowManager.alert('Could not find the specified string.', function () {\n          win.find('#find')[0].focus();\n        });\n      }\n      var win = editor.windowManager.open({\n        layout: 'flex',\n        pack: 'center',\n        align: 'center',\n        onClose: function () {\n          editor.focus();\n          Actions.done(editor, currentIndexState);\n          editor.undoManager.add();\n        },\n        onSubmit: function (e) {\n          var count, caseState, text, wholeWord;\n          e.preventDefault();\n          caseState = win.find('#case').checked();\n          wholeWord = win.find('#words').checked();\n          text = win.find('#find').value();\n          if (!text.length) {\n            Actions.done(editor, currentIndexState, false);\n            win.statusbar.items().slice(1).disabled(true);\n            return;\n          }\n          if (last.text === text && last.caseState === caseState && last.wholeWord === wholeWord) {\n            if (!Actions.hasNext(editor, currentIndexState)) {\n              notFoundAlert();\n              return;\n            }\n            Actions.next(editor, currentIndexState);\n            updateButtonStates();\n            return;\n          }\n          count = Actions.find(editor, currentIndexState, text, caseState, wholeWord);\n          if (!count) {\n            notFoundAlert();\n          }\n          win.statusbar.items().slice(1).disabled(count === 0);\n          updateButtonStates();\n          last = {\n            text: text,\n            caseState: caseState,\n            wholeWord: wholeWord\n          };\n        },\n        buttons: [\n          {\n            text: 'Find',\n            subtype: 'primary',\n            onclick: function () {\n              win.submit();\n            }\n          },\n          {\n            text: 'Replace',\n            disabled: true,\n            onclick: function () {\n              if (!Actions.replace(editor, currentIndexState, win.find('#replace').value())) {\n                win.statusbar.items().slice(1).disabled(true);\n                currentIndexState.set(-1);\n                last = {};\n              }\n            }\n          },\n          {\n            text: 'Replace all',\n            disabled: true,\n            onclick: function () {\n              Actions.replace(editor, currentIndexState, win.find('#replace').value(), true, true);\n              win.statusbar.items().slice(1).disabled(true);\n              last = {};\n            }\n          },\n          {\n            type: 'spacer',\n            flex: 1\n          },\n          {\n            text: 'Prev',\n            name: 'prev',\n            disabled: true,\n            onclick: function () {\n              Actions.prev(editor, currentIndexState);\n              updateButtonStates();\n            }\n          },\n          {\n            text: 'Next',\n            name: 'next',\n            disabled: true,\n            onclick: function () {\n              Actions.next(editor, currentIndexState);\n              updateButtonStates();\n            }\n          }\n        ],\n        title: 'Find and replace',\n        items: {\n          type: 'form',\n          padding: 20,\n          labelGap: 30,\n          spacing: 10,\n          items: [\n            {\n              type: 'textbox',\n              name: 'find',\n              size: 40,\n              label: 'Find',\n              value: selectedText\n            },\n            {\n              type: 'textbox',\n              name: 'replace',\n              size: 40,\n              label: 'Replace with'\n            },\n            {\n              type: 'checkbox',\n              name: 'case',\n              text: 'Match case',\n              label: ' '\n            },\n            {\n              type: 'checkbox',\n              name: 'words',\n              text: 'Whole words',\n              label: ' '\n            }\n          ]\n        }\n      });\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor, currentIndexState) {\n      editor.addCommand('SearchReplace', function () {\n        Dialog.open(editor, currentIndexState);\n      });\n    };\n    var Commands = { register: register };\n\n    var showDialog = function (editor, currentIndexState) {\n      return function () {\n        Dialog.open(editor, currentIndexState);\n      };\n    };\n    var register$1 = function (editor, currentIndexState) {\n      editor.addMenuItem('searchreplace', {\n        text: 'Find and replace',\n        shortcut: 'Meta+F',\n        onclick: showDialog(editor, currentIndexState),\n        separator: 'before',\n        context: 'edit'\n      });\n      editor.addButton('searchreplace', {\n        tooltip: 'Find and replace',\n        onclick: showDialog(editor, currentIndexState)\n      });\n      editor.shortcuts.add('Meta+F', '', showDialog(editor, currentIndexState));\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('searchreplace', function (editor) {\n      var currentIndexState = Cell(-1);\n      Commands.register(editor, currentIndexState);\n      Buttons.register(editor, currentIndexState);\n      return Api.get(editor, currentIndexState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"searchreplace\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/searchreplace')\n//   ES2015:\n//     import 'tinymce/plugins/searchreplace'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/searchreplace/index.js\");"],
  "mappings": "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",
  "names": []
}
