{
  "version": 3,
  "sources": ["../tinymce/plugins/table/plugin.js", "../tinymce/plugins/table/index.js", "dep:tinymce_plugins_table_index"],
  "sourcesContent": ["(function () {\nvar table = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var nativeSlice = Array.prototype.slice;\n    var nativeIndexOf = Array.prototype.indexOf;\n    var nativePush = Array.prototype.push;\n    var rawIndexOf = function (ts, t) {\n      return nativeIndexOf.call(ts, t);\n    };\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var reverse = function (xs) {\n      var r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var keys = Object.keys;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array)) {\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      }\n      each(array, function (a) {\n        if (!isString(a)) {\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n        }\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var MixedBag = function (required, optional) {\n      var everything = required.concat(optional);\n      if (everything.length === 0) {\n        throw new Error('You must specify at least one required or optional field.');\n      }\n      validateStrArr('required', required);\n      validateStrArr('optional', optional);\n      checkDupes(everything);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        var unsupported = filter(keys$1, function (key) {\n          return !contains(everything, key);\n        });\n        if (unsupported.length > 0) {\n          unsuppMessage(unsupported);\n        }\n        var r = {};\n        each(required, function (req) {\n          r[req] = constant(obj[req]);\n        });\n        each(optional, function (opt) {\n          r[opt] = constant(Object.prototype.hasOwnProperty.call(obj, opt) ? Option.some(obj[opt]) : Option.none());\n        });\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var Global = typeof domGlobals.window !== 'undefined' ? domGlobals.window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType$1(ELEMENT);\n    var isText = isType$1(TEXT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set = function (element, key, value) {\n      rawSet(element.dom(), key, value);\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var get = function (element, key) {\n      var v = element.dom().getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var has = function (element, key) {\n      var dom = element.dom();\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    var remove = function (element, key) {\n      element.dom().removeAttribute(key);\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var checkRange = function (str, substr, start) {\n      if (substr === '') {\n        return true;\n      }\n      if (str.length < substr.length) {\n        return false;\n      }\n      var x = str.substr(start, start + substr.length);\n      return x === substr;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var trim = function (str) {\n      return str.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom().parentNode : element.dom();\n      return dom !== undefined && dom !== null && dom.ownerDocument.body.contains(dom);\n    };\n    var body = cached(function () {\n      return getBody(Element.fromDom(domGlobals.document));\n    });\n    var getBody = function (doc) {\n      var b = doc.dom().body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return Element.fromDom(b);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n    var setAll$1 = function (element, css) {\n      var dom = element.dom();\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$1 = function (element, property) {\n      var dom = element.dom();\n      var styles = domGlobals.window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      var v = r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n      return v === null ? undefined : v;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw = function (element, property) {\n      var dom = element.dom();\n      var raw = getUnsafeProperty(dom, property);\n      return Option.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$1 = function (element, property) {\n      var dom = element.dom();\n      internalRemove(dom, property);\n      if (has(element, 'style') && trim(get(element, 'style')) === '') {\n        remove(element, 'style');\n      }\n    };\n    var copy = function (source, target) {\n      var sourceDom = source.dom();\n      var targetDom = target.dom();\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown();\n      }\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var is = function (element, selector) {\n      var dom = element.dom();\n      if (dom.nodeType !== ELEMENT$1) {\n        return false;\n      } else {\n        var elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$2 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var owner = function (element) {\n      return Element.fromDom(element.dom().ownerDocument);\n    };\n    var defaultView = function (element) {\n      return Element.fromDom(element.dom().ownerDocument.defaultView);\n    };\n    var parent = function (element) {\n      return Option.from(element.dom().parentNode).map(Element.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : never;\n      var dom = element.dom();\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = Element.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      return Option.from(element.dom().previousSibling).map(Element.fromDom);\n    };\n    var nextSibling = function (element) {\n      return Option.from(element.dom().nextSibling).map(Element.fromDom);\n    };\n    var children = function (element) {\n      return map(element.dom().childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var after = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append(v, element);\n        });\n      }, function (v) {\n        before(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append(parent, element);\n      }, function (v) {\n        parent.dom().insertBefore(element.dom(), v.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n    var wrap = function (element, wrapper) {\n      before(element, wrapper);\n      append(wrapper, element);\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var after$1 = function (marker, elements) {\n      each(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after(e, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom().textContent = '';\n      each(children(element), function (rogue) {\n        remove$2(rogue);\n      });\n    };\n    var remove$2 = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children$1 = children(wrapper);\n      if (children$1.length > 0) {\n        before$1(wrapper, children$1);\n      }\n      remove$2(wrapper);\n    };\n\n    var dimension = Immutable('width', 'height');\n    var dimensions = Immutable('width', 'height');\n    var grid = Immutable('rows', 'columns');\n    var address = Immutable('row', 'column');\n    var coords = Immutable('x', 'y');\n    var detail = Immutable('element', 'rowspan', 'colspan');\n    var detailnew = Immutable('element', 'rowspan', 'colspan', 'isNew');\n    var extended = Immutable('element', 'rowspan', 'colspan', 'row', 'column');\n    var rowdata = Immutable('element', 'cells', 'section');\n    var elementnew = Immutable('element', 'isNew');\n    var rowdatanew = Immutable('element', 'cells', 'section', 'isNew');\n    var rowcells = Immutable('cells', 'section');\n    var rowdetails = Immutable('details', 'section');\n    var bounds = Immutable('startRow', 'startCol', 'finishRow', 'finishCol');\n\n    var ancestors = function (scope, predicate, isRoot) {\n      return filter(parents(scope, isRoot), predicate);\n    };\n    var children$1 = function (scope, predicate) {\n      return filter(children(scope), predicate);\n    };\n    var descendants = function (scope, predicate) {\n      var result = [];\n      each(children(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$1 = function (scope, selector, isRoot) {\n      return ancestors(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var children$2 = function (scope, selector) {\n      return children$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendants$1 = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      return is(scope, a) ? Option.some(scope) : isFunction(isRoot) && isRoot(scope) ? Option.none() : ancestor(scope, a, isRoot);\n    }\n\n    var ancestor = function (scope, predicate, isRoot) {\n      var element = scope.dom();\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = Element.fromDom(element);\n        if (predicate(el)) {\n          return Option.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var closest = function (scope, predicate, isRoot) {\n      var is = function (s, test) {\n        return test(s);\n      };\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n    var child$1 = function (scope, predicate) {\n      var pred = function (node) {\n        return predicate(Element.fromDom(node));\n      };\n      var result = find(scope.dom().childNodes, pred);\n      return result.map(Element.fromDom);\n    };\n    var descendant = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          var child_1 = Element.fromDom(node.childNodes[i]);\n          if (predicate(child_1)) {\n            return Option.some(child_1);\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope.dom());\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var child$2 = function (scope, selector) {\n      return child$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendant$1 = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, constant(true));\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind(children(scope), function (x) {\n        return is(x, selector) ? predicate(x) ? [x] : [] : filterFirstLayer(x, selector, predicate);\n      });\n    };\n    var LayerSelector = {\n      firstLayer: firstLayer,\n      filterFirstLayer: filterFirstLayer\n    };\n\n    var lookup = function (tags, element, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      if (isRoot(element)) {\n        return Option.none();\n      }\n      if (contains(tags, name(element))) {\n        return Option.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'th,td');\n    };\n    var notCell = function (element, isRoot) {\n      return lookup([\n        'caption',\n        'tr',\n        'tbody',\n        'tfoot',\n        'thead'\n      ], element, isRoot);\n    };\n    var neighbours = function (selector, element) {\n      return parent(element).map(function (parent) {\n        return children$2(parent, selector);\n      });\n    };\n    var neighbourCells = curry(neighbours, 'th,td');\n    var neighbourRows = curry(neighbours, 'tr');\n    var firstCell = function (ancestor) {\n      return descendant$1(ancestor, 'th,td');\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var row = function (element, isRoot) {\n      return lookup(['tr'], element, isRoot);\n    };\n    var rows = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'tr');\n    };\n    var attr = function (element, property) {\n      return parseInt(get(element, property), 10);\n    };\n    var grid$1 = function (element, rowProp, colProp) {\n      var rowsCount = attr(element, rowProp);\n      var cols = attr(element, colProp);\n      return grid(rowsCount, cols);\n    };\n    var TableLookup = {\n      cell: cell,\n      firstCell: firstCell,\n      cells: cells,\n      neighbourCells: neighbourCells,\n      table: table,\n      row: row,\n      rows: rows,\n      notCell: notCell,\n      neighbourRows: neighbourRows,\n      attr: attr,\n      grid: grid$1\n    };\n\n    var fromTable = function (table) {\n      var rows = TableLookup.rows(table);\n      return map(rows, function (row) {\n        var element = row;\n        var parent$1 = parent(element);\n        var parentSection = parent$1.map(function (p) {\n          var parentName = name(p);\n          return parentName === 'tfoot' || parentName === 'thead' || parentName === 'tbody' ? parentName : 'tbody';\n        }).getOr('tbody');\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(element, cells, parentSection);\n      });\n    };\n    var fromPastedRows = function (rows, example) {\n      return map(rows, function (row) {\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has(cell, 'rowspan') ? parseInt(get(cell, 'rowspan'), 10) : 1;\n          var colspan = has(cell, 'colspan') ? parseInt(get(cell, 'colspan'), 10) : 1;\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdata(row, cells, example.section());\n      });\n    };\n    var DetailsList = {\n      fromTable: fromTable,\n      fromPastedRows: fromPastedRows\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      var raw = warehouse.access()[key(row, column)];\n      return raw !== undefined ? Option.some(raw) : Option.none();\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element());\n      });\n      return filtered.length > 0 ? Option.some(filtered[0]) : Option.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind(warehouse.all(), function (r) {\n        return r.cells();\n      });\n      return filter(all, predicate);\n    };\n    var generate = function (list) {\n      var access = {};\n      var cells = [];\n      var maxRows = list.length;\n      var maxColumns = 0;\n      each(list, function (details, r) {\n        var currentRow = [];\n        each(details.cells(), function (detail) {\n          var start = 0;\n          while (access[key(r, start)] !== undefined) {\n            start++;\n          }\n          var current = extended(detail.element(), detail.rowspan(), detail.colspan(), r, start);\n          for (var i = 0; i < detail.colspan(); i++) {\n            for (var j = 0; j < detail.rowspan(); j++) {\n              var cr = r + j;\n              var cc = start + i;\n              var newpos = key(cr, cc);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, cc + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        cells.push(rowdata(details.element(), currentRow, details.section()));\n      });\n      var grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: constant(grid$1),\n        access: constant(access),\n        all: constant(cells)\n      };\n    };\n    var justCells = function (warehouse) {\n      var rows = map(warehouse.all(), function (w) {\n        return w.cells();\n      });\n      return flatten(rows);\n    };\n    var Warehouse = {\n      generate: generate,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells\n    };\n\n    var statsStruct = Immutable('minRow', 'minCol', 'maxRow', 'maxCol');\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      each$1(house.access(), function (detail) {\n        if (isSelected(detail)) {\n          var startRow = detail.row();\n          var endRow = startRow + detail.rowspan() - 1;\n          var startCol = detail.column();\n          var endCol = startCol + detail.colspan() - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element();\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      var f = seenSelected ? append : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow() || i > stats.maxRow() || j < stats.minCol() || j > stats.maxCol())) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (table, stats) {\n      var emptyRows = filter(LayerSelector.firstLayer(table, 'tr'), function (row) {\n        return row.dom().childElementCount === 0;\n      });\n      each(emptyRows, remove$2);\n      if (stats.minCol() === stats.maxCol() || stats.minRow() === stats.maxRow()) {\n        each(LayerSelector.firstLayer(table, 'th,td'), function (cell) {\n          remove(cell, 'rowspan');\n          remove(cell, 'colspan');\n        });\n      }\n      remove(table, 'width');\n      remove(table, 'height');\n      remove$1(table, 'width');\n      remove$1(table, 'height');\n    };\n    var extract = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is(detail.element(), selectedSelector);\n      };\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var stats = findSelectedStats(house, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = LayerSelector.filterFirstLayer(table, 'th,td', function (cell) {\n        return is(cell, selector);\n      });\n      each(unselectedCells, remove$2);\n      fillInGaps(list, house, stats, isSelected);\n      clean(table, stats);\n      return table;\n    };\n    var CopySelected = { extract: extract };\n\n    function NodeValue (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOption = function (element) {\n        return is(element) ? Option.from(element.dom().nodeValue) : Option.none();\n      };\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom().nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    }\n\n    var api = NodeValue(isText, 'text');\n    var get$2 = function (element) {\n      return api.get(element);\n    };\n    var getOption = function (element) {\n      return api.getOption(element);\n    };\n    var set$2 = function (element, value) {\n      api.set(element, value);\n    };\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var NBSP = '\\xA0';\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(NBSP) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children$1 = children(element);\n        for (var i = children$1.length - 1; i >= 0; i--) {\n          var child = children$1[i];\n          if (predicate(child)) {\n            return Option.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone$1(original, false);\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children(deep(original));\n      append$1(nu, cloneChildren);\n      return nu;\n    };\n\n    var createCell = function () {\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      return td;\n    };\n    var replace = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove(replica, k);\n        } else {\n          set(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cell) {\n      return cell;\n    };\n    var newRow = function (doc) {\n      return function () {\n        return Element.fromTag('tr', doc.dom());\n      };\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$1(firstText, formatSelector, function (element) {\n          return eq(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove(clonedFormat, 'contenteditable');\n          append(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var newCell = function (prev) {\n        var docu = owner(prev.element());\n        var td = Element.fromTag(name(prev.element()), docu.dom());\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element(), td, formats) : td;\n        append(lastNode, Element.fromTag('br'));\n        copy(prev.element(), td);\n        remove$1(td, 'height');\n        if (prev.colspan() !== 1) {\n          remove$1(prev.element(), 'width');\n        }\n        mutate(prev.element(), td);\n        return td;\n      };\n      return {\n        row: newRow(doc),\n        cell: newCell,\n        replace: replace,\n        gap: createCell\n      };\n    };\n    var paste = function (doc) {\n      return {\n        row: newRow(doc),\n        cell: createCell,\n        replace: pasteReplace,\n        gap: createCell\n      };\n    };\n    var TableFill = {\n      cellOperations: cellOperations,\n      paste: paste\n    };\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(Element.fromDom(div));\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column();\n      var rightEdge = detail.column() + detail.colspan() - 1;\n      var topEdge = detail.row();\n      var bottomEdge = detail.row() + detail.rowspan() - 1;\n      return leftEdge <= bounds.finishCol() && rightEdge >= bounds.startCol() && (topEdge <= bounds.finishRow() && bottomEdge >= bounds.startRow());\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column() >= bounds.startCol() && detail.column() + detail.colspan() - 1 <= bounds.finishCol() && detail.row() >= bounds.startRow() && detail.row() + detail.rowspan() - 1 <= bounds.finishRow();\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Option.some(bounds) : Option.none();\n    };\n    var CellBounds = {\n      inSelection: inSelection,\n      isWithin: isWithin,\n      isRectangular: isRectangular\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return bounds(Math.min(detailA.row(), detailB.row()), Math.min(detailA.column(), detailB.column()), Math.max(detailA.row() + detailA.rowspan() - 1, detailB.row() + detailB.rowspan() - 1), Math.max(detailA.column() + detailA.colspan() - 1, detailB.column() + detailB.colspan() - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return CellBounds.isRectangular(warehouse, bounds);\n      });\n    };\n    var CellGroup = {\n      getAnyBox: getAnyBox,\n      getBox: getBox\n    };\n\n    var moveBy = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq).bind(function (detail) {\n        var startRow = row > 0 ? detail.row() + detail.rowspan() - 1 : detail.row();\n        var startCol = column > 0 ? detail.column() + detail.colspan() - 1 : detail.column();\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element();\n        });\n      });\n    };\n    var intercepts = function (warehouse, start, finish) {\n      return CellGroup.getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(CellBounds.inSelection, bounds));\n        return map(inside, function (detail) {\n          return detail.element();\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains$2(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).map(function (detail) {\n        return detail.element();\n      });\n    };\n    var CellFinder = {\n      moveBy: moveBy,\n      intercepts: intercepts,\n      parentCell: parentCell\n    };\n\n    var moveBy$1 = function (cell, deltaRow, deltaColumn) {\n      return TableLookup.table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return CellFinder.moveBy(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellFinder.intercepts(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var optStartCell = eq(table, firstTable) ? Option.some(first) : CellFinder.parentCell(warehouse, first);\n      var optLastCell = eq(table, lastTable) ? Option.some(last) : CellFinder.parentCell(warehouse, last);\n      return optStartCell.bind(function (startCell) {\n        return optLastCell.bind(function (lastCell) {\n          return CellFinder.intercepts(warehouse, startCell, lastCell);\n        });\n      });\n    };\n    var getBox$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellGroup.getBox(warehouse, first, last);\n    };\n    var getWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return Warehouse.generate(list);\n    };\n    var TablePositions = {\n      moveBy: moveBy$1,\n      intercepts: intercepts$1,\n      nestedIntercepts: nestedIntercepts,\n      getBox: getBox$1\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone$1 = function (element) {\n        return Element.fromDom(element.dom().cloneNode(false));\n      };\n      var document = function (element) {\n        return element.dom().ownerDocument;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var comparePosition = function (element, other) {\n        return element.dom().compareDocumentPosition(other.dom());\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone(source);\n        setAll(destination, as);\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants$1,\n          predicate: descendants\n        }),\n        styles: constant({\n          get: get$1,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get,\n          set: set,\n          remove: remove,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after,\n          afterAll: after$1,\n          append: append,\n          appendAll: append$1,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$2\n        }),\n        create: constant({\n          nu: Element.fromTag,\n          clone: clone$1,\n          text: Element.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          getText: get$2,\n          setText: set$2,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag\n        }),\n        eq: eq,\n        is: is$1\n      };\n    }\n\n    var leftRight = Immutable('left', 'right');\n    var brokenPath = Immutable('first', 'second', 'splits');\n    var bisect = function (universe, parent, child) {\n      var children = universe.property().children(parent);\n      var index = findIndex(children, curry(universe.eq, child));\n      return index.map(function (ind) {\n        return {\n          before: constant(children.slice(0, ind)),\n          after: constant(children.slice(ind + 1))\n        };\n      });\n    };\n    var breakToRight = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var second = universe.create().clone(parent);\n        universe.insert().appendAll(second, parts.after());\n        universe.insert().after(parent, second);\n        return leftRight(parent, second);\n      });\n    };\n    var breakToLeft = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var prior = universe.create().clone(parent);\n        universe.insert().appendAll(prior, parts.before().concat([child]));\n        universe.insert().appendAll(parent, parts.after());\n        universe.insert().before(parent, prior);\n        return leftRight(prior, parent);\n      });\n    };\n    var breakPath = function (universe, item, isTop, breaker) {\n      var next = function (child, group, splits) {\n        var fallback = brokenPath(child, Option.none(), splits);\n        if (isTop(child)) {\n          return brokenPath(child, group, splits);\n        } else {\n          return universe.property().parent(child).bind(function (parent) {\n            return breaker(universe, parent, child).map(function (breakage) {\n              var extra = [{\n                  first: breakage.left,\n                  second: breakage.right\n                }];\n              var nextChild = isTop(parent) ? parent : breakage.left();\n              return next(nextChild, Option.some(breakage.right()), splits.concat(extra));\n            });\n          }).getOr(fallback);\n        }\n      };\n      return next(item, Option.none(), []);\n    };\n\n    var all$1 = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all$1(universe, look, elements, unsafeOne) : Option.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    var eq$1 = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var unsafeSubset = function (universe, common, ps1, ps2) {\n      var children = universe.property().children(common);\n      if (universe.eq(common, ps1[0])) {\n        return Option.some([ps1[0]]);\n      }\n      if (universe.eq(common, ps2[0])) {\n        return Option.some([ps2[0]]);\n      }\n      var finder = function (ps) {\n        var topDown = reverse(ps);\n        var index = findIndex(topDown, eq$1(universe, common)).getOr(-1);\n        var item = index < topDown.length - 1 ? topDown[index + 1] : topDown[index];\n        return findIndex(children, eq$1(universe, item));\n      };\n      var startIndex = finder(ps1);\n      var endIndex = finder(ps2);\n      return startIndex.bind(function (sIndex) {\n        return endIndex.map(function (eIndex) {\n          var first = Math.min(sIndex, eIndex);\n          var last = Math.max(sIndex, eIndex);\n          return children.slice(first, last + 1);\n        });\n      });\n    };\n    var ancestors$2 = function (universe, start, end, isRoot) {\n      if (isRoot === void 0) {\n        isRoot = never;\n      }\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find(pruned1, function (x) {\n        return exists(pruned2, eq$1(universe, x));\n      });\n      return {\n        firstpath: constant(pruned1),\n        secondpath: constant(pruned2),\n        shared: constant(shared)\n      };\n    };\n    var subset = function (universe, start, end) {\n      var ancs = ancestors$2(universe, start, end);\n      return ancs.shared().bind(function (shared) {\n        return unsafeSubset(universe, shared, ancs.firstpath(), ancs.secondpath());\n      });\n    };\n    var SubsetFn = {\n      subset: subset,\n      ancestors: ancestors$2\n    };\n\n    var sharedOne = oneAll;\n    var subset$1 = SubsetFn.subset;\n    var ancestors$3 = SubsetFn.ancestors;\n    var breakToLeft$1 = breakToLeft;\n    var breakToRight$1 = breakToRight;\n    var breakPath$1 = breakPath;\n    var Parent = {\n      sharedOne: sharedOne,\n      subset: subset$1,\n      ancestors: ancestors$3,\n      breakToLeft: breakToLeft$1,\n      breakToRight: breakToRight$1,\n      breakPath: breakPath$1\n    };\n\n    var universe = DomUniverse();\n    var sharedOne$1 = function (look, elements) {\n      return Parent.sharedOne(universe, function (_universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var subset$2 = function (start, finish) {\n      return Parent.subset(universe, start, finish);\n    };\n    var ancestors$4 = function (start, finish, isRoot) {\n      return Parent.ancestors(universe, start, finish, isRoot);\n    };\n    var breakToLeft$2 = function (parent, child) {\n      return Parent.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$2 = function (parent, child) {\n      return Parent.breakToRight(universe, parent, child);\n    };\n    var breakPath$2 = function (child, isTop, breaker) {\n      return Parent.breakPath(universe, child, isTop, function (u, p, c) {\n        return breaker(p, c);\n      });\n    };\n    var DomParent = {\n      sharedOne: sharedOne$1,\n      subset: subset$2,\n      ancestors: ancestors$4,\n      breakToLeft: breakToLeft$2,\n      breakToRight: breakToRight$2,\n      breakPath: breakPath$2\n    };\n\n    var create = MixedBag([\n      'boxes',\n      'start',\n      'finish'\n    ], []);\n    var Identified = { create: create };\n\n    var lookupTable = function (container) {\n      return ancestor$1(container, 'table');\n    };\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot !== undefined && isRoot(element) || eq(element, rootTable);\n        };\n      };\n      if (eq(start, finish)) {\n        return Option.some(Identified.create({\n          boxes: Option.some([start]),\n          start: start,\n          finish: finish\n        }));\n      } else {\n        return lookupTable(start).bind(function (startTable) {\n          return lookupTable(finish).bind(function (finishTable) {\n            if (eq(startTable, finishTable)) {\n              return Option.some(Identified.create({\n                boxes: TablePositions.intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              }));\n            } else if (contains$2(startTable, finishTable)) {\n              var ancestorCells = ancestors$1(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              }));\n            } else if (contains$2(finishTable, startTable)) {\n              var ancestorCells = ancestors$1(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Option.some(Identified.create({\n                boxes: TablePositions.nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              }));\n            } else {\n              return DomParent.ancestors(start, finish).shared().bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$1(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$1(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Option.some(Identified.create({\n                    boxes: TablePositions.nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  }));\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve = function (container, selector) {\n      var sels = descendants$1(container, selector);\n      return sels.length > 0 ? Option.some(sels) : Option.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find(boxes, function (box) {\n        return is(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant$1(container, firstSelectedSelector).bind(function (first) {\n        return descendant$1(container, lastSelectedSelector).bind(function (last) {\n          return DomParent.sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (tbl) {\n            return {\n              first: constant(first),\n              last: constant(last),\n              table: constant(tbl)\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant$1(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes().map(function (boxes) {\n              return {\n                boxes: constant(boxes),\n                start: constant(identified.start()),\n                finish: constant(identified.finish())\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return TablePositions.moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n    var CellSelection = {\n      identify: identify,\n      retrieve: retrieve,\n      shiftSelection: shiftSelection,\n      getEdges: getEdges\n    };\n\n    var retrieve$1 = function (container, selector) {\n      return CellSelection.retrieve(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return CellSelection.getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq(container, ancestor);\n        };\n        var firstAncestor = ancestor$1(edges.first(), 'thead,tfoot,tbody,table', isRoot);\n        var lastAncestor = ancestor$1(edges.last(), 'thead,tfoot,tbody,table', isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq(fA, lA) ? TablePositions.getBox(edges.table(), edges.first(), edges.last()) : Option.none();\n          });\n        });\n      });\n    };\n    var TableSelection = {\n      retrieve: retrieve$1,\n      retrieveBox: retrieveBox\n    };\n\n    var selected = 'data-mce-selected';\n    var selectedSelector = 'td[' + selected + '],th[' + selected + ']';\n    var attributeSelector = '[' + selected + ']';\n    var firstSelected = 'data-mce-first-selected';\n    var firstSelectedSelector = 'td[' + firstSelected + '],th[' + firstSelected + ']';\n    var lastSelected = 'data-mce-last-selected';\n    var lastSelectedSelector = 'td[' + lastSelected + '],th[' + lastSelected + ']';\n    var Ephemera = {\n      selected: constant(selected),\n      selectedSelector: constant(selectedSelector),\n      attributeSelector: constant(attributeSelector),\n      firstSelected: constant(firstSelected),\n      firstSelectedSelector: constant(firstSelectedSelector),\n      lastSelected: constant(lastSelected),\n      lastSelectedSelector: constant(lastSelectedSelector)\n    };\n\n    var generate$1 = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var argLength = arguments.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var args = new Array(argLength);\n          for (var i = 0; i < args.length; i++) {\n            args[i] = arguments[i];\n          }\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              if (arguments.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + arguments.length);\n              }\n              var target = arguments[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              domGlobals.console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate$1 };\n\n    var type$1 = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['selection'] }\n    ]);\n    var cata = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var SelectionTypes = {\n      cata: cata,\n      none: type$1.none,\n      multiple: type$1.multiple,\n      single: type$1.single\n    };\n\n    var selection = function (cell, selections) {\n      return SelectionTypes.cata(selections.get(), constant([]), identity, constant([cell]));\n    };\n    var unmergable = function (cell, selections) {\n      var hasSpan = function (elem) {\n        return has(elem, 'rowspan') && parseInt(get(elem, 'rowspan'), 10) > 1 || has(elem, 'colspan') && parseInt(get(elem, 'colspan'), 10) > 1;\n      };\n      var candidates = selection(cell, selections);\n      return candidates.length > 0 && forall(candidates, hasSpan) ? Option.some(candidates) : Option.none();\n    };\n    var mergable = function (table, selections) {\n      return SelectionTypes.cata(selections.get(), Option.none, function (cells, _env) {\n        if (cells.length === 0) {\n          return Option.none();\n        }\n        return TableSelection.retrieveBox(table, Ephemera.firstSelectedSelector(), Ephemera.lastSelectedSelector()).bind(function (bounds) {\n          return cells.length > 1 ? Option.some({\n            bounds: constant(bounds),\n            cells: constant(cells)\n          }) : Option.none();\n        });\n      }, Option.none);\n    };\n    var CellOperations = {\n      mergable: mergable,\n      unmergable: unmergable,\n      selection: selection\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant([cell])\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: constant(cell),\n        mergable: constant(CellOperations.mergable(table, selections)),\n        unmergable: constant(CellOperations.unmergable(cell, selections)),\n        selection: constant(CellOperations.selection(cell, selections))\n      };\n    };\n    var notCell$1 = function (element) {\n      return noMenu(element);\n    };\n    var paste$1 = Immutable('element', 'clipboard', 'generators');\n    var pasteRows = function (selections, table, cell, clipboard, generators) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant(CellOperations.selection(cell, selections)),\n        clipboard: constant(clipboard),\n        generators: constant(generators)\n      };\n    };\n    var TableTargets = {\n      noMenu: noMenu,\n      forMenu: forMenu,\n      notCell: notCell$1,\n      paste: paste$1,\n      pasteRows: pasteRows\n    };\n\n    var extractSelected = function (cells) {\n      return TableLookup.table(cells[0]).map(deep).map(function (replica) {\n        return [CopySelected.extract(replica, Ephemera.attributeSelector())];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom(), {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map(elements, function (element) {\n        return element.dom().innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions, cellSelection) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          SelectionTypes.cata(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          cellOpt.each(function (domCell) {\n            var cell = Element.fromDom(domCell);\n            TableLookup.table(cell).each(function (table) {\n              var elements = filter(fromHtml$1(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              if (elements.length === 1 && name(elements[0]) === 'table') {\n                e.preventDefault();\n                var doc = Element.fromDom(editor.getDoc());\n                var generators = TableFill.paste(doc);\n                var targets = TableTargets.paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function (rng) {\n                  editor.selection.setRng(rng);\n                  editor.focus();\n                  cellSelection.clear(table);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n    var Clipboard = { registerEvents: registerEvents };\n\n    function Dimension (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom();\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$1(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$1(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    }\n\n    var api$1 = Dimension('height', function (element) {\n      var dom = element.dom();\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$3 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter = function (element) {\n      return api$1.getOuter(element);\n    };\n\n    var api$2 = Dimension('width', function (element) {\n      return element.dom().offsetWidth;\n    });\n    var get$4 = function (element) {\n      return api$2.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api$2.getOuter(element);\n    };\n\n    var platform = PlatformDetection$1.detect();\n    var needManualCalc = function () {\n      return platform.browser.isIE() || platform.browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      var num = parseFloat(px);\n      return isNaN(num) ? fallback : num;\n    };\n    var getProp = function (elm, name, fallback) {\n      return toNumber(get$1(elm, name), fallback);\n    };\n    var getCalculatedHeight = function (cell) {\n      var paddingTop = getProp(cell, 'padding-top', 0);\n      var paddingBottom = getProp(cell, 'padding-bottom', 0);\n      var borderTop = getProp(cell, 'border-top-width', 0);\n      var borderBottom = getProp(cell, 'border-bottom-width', 0);\n      var height = cell.dom().getBoundingClientRect().height;\n      var boxSizing = get$1(cell, 'box-sizing');\n      var borders = borderTop + borderBottom;\n      return boxSizing === 'border-box' ? height : height - paddingTop - paddingBottom - borders;\n    };\n    var getWidth = function (cell) {\n      return getProp(cell, 'width', get$4(cell));\n    };\n    var getHeight = function (cell) {\n      return needManualCalc() ? getCalculatedHeight(cell) : getProp(cell, 'height', get$3(cell));\n    };\n    var RuntimeSize = {\n      getWidth: getWidth,\n      getHeight: getHeight\n    };\n\n    var genericSizeRegex = /(\\d+(\\.\\d+)?)(\\w|%)*/;\n    var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var pixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRaw(cell, 'height').getOrThunk(function () {\n        return RuntimeSize.getHeight(cell) + 'px';\n      });\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = TableLookup.table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseInt(value, 10);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$3(cell);\n      }\n      return normalizePixelSize(value, cell, get$3, setHeight);\n    };\n    var get$5 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getSpan = function (cell, type) {\n      return has(cell, type) ? parseInt(get(cell, type), 10) : 1;\n    };\n    var getRawWidth = function (element) {\n      var cssWidth = getRaw(element, 'width');\n      return cssWidth.fold(function () {\n        return Option.from(get(element, 'width'));\n      }, function (width) {\n        return Option.some(width);\n      });\n    };\n    var normalizePercentageWidth = function (cellWidth, tableSize) {\n      return cellWidth / tableSize.pixelWidth() * 100;\n    };\n    var choosePercentageSize = function (element, width, tableSize) {\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        return parseFloat(percentMatch[1]);\n      } else {\n        var intWidth = get$4(element);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }\n    };\n    var getPercentageWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        var intWidth = get$4(cell);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }, function (w) {\n        return choosePercentageSize(cell, w, tableSize);\n      });\n    };\n    var normalizePixelWidth = function (cellWidth, tableSize) {\n      return cellWidth / 100 * tableSize.pixelWidth();\n    };\n    var choosePixelSize = function (element, width, tableSize) {\n      var pixelMatch = pixelBasedSizeRegex.exec(width);\n      if (pixelMatch !== null) {\n        return parseInt(pixelMatch[1], 10);\n      }\n      var percentMatch = percentageBasedSizeRegex.exec(width);\n      if (percentMatch !== null) {\n        var floatWidth = parseFloat(percentMatch[1]);\n        return normalizePixelWidth(floatWidth, tableSize);\n      }\n      return get$4(element);\n    };\n    var getPixelWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        return get$4(cell);\n      }, function (w) {\n        return choosePixelSize(cell, w, tableSize);\n      });\n    };\n    var getHeight$1 = function (cell) {\n      return get$5(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth(cell);\n      return width.bind(function (w) {\n        var match = genericSizeRegex.exec(w);\n        if (match !== null) {\n          return Option.some({\n            width: constant(parseFloat(match[1])),\n            unit: constant(match[3])\n          });\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var Sizes = {\n      percentageBasedSizeRegex: constant(percentageBasedSizeRegex),\n      pixelBasedSizeRegex: constant(pixelBasedSizeRegex),\n      setPixelWidth: setPixelWidth,\n      setPercentageWidth: setPercentageWidth,\n      setHeight: setHeight,\n      getPixelWidth: getPixelWidth,\n      getPercentageWidth: getPercentageWidth,\n      getGenericWidth: getGenericWidth,\n      setGenericWidth: setGenericWidth,\n      getHeight: getHeight$1,\n      getRawWidth: getRawWidth\n    };\n\n    var halve = function (main, other) {\n      var width = Sizes.getGenericWidth(main);\n      width.each(function (w) {\n        var newWidth = w.width() / 2;\n        Sizes.setGenericWidth(main, newWidth, w.unit());\n        Sizes.setGenericWidth(other, newWidth, w.unit());\n      });\n    };\n    var CellMutations = { halve: halve };\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: constant(left),\n        top: constant(top),\n        translate: translate\n      };\n    };\n    var Position = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return Position(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      return a !== undefined ? a : b !== undefined ? b : 0;\n    };\n    var absolute = function (element) {\n      var doc = element.dom().ownerDocument;\n      var body = doc.body;\n      var win = doc.defaultView;\n      var html = doc.documentElement;\n      var scrollTop = firstDefinedOrZero(win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom();\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      if (body === dom) {\n        return Position(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return Position(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = Immutable('row', 'y');\n    var colInfo = Immutable('col', 'x');\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left() + getOuter$1(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left();\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop = function (cell) {\n      return absolute(cell).top();\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell) + getOuter(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: function (optElements) {\n        return findPositions(getTopEdge, getBottomEdge, optElements);\n      },\n      edge: getTop\n    };\n    var ltr = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: function (optElements) {\n        return findPositions(getLeftEdge, getRightEdge, optElements);\n      }\n    };\n    var rtl = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: function (optElements) {\n        return findPositions(getRightEdge, getLeftEdge, optElements);\n      }\n    };\n    var BarPositions = {\n      height: height,\n      rtl: rtl,\n      ltr: ltr\n    };\n\n    var ResizeDirection = {\n      ltr: BarPositions.ltr,\n      rtl: BarPositions.rtl\n    };\n\n    function TableDirection (directionAt) {\n      var auto = function (table) {\n        return directionAt(table).isRtl() ? ResizeDirection.rtl : ResizeDirection.ltr;\n      };\n      var delta = function (amount, table) {\n        return auto(table).delta(amount, table);\n      };\n      var positions = function (cols, table) {\n        return auto(table).positions(cols, table);\n      };\n      var edge = function (cell) {\n        return auto(cell).edge(cell);\n      };\n      return {\n        delta: delta,\n        edge: edge,\n        positions: positions\n      };\n    }\n\n    var getGridSize = function (table) {\n      var input = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(input);\n      return warehouse.grid();\n    };\n    var TableGridSize = { getGridSize: getGridSize };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove(element, property);\n      } else {\n        set(element, property, value);\n      }\n    };\n    var render = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var renderSection = function (gridSection, sectionName) {\n        var section = child$2(table, sectionName).getOrThunk(function () {\n          var tb = Element.fromTag(sectionName, owner(table).dom());\n          append(table, tb);\n          return tb;\n        });\n        empty(section);\n        var rows = map(gridSection, function (row) {\n          if (row.isNew()) {\n            newRows.push(row.element());\n          }\n          var tr = row.element();\n          empty(tr);\n          each(row.cells(), function (cell) {\n            if (cell.isNew()) {\n              newCells.push(cell.element());\n            }\n            setIfNot(cell.element(), 'colspan', cell.colspan(), 1);\n            setIfNot(cell.element(), 'rowspan', cell.rowspan(), 1);\n            append(tr, cell.element());\n          });\n          return tr;\n        });\n        append$1(section, rows);\n      };\n      var removeSection = function (sectionName) {\n        child$2(table, sectionName).each(remove$2);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      each(grid, function (row) {\n        switch (row.section()) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: constant(newRows),\n        newCells: constant(newCells)\n      };\n    };\n    var copy$2 = function (grid) {\n      var rows = map(grid, function (row) {\n        var tr = shallow(row.element());\n        each(row.cells(), function (cell) {\n          var clonedCell = deep(cell.element());\n          setIfNot(clonedCell, 'colspan', cell.colspan(), 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan(), 1);\n          append(tr, clonedCell);\n        });\n        return tr;\n      });\n      return rows;\n    };\n    var Redraw = {\n      render: render,\n      copy: copy$2\n    };\n\n    var read = function (element, attr) {\n      var value = get(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$3 = function (element, attr, id) {\n      var nu = filter(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom().classList !== undefined;\n    };\n    var get$6 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add(element, 'class', clazz);\n    };\n    var remove$4 = function (element, clazz) {\n      return remove$3(element, 'class', clazz);\n    };\n\n    var add$2 = function (element, clazz) {\n      if (supports(element)) {\n        element.dom().classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom().classList : get$6(element);\n      if (classList.length === 0) {\n        remove(element, 'class');\n      }\n    };\n    var remove$5 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom().classList;\n        classList.remove(clazz);\n      } else {\n        remove$4(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has$1 = function (element, clazz) {\n      return supports(element) && element.dom().classList.contains(clazz);\n    };\n\n    var repeat = function (repititions, f) {\n      var r = [];\n      for (var i = 0; i < repititions; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var range = function (start, end) {\n      var r = [];\n      for (var i = start; i < end; i++) {\n        r.push(i);\n      }\n      return r;\n    };\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Option.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Option.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Option.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n\n    var columns = function (warehouse) {\n      var grid = warehouse.grid();\n      var cols = range(0, grid.columns());\n      var rowsArr = range(0, grid.rows());\n      return map(cols, function (col) {\n        var getBlock = function () {\n          return bind(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column() === col;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.colspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var decide = function (getBlock, isSingle, getFallback) {\n      var inBlock = getBlock();\n      var singleInBlock = find(inBlock, isSingle);\n      var detailOption = singleInBlock.orThunk(function () {\n        return Option.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element();\n      });\n    };\n    var rows$1 = function (warehouse) {\n      var grid = warehouse.grid();\n      var rowsArr = range(0, grid.rows());\n      var cols = range(0, grid.columns());\n      return map(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row() === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var Blocks = {\n      columns: columns,\n      rows: rows$1\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles = css('ephox-snooker');\n    var Styles = { resolve: styles.resolve };\n\n    var col = function (column, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var row$1 = function (r, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var Bar = {\n      col: col,\n      row: row$1\n    };\n\n    var resizeBar = Styles.resolve('resizer-bar');\n    var resizeRowBar = Styles.resolve('resizer-rows');\n    var resizeColBar = Styles.resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var destroy = function (wire) {\n      var previous = descendants$1(wire.parent(), '.' + resizeBar);\n      each(previous, remove$2);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each(positions, function (cpOption, i) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add$2(bar, resizeBar);\n          append(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = Bar.col(cp.col(), cp.x() - origin.left(), position.top() - origin.top(), BAR_THICKNESS, tableHeight);\n        add$2(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = Bar.row(cp.row(), position.left() - origin.left(), cp.y() - origin.top(), tableWidth, BAR_THICKNESS);\n        add$2(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (wire, table, rows, cols, hdirection, vdirection) {\n      var position = absolute(table);\n      var rowPositions = rows.length > 0 ? hdirection.positions(rows, table) : [];\n      refreshRow(wire, rowPositions, position, getOuter$1(table));\n      var colPositions = cols.length > 0 ? vdirection.positions(cols, table) : [];\n      refreshCol(wire, colPositions, position, getOuter(table));\n    };\n    var refresh = function (wire, table, hdirection, vdirection) {\n      destroy(wire);\n      var list = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(list);\n      var rows = Blocks.rows(warehouse);\n      var cols = Blocks.columns(warehouse);\n      refreshGrid(wire, table, rows, cols, hdirection, vdirection);\n    };\n    var each$2 = function (wire, f) {\n      var bars = descendants$1(wire.parent(), '.' + resizeBar);\n      each(bars, f);\n    };\n    var hide = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has$1(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has$1(element, resizeColBar);\n    };\n    var Bars = {\n      refresh: refresh,\n      hide: hide,\n      show: show,\n      destroy: destroy,\n      isRowBar: isRowBar,\n      isColBar: isColBar\n    };\n\n    var addCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      var before = cells.slice(0, index);\n      var after = cells.slice(index);\n      var newCells = before.concat([cell]).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return rowcells(cells, gridRow.section());\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells();\n      var r = map(cells, f);\n      return rowcells(r, gridRow.section());\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells()[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element();\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells().length;\n    };\n    var GridRow = {\n      addCell: addCell,\n      setCells: setCells,\n      mutateCell: mutateCell,\n      getCell: getCell,\n      getCellElement: getCellElement,\n      mapCells: mapCells,\n      cellLength: cellLength\n    };\n\n    var getColumn = function (grid, index) {\n      return map(grid, function (row) {\n        return GridRow.getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element(), x.element());\n      });\n      return index.fold(function () {\n        return xs.length;\n      }, function (ind) {\n        return ind;\n      });\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var restOfRow = getRow(grid, row).cells().slice(column);\n      var endColIndex = findDiff(restOfRow, comparator);\n      var restOfColumn = getColumn(grid, column).slice(row);\n      var endRowIndex = findDiff(restOfColumn, comparator);\n      return {\n        colspan: constant(endColIndex),\n        rowspan: constant(endRowIndex)\n      };\n    };\n    var TableGrid = { subgrid: subgrid };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map(grid, function (row, ri) {\n        return map(row.cells(), function (col, ci) {\n          return false;\n        });\n      });\n      var updateSeen = function (ri, ci, rowspan, colspan) {\n        for (var r = ri; r < ri + rowspan; r++) {\n          for (var c = ci; c < ci + colspan; c++) {\n            seen[r][c] = true;\n          }\n        }\n      };\n      return map(grid, function (row, ri) {\n        var details = bind(row.cells(), function (cell, ci) {\n          if (seen[ri][ci] === false) {\n            var result = TableGrid.subgrid(grid, ri, ci, comparator);\n            updateSeen(ri, ci, result.rowspan(), result.colspan());\n            return [detailnew(cell.element(), result.rowspan(), result.colspan(), cell.isNew())];\n          } else {\n            return [];\n          }\n        });\n        return rowdetails(details, row.section());\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      for (var i = 0; i < warehouse.grid().rows(); i++) {\n        var rowCells = [];\n        for (var j = 0; j < warehouse.grid().columns(); j++) {\n          var element = Warehouse.getAt(warehouse, i, j).map(function (item) {\n            return elementnew(item.element(), isNew);\n          }).getOrThunk(function () {\n            return elementnew(generators.gap(), true);\n          });\n          rowCells.push(element);\n        }\n        var row = rowcells(rowCells, warehouse.all()[i].section());\n        grid.push(row);\n      }\n      return grid;\n    };\n    var Transitions = {\n      toDetails: toDetails,\n      toGrid: toGrid\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return Transitions.toGrid(warehouse, generators, false);\n    };\n    var deriveRows = function (rendered, generators) {\n      var findRow = function (details) {\n        var rowOfCells = findMap(details, function (detail) {\n          return parent(detail.element()).map(function (row) {\n            var isNew = parent(row).isNone();\n            return elementnew(row, isNew);\n          });\n        });\n        return rowOfCells.getOrThunk(function () {\n          return elementnew(generators.row(), true);\n        });\n      };\n      return map(rendered, function (details) {\n        var row = findRow(details.details());\n        return rowdatanew(row.element(), details.details(), details.section(), row.isNew());\n      });\n    };\n    var toDetailList = function (grid, generators) {\n      var rendered = Transitions.toDetails(grid, eq);\n      return deriveRows(rendered, generators);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      var all = flatten(map(warehouse.all(), function (r) {\n        return r.cells();\n      }));\n      return find(all, function (e) {\n        return eq(element, e.element());\n      });\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, direction) {\n        var input = DetailsList.fromTable(table);\n        var warehouse = Warehouse.generate(input);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq, genWrappers(generators));\n          var grid = toDetailList(result.grid(), generators);\n          return {\n            grid: constant(grid),\n            cursor: result.cursor\n          };\n        });\n        return output.fold(function () {\n          return Option.none();\n        }, function (out) {\n          var newElements = Redraw.render(table, out.grid());\n          adjustment(table, out.grid(), direction);\n          postAction(table);\n          Bars.refresh(wire, table, BarPositions.height, direction);\n          return Option.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onCell = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell);\n      });\n    };\n    var onPaste = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          var value = __assign(__assign({}, details), {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n          return value;\n        });\n      });\n    };\n    var onPasteRows = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some({\n        cells: cells,\n        generators: target.generators,\n        clipboard: target.clipboard\n      }) : Option.none();\n    };\n    var onMergable = function (_warehouse, target) {\n      return target.mergable();\n    };\n    var onUnmergable = function (_warehouse, target) {\n      return target.unmergable();\n    };\n    var onCells = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(cells) : Option.none();\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var fromOption = function (opt, err) {\n      return opt.fold(function () {\n        return error(err);\n      }, value);\n    };\n    var Result = {\n      value: value,\n      error: error,\n      fromOption: fromOption\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row() >= gridA.length || startAddress.column() > GridRow.cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row() + ', column: ' + startAddress.column());\n      }\n      var rowRemainder = gridA.slice(startAddress.row());\n      var colRemainder = rowRemainder[0].cells().slice(startAddress.column());\n      var colRequired = GridRow.cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: constant(rowRemainder.length - rowRequired),\n        colDelta: constant(colRemainder.length - colRequired)\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = GridRow.cellLength(gridA[0]);\n      var colLengthB = GridRow.cellLength(gridB[0]);\n      return {\n        rowDelta: constant(0),\n        colDelta: constant(colLengthA - colLengthB)\n      };\n    };\n    var fill = function (cells, generator) {\n      return map(cells, function () {\n        return elementnew(generator.cell(), true);\n      });\n    };\n    var rowFill = function (grid, amount, generator) {\n      return grid.concat(repeat(amount, function (_row) {\n        return GridRow.setCells(grid[grid.length - 1], fill(grid[grid.length - 1].cells(), generator));\n      }));\n    };\n    var colFill = function (grid, amount, generator) {\n      return map(grid, function (row) {\n        return GridRow.setCells(row, row.cells().concat(fill(range(0, amount), generator)));\n      });\n    };\n    var tailor = function (gridA, delta, generator) {\n      var fillCols = delta.colDelta() < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta() < 0 ? rowFill : identity;\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta()), generator);\n      var tailoredGrid = fillRows(modifiedCols, Math.abs(delta.rowDelta()), generator);\n      return tailoredGrid;\n    };\n    var Fitment = {\n      measure: measure,\n      measureWidth: measureWidth,\n      tailor: tailor\n    };\n\n    var merge = function (grid, bounds, comparator, substitution) {\n      if (grid.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          GridRow.mutateCell(grid[i], j, elementnew(substitution(), false));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var first = true;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n          var current = GridRow.getCellElement(grid[i], j);\n          var isToReplace = comparator(current, target);\n          if (isToReplace === true && first === false) {\n            GridRow.mutateCell(grid[i], j, elementnew(substitution(), true));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element(), cell.element());\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid.length) {\n        var rowPrevCells = grid[index - 1].cells();\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each(cells, function (cell) {\n          var replacement = Option.none();\n          var _loop_1 = function (i) {\n            var _loop_2 = function (j) {\n              var current = grid[i].cells()[j];\n              var isToReplace = comparator(current.element(), cell.element());\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Option.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  GridRow.mutateCell(grid[i], j, elementnew(sub, true));\n                });\n              }\n            };\n            for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n              _loop_2(j);\n            }\n          };\n          for (var i = index; i < grid.length; i++) {\n            _loop_1(i);\n          }\n        });\n      }\n      return grid;\n    };\n    var MergingOperations = {\n      merge: merge,\n      unmerge: unmerge,\n      splitRows: splitRows\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = GridRow.getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element());\n      var currentRow = grid[row];\n      return grid.length > 1 && GridRow.cellLength(currentRow) > 1 && (col > 0 && matching(GridRow.getCellElement(currentRow, col - 1)) || col < currentRow.cells().length - 1 && matching(GridRow.getCellElement(currentRow, col + 1)) || row > 0 && matching(GridRow.getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(GridRow.getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator) {\n      var startRow = startAddress.row();\n      var startCol = startAddress.column();\n      var mergeHeight = gridB.length;\n      var mergeWidth = GridRow.cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth;\n      for (var r = startRow; r < endRow; r++) {\n        for (var c = startCol; c < endCol; c++) {\n          if (isSpanning(gridA, r, c, comparator)) {\n            MergingOperations.unmerge(gridA, GridRow.getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var newCell = GridRow.getCellElement(gridB[r - startRow], c - startCol);\n          var replacement = generator.replace(newCell);\n          GridRow.mutateCell(gridA[r], c, elementnew(replacement, true));\n        }\n      }\n      return gridA;\n    };\n    var merge$1 = function (startAddress, gridA, gridB, generator, comparator) {\n      var result = Fitment.measure(startAddress, gridA, gridB);\n      return result.map(function (delta) {\n        var fittedGrid = Fitment.tailor(gridA, delta, generator);\n        return mergeTables(startAddress, fittedGrid, gridB, generator, comparator);\n      });\n    };\n    var insert = function (index, gridA, gridB, generator, comparator) {\n      MergingOperations.splitRows(gridA, index, comparator, generator.cell);\n      var delta = Fitment.measureWidth(gridB, gridA);\n      var fittedNewGrid = Fitment.tailor(gridB, delta, generator);\n      var secondDelta = Fitment.measureWidth(gridA, fittedNewGrid);\n      var fittedOldGrid = Fitment.tailor(gridA, secondDelta, generator);\n      return fittedOldGrid.slice(0, index).concat(fittedNewGrid).concat(fittedOldGrid.slice(index, fittedOldGrid.length));\n    };\n    var TableMerge = {\n      merge: merge$1,\n      insert: insert\n    };\n\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[example], function (ex, c) {\n        var withinSpan = index > 0 && index < grid.length && comparator(GridRow.getCellElement(grid[index - 1], c), GridRow.getCellElement(grid[index], c));\n        var ret = withinSpan ? GridRow.getCell(grid[index], c) : elementnew(substitution(ex.element(), comparator), true);\n        return ret;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map(grid, function (row) {\n        var withinSpan = index > 0 && index < GridRow.cellLength(row) && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n        var sub = withinSpan ? GridRow.getCell(row, index) : elementnew(substitution(GridRow.getCellElement(row, example), comparator), true);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoColumns = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleCol + 1;\n      return map(grid, function (row, i) {\n        var isTargetCell = i === exampleRow;\n        var sub = isTargetCell ? elementnew(substitution(GridRow.getCellElement(row, exampleCol), comparator), true) : GridRow.getCell(row, exampleCol);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoRows = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleRow + 1;\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[exampleRow], function (ex, i) {\n        var isTargetCell = i === exampleCol;\n        return isTargetCell ? elementnew(substitution(ex.element(), comparator), true) : ex;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var deleteColumnsAt = function (grid, start, finish) {\n      var rows = map(grid, function (row) {\n        var cells = row.cells().slice(0, start).concat(row.cells().slice(finish + 1));\n        return rowcells(cells, row.section());\n      });\n      return filter(rows, function (row) {\n        return row.cells().length > 0;\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      return grid.slice(0, start).concat(grid.slice(finish + 1));\n    };\n    var ModificationOperations = {\n      insertRowAt: insertRowAt,\n      insertColumnAt: insertColumnAt,\n      splitCellIntoColumns: splitCellIntoColumns,\n      splitCellIntoRows: splitCellIntoRows,\n      deleteRowsAt: deleteRowsAt,\n      deleteColumnsAt: deleteColumnsAt\n    };\n\n    var replaceIn = function (grid, targets, comparator, substitution) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element(), target.element());\n        });\n      };\n      return map(grid, function (row) {\n        return GridRow.mapCells(row, function (cell) {\n          return isTarget(cell) ? elementnew(substitution(cell.element(), comparator), true) : cell;\n        });\n      });\n    };\n    var notStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return GridRow.getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(GridRow.getCellElement(grid[rowIndex - 1], colIndex), GridRow.getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n    };\n    var replaceColumn = function (grid, index, comparator, substitution) {\n      var targets = bind(grid, function (row, i) {\n        var alreadyAdded = notStartRow(grid, i, index, comparator) || notStartColumn(row, index, comparator);\n        return alreadyAdded ? [] : [GridRow.getCell(row, index)];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var replaceRow = function (grid, index, comparator, substitution) {\n      var targetRow = grid[index];\n      var targets = bind(targetRow.cells(), function (item, i) {\n        var alreadyAdded = notStartRow(grid, index, i, comparator) || notStartColumn(targetRow, i, comparator);\n        return alreadyAdded ? [] : [item];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var TransformOperations = {\n      replaceColumn: replaceColumn,\n      replaceRow: replaceRow\n    };\n\n    var adt = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    var ColumnContext = __assign({}, adt);\n\n    var neighbours$1 = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize) {\n      var result = input.slice(0);\n      var context = neighbours$1(input, column);\n      var zero = function (array) {\n        return map(array, constant(0));\n      };\n      var onNone = constant(zero(result));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onChange = function (index, next) {\n        if (step >= 0) {\n          var newNext = Math.max(tableSize.minCellWidth(), result[next] - step);\n          return zero(result.slice(0, index)).concat([\n            step,\n            newNext - result[next]\n          ]).concat(zero(result.slice(next + 1)));\n        } else {\n          var newThis = Math.max(tableSize.minCellWidth(), result[index] + step);\n          var diffx = result[index] - newThis;\n          return zero(result.slice(0, index)).concat([\n            newThis - result[index],\n            diffx\n          ]).concat(zero(result.slice(next + 1)));\n        }\n      };\n      var onLeft = onChange;\n      var onMiddle = function (_prev, index, next) {\n        return onChange(index, next);\n      };\n      var onRight = function (_prev, index) {\n        if (step >= 0) {\n          return zero(result.slice(0, index)).concat([step]);\n        } else {\n          var size = Math.max(tableSize.minCellWidth(), result[index] + step);\n          return zero(result.slice(0, index)).concat([size - result[index]]);\n        }\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n    var Deltas = { determine: determine };\n\n    var getSpan$1 = function (cell, type) {\n      return has(cell, type) && parseInt(get(cell, type), 10) > 1;\n    };\n    var hasColspan = function (cell) {\n      return getSpan$1(cell, 'colspan');\n    };\n    var hasRowspan = function (cell) {\n      return getSpan$1(cell, 'rowspan');\n    };\n    var getInt = function (element, property) {\n      return parseInt(get$1(element, property), 10);\n    };\n    var CellUtils = {\n      hasColspan: hasColspan,\n      hasRowspan: hasRowspan,\n      minWidth: constant(10),\n      minHeight: constant(10),\n      getInt: getInt\n    };\n\n    var getRaw$1 = function (cell, property, getter) {\n      return getRaw(cell, property).fold(function () {\n        return getter(cell) + 'px';\n      }, function (raw) {\n        return raw;\n      });\n    };\n    var getRawW = function (cell, tableSize) {\n      return getRaw$1(cell, 'width', function (e) {\n        return Sizes.getPixelWidth(e, tableSize);\n      });\n    };\n    var getRawH = function (cell) {\n      return getRaw$1(cell, 'height', Sizes.getHeight);\n    };\n    var getWidthFrom = function (warehouse, direction, getWidth, fallback, tableSize) {\n      var columns = Blocks.columns(warehouse);\n      var backups = map(columns, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(columns, function (cellOption, c) {\n        var columnCell = cellOption.filter(not(CellUtils.hasColspan));\n        return columnCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getWidth(cell, tableSize);\n        });\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, getRawW, getDeduced, tableSize);\n    };\n    var getPercentageWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      }, tableSize);\n    };\n    var getPixelWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPixelWidth, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      }, tableSize);\n    };\n    var getHeightFrom = function (warehouse, direction, getHeight, fallback) {\n      var rows = Blocks.rows(warehouse);\n      var backups = map(rows, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(rows, function (cellOption, c) {\n        var rowCell = cellOption.filter(not(CellUtils.hasRowspan));\n        return rowCell.fold(function () {\n          var deduced = deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getHeight(cell);\n        });\n      });\n    };\n    var getPixelHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, Sizes.getHeight, function (deduced) {\n        return deduced.getOrThunk(CellUtils.minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, getRawH, getDeduced);\n    };\n    var ColumnSizes = {\n      getRawWidths: getRawWidths,\n      getPixelWidths: getPixelWidths,\n      getPercentageWidths: getPercentageWidths,\n      getPixelHeights: getPixelHeights,\n      getRawHeights: getRawHeights\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidth = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var width = total(cell.column(), cell.column() + cell.colspan(), widths);\n        return {\n          element: cell.element,\n          width: constant(width),\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateHeight = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var height = total(cell.row(), cell.row() + cell.rowspan(), heights);\n        return {\n          element: cell.element,\n          height: constant(height),\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map(warehouse.all(), function (row, i) {\n        return {\n          element: row.element,\n          height: constant(heights[i])\n        };\n      });\n    };\n    var Recalculations = {\n      recalculateWidth: recalculateWidth,\n      recalculateHeight: recalculateHeight,\n      matchRowHeight: matchRowHeight\n    };\n\n    var percentageSize = function (width, element) {\n      var floatWidth = parseFloat(width);\n      var pixelWidth = get$4(element);\n      var getCellDelta = function (delta) {\n        return delta / pixelWidth * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return CellUtils.minWidth() / pixelWidth * 100;\n      };\n      var setTableWidth = function (table, _newWidths, delta) {\n        var ratio = delta / 100;\n        var change = ratio * floatWidth;\n        Sizes.setPercentageWidth(table, floatWidth + change);\n      };\n      return {\n        width: constant(floatWidth),\n        pixelWidth: constant(pixelWidth),\n        getWidths: ColumnSizes.getPercentageWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: Sizes.setPercentageWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var pixelSize = function (width) {\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(CellUtils.minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var setTableWidth = function (table, newWidths, _delta) {\n        var total = foldr(newWidths, function (b, a) {\n          return b + a;\n        }, 0);\n        Sizes.setPixelWidth(table, total);\n      };\n      return {\n        width: constant(width),\n        pixelWidth: constant(width),\n        getWidths: ColumnSizes.getPixelWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: CellUtils.minWidth,\n        setElementWidth: Sizes.setPixelWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var chooseSize = function (element, width) {\n      var percentMatch = Sizes.percentageBasedSizeRegex().exec(width);\n      if (percentMatch !== null) {\n        return percentageSize(percentMatch[1], element);\n      }\n      var pixelMatch = Sizes.pixelBasedSizeRegex().exec(width);\n      if (pixelMatch !== null) {\n        var intWidth = parseInt(pixelMatch[1], 10);\n        return pixelSize(intWidth);\n      }\n      var fallbackWidth = get$4(element);\n      return pixelSize(fallbackWidth);\n    };\n    var getTableSize = function (element) {\n      var width = Sizes.getRawWidth(element);\n      return width.fold(function () {\n        var fallbackWidth = get$4(element);\n        return pixelSize(fallbackWidth);\n      }, function (w) {\n        return chooseSize(element, w);\n      });\n    };\n    var TableSize = { getTableSize: getTableSize };\n\n    var getWarehouse$1 = function (list) {\n      return Warehouse.generate(list);\n    };\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var getTableWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return getWarehouse$1(list);\n    };\n    var adjustWidth = function (table, delta, index, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var step = tableSize.getCellDelta(delta);\n      var warehouse = getTableWarehouse(table);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var deltas = Deltas.determine(widths, index, step, tableSize);\n      var newWidths = map(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      var newSizes = Recalculations.recalculateWidth(warehouse, newWidths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (index === warehouse.grid().columns() - 1) {\n        tableSize.setTableWidth(table, newWidths, step);\n      }\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = getTableWarehouse(table);\n      var heights = ColumnSizes.getPixelHeights(warehouse, direction);\n      var newHeights = map(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, CellUtils.minHeight()) : dy;\n      });\n      var newCellSizes = Recalculations.recalculateHeight(warehouse, newHeights);\n      var newRowSizes = Recalculations.matchRowHeight(warehouse, newHeights);\n      each(newRowSizes, function (row) {\n        Sizes.setHeight(row.element(), row.height());\n      });\n      each(newCellSizes, function (cell) {\n        Sizes.setHeight(cell.element(), cell.height());\n      });\n      var total = sumUp(newHeights);\n      Sizes.setHeight(table, total);\n    };\n    var adjustWidthTo = function (table, list, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var warehouse = getWarehouse$1(list);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var newSizes = Recalculations.recalculateWidth(warehouse, widths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (newSizes.length > 0) {\n        tableSize.setTableWidth(table, widths, tableSize.getCellDelta(0));\n      }\n    };\n    var Adjustments = {\n      adjustWidth: adjustWidth,\n      adjustHeight: adjustHeight,\n      adjustWidthTo: adjustWidthTo\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0) {\n        throw new Error('You must specify at least one required field.');\n      }\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd) {\n          reqMessage(required, keys$1);\n        }\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0) {\n          invalidTypeMessage(invalidKeys, pred.label);\n        }\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter(keys, function (key) {\n        return !contains(required, key);\n      });\n      if (unsupported.length > 0) {\n        unsuppMessage(unsupported);\n      }\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var verifyGenerators = exactly([\n      'cell',\n      'row',\n      'replace',\n      'gap'\n    ]);\n    var elementToData = function (element) {\n      var colspan = has(element, 'colspan') ? parseInt(get(element, 'colspan'), 10) : 1;\n      var rowspan = has(element, 'rowspan') ? parseInt(get(element, 'rowspan'), 10) : 1;\n      return {\n        element: constant(element),\n        colspan: constant(colspan),\n        rowspan: constant(rowspan)\n      };\n    };\n    var modification = function (generators, toData) {\n      if (toData === void 0) {\n        toData = elementToData;\n      }\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var nu = function (data) {\n        return generators.cell(data);\n      };\n      var nuFrom = function (element) {\n        var data = toData(element);\n        return nu(data);\n      };\n      var add = function (element) {\n        var replacement = nuFrom(element);\n        if (position.get().isNone()) {\n          position.set(Option.some(replacement));\n        }\n        recent = Option.some({\n          item: element,\n          replacement: replacement\n        });\n        return replacement;\n      };\n      var recent = Option.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return {\n        getOrInit: getOrInit,\n        cursor: position.get\n      };\n    };\n    var transform = function (scope, tag) {\n      return function (generators) {\n        var position = Cell(Option.none());\n        verifyGenerators(generators);\n        var list = [];\n        var find$1 = function (element, comparator) {\n          return find(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var attrs = { scope: scope };\n          var cell = generators.replace(element, tag, attrs);\n          list.push({\n            item: element,\n            sub: cell\n          });\n          if (position.get().isNone()) {\n            position.set(Option.some(cell));\n          }\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          return find$1(element, comparator).fold(function () {\n            return makeNew(element);\n          }, function (p) {\n            return comparator(element, p.item) ? p.sub : makeNew(element);\n          });\n        };\n        return {\n          replaceOrInit: replaceOrInit,\n          cursor: position.get\n        };\n      };\n    };\n    var merging = function (generators) {\n      verifyGenerators(generators);\n      var position = Cell(Option.none());\n      var combine = function (cell) {\n        if (position.get().isNone()) {\n          position.set(Option.some(cell));\n        }\n        return function () {\n          var raw = generators.cell({\n            element: constant(cell),\n            colspan: constant(1),\n            rowspan: constant(1)\n          });\n          remove$1(raw, 'width');\n          remove$1(cell, 'width');\n          return raw;\n        };\n      };\n      return {\n        combine: combine,\n        cursor: position.get\n      };\n    };\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains(blockList, tagName);\n    };\n    var isFormatting = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'address',\n        'pre',\n        'p',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isHeading = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isContainer = function (universe, item) {\n      return contains([\n        'div',\n        'li',\n        'td',\n        'th',\n        'blockquote',\n        'body',\n        'caption'\n      ], universe.property().name(item));\n    };\n    var isEmptyTag = function (universe, item) {\n      return contains([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n    var isFrame = function (universe, item) {\n      return universe.property().name(item) === 'iframe';\n    };\n    var isInline = function (universe, item) {\n      return !(isBlock(universe, item) || isEmptyTag(universe, item)) && universe.property().name(item) !== 'li';\n    };\n    var Structure = {\n      isBlock: isBlock,\n      isList: isList,\n      isFormatting: isFormatting,\n      isHeading: isHeading,\n      isContainer: isContainer,\n      isEmptyTag: isEmptyTag,\n      isFrame: isFrame,\n      isInline: isInline\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock$1 = function (element) {\n      return Structure.isBlock(universe$1, element);\n    };\n    var isList$1 = function (element) {\n      return Structure.isList(universe$1, element);\n    };\n    var isFormatting$1 = function (element) {\n      return Structure.isFormatting(universe$1, element);\n    };\n    var isHeading$1 = function (element) {\n      return Structure.isHeading(universe$1, element);\n    };\n    var isContainer$1 = function (element) {\n      return Structure.isContainer(universe$1, element);\n    };\n    var isEmptyTag$1 = function (element) {\n      return Structure.isEmptyTag(universe$1, element);\n    };\n    var isFrame$1 = function (element) {\n      return Structure.isFrame(universe$1, element);\n    };\n    var isInline$1 = function (element) {\n      return Structure.isInline(universe$1, element);\n    };\n    var DomStructure = {\n      isBlock: isBlock$1,\n      isList: isList$1,\n      isFormatting: isFormatting$1,\n      isHeading: isHeading$1,\n      isContainer: isContainer$1,\n      isEmptyTag: isEmptyTag$1,\n      isFrame: isFrame$1,\n      isInline: isInline$1\n    };\n\n    var merge$2 = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$2(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor(el, DomStructure.isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (DomStructure.isBlock(rightSibling)) {\n            return true;\n          }\n          if (DomStructure.isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n          return false;\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || DomStructure.isBlock(parent) && !eq(cell, parent) ? [] : [Element.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind(cells, function (cell) {\n          var children$1 = children(cell);\n          return advancedBr(children$1) ? [] : children$1.concat(markCell(cell));\n        });\n        return content.length === 0 ? [Element.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append$1(cells[0], contents);\n    };\n    var TableContent = { merge: merge$2 };\n\n    var prune = function (table) {\n      var cells = TableLookup.cells(table);\n      if (cells.length === 0) {\n        remove$2(table);\n      }\n    };\n    var outcome = Immutable('grid', 'cursor');\n    var elementFromGrid = function (grid, row, column) {\n      return findIn(grid, row, column).orThunk(function () {\n        return findIn(grid, 0, 0);\n      });\n    };\n    var findIn = function (grid, row, column) {\n      return Option.from(grid[row]).bind(function (r) {\n        return Option.from(r.cells()[column]).bind(function (c) {\n          return Option.from(c.element());\n        });\n      });\n    };\n    var bundle = function (grid, row, column) {\n      return outcome(grid, findIn(grid, row, column));\n    };\n    var uniqueRows = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.row() === detail.row();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.row() - detailB.row();\n      });\n    };\n    var uniqueColumns = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.column() === detail.column();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.column() - detailB.column();\n      });\n    };\n    var insertRowBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var example = details[0].row();\n      var targetIndex = details[0].row();\n      var rows = uniqueRows(details);\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertRowAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row() + detail.rowspan();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var example = rows[rows.length - 1].row();\n      var targetIndex = rows[rows.length - 1].row() + rows[rows.length - 1].rowspan();\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertColumnBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsBefore = function (grid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var example = columns[0].column();\n      var targetIndex = columns[0].column();\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var insertColumnAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column() + detail.colspan();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsAfter = function (grid, details, comparator, genWrappers) {\n      var example = details[details.length - 1].column();\n      var targetIndex = details[details.length - 1].column() + details[details.length - 1].colspan();\n      var columns = uniqueColumns(details);\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var makeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var makeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoColumns$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoColumns(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoRows$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoRows(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var eraseColumns = function (grid, details, _comparator, _genWrappers) {\n      var columns = uniqueColumns(details);\n      var newGrid = ModificationOperations.deleteColumnsAt(grid, columns[0].column(), columns[columns.length - 1].column());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var eraseRows = function (grid, details, _comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = ModificationOperations.deleteRowsAt(grid, rows[0].row(), rows[rows.length - 1].row());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var mergeCells = function (grid, mergable, comparator, _genWrappers) {\n      var cells = mergable.cells();\n      TableContent.merge(cells);\n      var newGrid = MergingOperations.merge(grid, mergable.bounds(), comparator, constant(cells[0]));\n      return outcome(newGrid, Option.from(cells[0]));\n    };\n    var unmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var newGrid = foldr(unmergable, function (b, cell) {\n        return MergingOperations.unmerge(b, cell, comparator, genWrappers.combine(cell));\n      }, grid);\n      return outcome(newGrid, Option.from(unmergable[0]));\n    };\n    var pasteCells = function (grid, pasteDetails, comparator, _genWrappers) {\n      var gridify = function (table, generators) {\n        var list = DetailsList.fromTable(table);\n        var wh = Warehouse.generate(list);\n        return Transitions.toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard(), pasteDetails.generators());\n      var startAddress = address(pasteDetails.row(), pasteDetails.column());\n      var mergedGrid = TableMerge.merge(startAddress, grid, gridB, pasteDetails.generators(), comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Option.some(pasteDetails.element()));\n      }, function (nuGrid) {\n        var cursor = elementFromGrid(nuGrid, pasteDetails.row(), pasteDetails.column());\n        return outcome(nuGrid, cursor);\n      });\n    };\n    var gridifyRows = function (rows, generators, example) {\n      var pasteDetails = DetailsList.fromPastedRows(rows, example);\n      var wh = Warehouse.generate(pasteDetails);\n      return Transitions.toGrid(wh, generators, true);\n    };\n    var pasteRowsBefore = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[0].row();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var pasteRowsAfter = function (grid, pasteDetails, comparator, _genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row() + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var resize = Adjustments.adjustWidthTo;\n    var TableOperations = {\n      insertRowBefore: run(insertRowBefore, onCell, noop, noop, Generators.modification),\n      insertRowsBefore: run(insertRowsBefore, onCells, noop, noop, Generators.modification),\n      insertRowAfter: run(insertRowAfter, onCell, noop, noop, Generators.modification),\n      insertRowsAfter: run(insertRowsAfter, onCells, noop, noop, Generators.modification),\n      insertColumnBefore: run(insertColumnBefore, onCell, resize, noop, Generators.modification),\n      insertColumnsBefore: run(insertColumnsBefore, onCells, resize, noop, Generators.modification),\n      insertColumnAfter: run(insertColumnAfter, onCell, resize, noop, Generators.modification),\n      insertColumnsAfter: run(insertColumnsAfter, onCells, resize, noop, Generators.modification),\n      splitCellIntoColumns: run(splitCellIntoColumns$1, onCell, resize, noop, Generators.modification),\n      splitCellIntoRows: run(splitCellIntoRows$1, onCell, noop, noop, Generators.modification),\n      eraseColumns: run(eraseColumns, onCells, resize, prune, Generators.modification),\n      eraseRows: run(eraseRows, onCells, noop, prune, Generators.modification),\n      makeColumnHeader: run(makeColumnHeader, onCell, noop, noop, Generators.transform('row', 'th')),\n      unmakeColumnHeader: run(unmakeColumnHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      makeRowHeader: run(makeRowHeader, onCell, noop, noop, Generators.transform('col', 'th')),\n      unmakeRowHeader: run(unmakeRowHeader, onCell, noop, noop, Generators.transform(null, 'td')),\n      mergeCells: run(mergeCells, onMergable, noop, noop, Generators.merging),\n      unmergeCells: run(unmergeCells, onUnmergable, resize, noop, Generators.merging),\n      pasteCells: run(pasteCells, onPaste, resize, noop, Generators.modification),\n      pasteRowsBefore: run(pasteRowsBefore, onPasteRows, noop, noop, Generators.modification),\n      pasteRowsAfter: run(pasteRowsAfter, onPasteRows, noop, noop, Generators.modification)\n    };\n\n    var getBody$1 = function (editor) {\n      return Element.fromDom(editor.getBody());\n    };\n    var getPixelWidth$1 = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq(element, getBody$1(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addSizeSuffix = function (size) {\n      if (/^[0-9]+$/.test(size)) {\n        size += 'px';\n      }\n      return size;\n    };\n    var removeDataStyle = function (table) {\n      var dataStyleCells = descendants$1(table, 'td[data-mce-style],th[data-mce-style]');\n      remove(table, 'data-mce-style');\n      each(dataStyleCells, function (cell) {\n        remove(cell, 'data-mce-style');\n      });\n    };\n\n    var getDirection = function (element) {\n      return get$1(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var ltr$1 = { isRtl: constant(false) };\n    var rtl$1 = { isRtl: constant(true) };\n    var directionAt = function (element) {\n      var dir = getDirection(element);\n      return dir === 'rtl' ? rtl$1 : ltr$1;\n    };\n    var Direction = { directionAt: directionAt };\n\n    var defaultTableToolbar = [\n      'tableprops',\n      'tabledelete',\n      '|',\n      'tableinsertrowbefore',\n      'tableinsertrowafter',\n      'tabledeleterow',\n      '|',\n      'tableinsertcolbefore',\n      'tableinsertcolafter',\n      'tabledeletecol'\n    ];\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultAttributes = { border: '1' };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', defaultStyles, 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var getColorPickerCallback = function (editor) {\n      return editor.getParam('color_picker_callback');\n    };\n    var isPixelsForced = function (editor) {\n      return editor.getParam('table_responsive_width') === false;\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Option.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Option.some(cloneElements);\n      } else {\n        return Option.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return objectResizing === 'table' || objectResizing;\n    };\n    var getToolbar = function (editor) {\n      var toolbar = editor.getParam('table_toolbar', defaultTableToolbar);\n      if (toolbar === '' || toolbar === false) {\n        return [];\n      } else if (isString(toolbar)) {\n        return toolbar.split(/[ ,]/);\n      } else if (isArray(toolbar)) {\n        return toolbar;\n      } else {\n        return [];\n      }\n    };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n\n    var TableActions = function (editor, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody$1(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.rows() > 1;\n      };\n      var lastColumnGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.columns() > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var execute = function (operation, guard, mutate, lazyWire) {\n        return function (table, target) {\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = Element.fromDom(editor.getDoc());\n          var direction = TableDirection(Direction.directionAt);\n          var generators = TableFill.cellOperations(mutate, doc, cloneFormats);\n          return guard(table) ? operation(wire, table, target, generators, direction).bind(function (result) {\n            each(result.newRows(), function (row) {\n              fireNewRow(editor, row.dom());\n            });\n            each(result.newCells(), function (cell) {\n              fireNewCell(editor, cell.dom());\n            });\n            return result.cursor().map(function (cell) {\n              var rng = editor.dom.createRng();\n              rng.setStart(cell.dom(), 0);\n              rng.setEnd(cell.dom(), 0);\n              return rng;\n            });\n          }) : Option.none();\n        };\n      };\n      var deleteRow = execute(TableOperations.eraseRows, lastRowGuard, noop, lazyWire);\n      var deleteColumn = execute(TableOperations.eraseColumns, lastColumnGuard, noop, lazyWire);\n      var insertRowsBefore = execute(TableOperations.insertRowsBefore, always, noop, lazyWire);\n      var insertRowsAfter = execute(TableOperations.insertRowsAfter, always, noop, lazyWire);\n      var insertColumnsBefore = execute(TableOperations.insertColumnsBefore, always, CellMutations.halve, lazyWire);\n      var insertColumnsAfter = execute(TableOperations.insertColumnsAfter, always, CellMutations.halve, lazyWire);\n      var mergeCells = execute(TableOperations.mergeCells, always, noop, lazyWire);\n      var unmergeCells = execute(TableOperations.unmergeCells, always, noop, lazyWire);\n      var pasteRowsBefore = execute(TableOperations.pasteRowsBefore, always, noop, lazyWire);\n      var pasteRowsAfter = execute(TableOperations.pasteRowsAfter, always, noop, lazyWire);\n      var pasteCells = execute(TableOperations.pasteCells, always, noop, lazyWire);\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore,\n        insertRowsAfter: insertRowsAfter,\n        insertColumnsBefore: insertColumnsBefore,\n        insertColumnsAfter: insertColumnsAfter,\n        mergeCells: mergeCells,\n        unmergeCells: unmergeCells,\n        pasteRowsBefore: pasteRowsBefore,\n        pasteRowsAfter: pasteRowsAfter,\n        pasteCells: pasteCells\n      };\n    };\n\n    var copyRows = function (table, target, generators) {\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var details = onCells(house, target);\n      return details.map(function (selectedCells) {\n        var grid = Transitions.toGrid(house, generators, false);\n        var slicedGrid = grid.slice(selectedCells[0].row(), selectedCells[selectedCells.length - 1].row() + selectedCells[selectedCells.length - 1].rowspan());\n        var slicedDetails = toDetailList(slicedGrid, generators);\n        return Redraw.copy(slicedDetails);\n      });\n    };\n    var CopyRows = { copyRows: copyRows };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      firstChildStyle = checkChildren(firstChildStyle, cells);\n      return firstChildStyle;\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$1.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n    var Styles$1 = {\n      applyAlign: applyAlign,\n      applyVAlign: applyVAlign,\n      unApplyAlign: unApplyAlign,\n      unApplyVAlign: unApplyVAlign,\n      getTDTHOverallStyle: getTDTHOverallStyle\n    };\n\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$1.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    function styleFieldHasFocus(e) {\n      return e.control.rootControl.find('#style')[0].getEl().isEqualNode(domGlobals.document.activeElement);\n    }\n    var syncAdvancedStyleFields = function (editor, evt) {\n      if (styleFieldHasFocus(evt)) {\n        updateAdvancedFields(editor, evt);\n      } else {\n        updateStyleField(editor, evt);\n      }\n    };\n    var updateStyleField = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      css['border-style'] = data.borderStyle;\n      css['border-color'] = data.borderColor;\n      css['background-color'] = data.backgroundColor;\n      css.width = data.width ? addSizeSuffix(data.width) : '';\n      css.height = data.height ? addSizeSuffix(data.height) : '';\n      rootControl.find('#style').value(dom.serializeStyle(dom.parseStyle(dom.serializeStyle(css))));\n    };\n    var updateAdvancedFields = function (editor, evt) {\n      var dom = editor.dom;\n      var rootControl = evt.control.rootControl;\n      var data = rootControl.toJSON();\n      var css = dom.parseStyle(data.style);\n      rootControl.find('#borderStyle').value(css['border-style'] || '');\n      rootControl.find('#borderColor').value(css['border-color'] || '');\n      rootControl.find('#backgroundColor').value(css['background-color'] || '');\n      rootControl.find('#width').value(css.width || '');\n      rootControl.find('#height').value(css.height || '');\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var css = dom.parseStyle(dom.getAttrib(elm, 'style'));\n      var data = {};\n      if (css['border-style']) {\n        data.borderStyle = css['border-style'];\n      }\n      if (css['border-color']) {\n        data.borderColor = css['border-color'];\n      }\n      if (css['background-color']) {\n        data.backgroundColor = css['background-color'];\n      }\n      data.style = dom.serializeStyle(css);\n      return data;\n    };\n    var createStyleForm = function (editor) {\n      var createColorPickAction = function () {\n        var colorPickerCallback = getColorPickerCallback(editor);\n        if (colorPickerCallback) {\n          return function (evt) {\n            return colorPickerCallback.call(editor, function (value) {\n              evt.control.value(value).fire('change');\n            }, evt.control.value());\n          };\n        }\n      };\n      return {\n        title: 'Advanced',\n        type: 'form',\n        defaults: { onchange: curry(updateStyleField, editor) },\n        items: [\n          {\n            label: 'Style',\n            name: 'style',\n            type: 'textbox',\n            onchange: curry(updateAdvancedFields, editor)\n          },\n          {\n            type: 'form',\n            padding: 0,\n            formItemDefaults: {\n              layout: 'grid',\n              alignH: [\n                'start',\n                'right'\n              ]\n            },\n            defaults: { size: 7 },\n            items: [\n              {\n                label: 'Border style',\n                type: 'listbox',\n                name: 'borderStyle',\n                width: 90,\n                onselect: curry(updateStyleField, editor),\n                values: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              },\n              {\n                label: 'Border color',\n                type: 'colorbox',\n                name: 'borderColor',\n                onaction: createColorPickAction()\n              },\n              {\n                label: 'Background color',\n                type: 'colorbox',\n                name: 'backgroundColor',\n                onaction: createColorPickAction()\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var Helpers = {\n      createStyleForm: createStyleForm,\n      buildListItems: buildListItems,\n      updateStyleField: updateStyleField,\n      extractAdvancedStyles: extractAdvancedStyles,\n      updateAdvancedFields: updateAdvancedFields,\n      syncAdvancedStyleFields: syncAdvancedStyleFields\n    };\n\n    var updateStyles = function (elm, cssText) {\n      delete elm.dataset.mceStyle;\n      elm.style.cssText += ';' + cssText;\n    };\n    var extractDataFromElement = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        type: elm.nodeName.toLowerCase(),\n        style: '',\n        align: '',\n        valign: ''\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'valign' + name)) {\n          data.valign = name;\n        }\n      });\n      if (hasAdvancedCellTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var onSubmitCellForm = function (editor, cells, evt) {\n      var dom = editor.dom;\n      var data;\n      function setAttrib(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (cells.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedCellTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(cells, function (cellElm) {\n          setAttrib(cellElm, 'scope', data.scope);\n          if (cells.length === 1) {\n            setAttrib(cellElm, 'style', data.style);\n          } else {\n            updateStyles(cellElm, data.style);\n          }\n          setAttrib(cellElm, 'class', data.class);\n          setStyle(cellElm, 'width', addSizeSuffix(data.width));\n          setStyle(cellElm, 'height', addSizeSuffix(data.height));\n          if (data.type && cellElm.nodeName.toLowerCase() !== data.type) {\n            cellElm = dom.rename(cellElm, data.type);\n          }\n          if (cells.length === 1) {\n            Styles$1.unApplyAlign(editor, cellElm);\n            Styles$1.unApplyVAlign(editor, cellElm);\n          }\n          if (data.align) {\n            Styles$1.applyAlign(editor, cellElm, data.align);\n          }\n          if (data.valign) {\n            Styles$1.applyVAlign(editor, cellElm, data.valign);\n          }\n        });\n        editor.focus();\n      });\n    };\n    var open = function (editor) {\n      var cellElm, data, classListCtrl, cells = [];\n      cells = editor.dom.select('td[data-mce-selected],th[data-mce-selected]');\n      cellElm = editor.dom.getParent(editor.selection.getStart(), 'td,th');\n      if (!cells.length && cellElm) {\n        cells.push(cellElm);\n      }\n      cellElm = cellElm || cells[0];\n      if (!cellElm) {\n        return;\n      }\n      if (cells.length > 1) {\n        data = {\n          width: '',\n          height: '',\n          scope: '',\n          class: '',\n          align: '',\n          valign: '',\n          style: '',\n          type: cellElm.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement(editor, cellElm);\n      }\n      if (getCellClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getCellClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'td',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      var generalCellForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            layout: 'grid',\n            columns: 2,\n            labelGapCalc: false,\n            padding: 0,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: [\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell type',\n                name: 'type',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'Cell',\n                    value: 'td'\n                  },\n                  {\n                    text: 'Header cell',\n                    value: 'th'\n                  }\n                ]\n              },\n              {\n                label: 'Scope',\n                name: 'scope',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Row',\n                    value: 'row'\n                  },\n                  {\n                    text: 'Column',\n                    value: 'col'\n                  },\n                  {\n                    text: 'Row group',\n                    value: 'rowgroup'\n                  },\n                  {\n                    text: 'Column group',\n                    value: 'colgroup'\n                  }\n                ]\n              },\n              {\n                label: 'H Align',\n                name: 'align',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Left',\n                    value: 'left'\n                  },\n                  {\n                    text: 'Center',\n                    value: 'center'\n                  },\n                  {\n                    text: 'Right',\n                    value: 'right'\n                  }\n                ]\n              },\n              {\n                label: 'V Align',\n                name: 'valign',\n                type: 'listbox',\n                text: 'None',\n                minWidth: 90,\n                maxWidth: null,\n                values: [\n                  {\n                    text: 'None',\n                    value: ''\n                  },\n                  {\n                    text: 'Top',\n                    value: 'top'\n                  },\n                  {\n                    text: 'Middle',\n                    value: 'middle'\n                  },\n                  {\n                    text: 'Bottom',\n                    value: 'bottom'\n                  }\n                ]\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedCellTab(editor)) {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          bodyType: 'tabpanel',\n          data: data,\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalCellForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Cell properties',\n          data: data,\n          body: generalCellForm,\n          onsubmit: curry(onSubmitCellForm, editor, cells)\n        });\n      }\n    };\n    var CellDialog = { open: open };\n\n    var extractDataFromElement$1 = function (editor, elm) {\n      var dom = editor.dom;\n      var data = {\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class'),\n        align: '',\n        style: '',\n        type: elm.parentNode.nodeName.toLowerCase()\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedRowTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, elm));\n      }\n      return data;\n    };\n    var switchRowType = function (dom, rowElm, toType) {\n      var tableElm = dom.getParent(rowElm, 'table');\n      var oldParentElm = rowElm.parentNode;\n      var parentElm = dom.select(toType, tableElm)[0];\n      if (!parentElm) {\n        parentElm = dom.create(toType);\n        if (tableElm.firstChild) {\n          if (tableElm.firstChild.nodeName === 'CAPTION') {\n            dom.insertAfter(parentElm, tableElm.firstChild);\n          } else {\n            tableElm.insertBefore(parentElm, tableElm.firstChild);\n          }\n        } else {\n          tableElm.appendChild(parentElm);\n        }\n      }\n      parentElm.appendChild(rowElm);\n      if (!oldParentElm.hasChildNodes()) {\n        dom.remove(oldParentElm);\n      }\n    };\n    function onSubmitRowForm(editor, rows, oldData, evt) {\n      var dom = editor.dom;\n      function setAttrib(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setAttrib(elm, name, value);\n        }\n      }\n      function setStyle(elm, name, value) {\n        if (rows.length === 1 || value) {\n          dom.setStyle(elm, name, value);\n        }\n      }\n      if (hasAdvancedRowTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      var data = evt.control.rootControl.toJSON();\n      editor.undoManager.transact(function () {\n        global$1.each(rows, function (rowElm) {\n          setAttrib(rowElm, 'scope', data.scope);\n          setAttrib(rowElm, 'style', data.style);\n          setAttrib(rowElm, 'class', data.class);\n          setStyle(rowElm, 'height', addSizeSuffix(data.height));\n          if (data.type !== rowElm.parentNode.nodeName.toLowerCase()) {\n            switchRowType(editor.dom, rowElm, data.type);\n          }\n          if (data.align !== oldData.align) {\n            Styles$1.unApplyAlign(editor, rowElm);\n            Styles$1.applyAlign(editor, rowElm, data.align);\n          }\n        });\n        editor.focus();\n      });\n    }\n    var open$1 = function (editor) {\n      var dom = editor.dom;\n      var tableElm, cellElm, rowElm, classListCtrl, data;\n      var rows = [];\n      var generalRowForm;\n      tableElm = dom.getParent(editor.selection.getStart(), 'table');\n      cellElm = dom.getParent(editor.selection.getStart(), 'td,th');\n      global$1.each(tableElm.rows, function (row) {\n        global$1.each(row.cells, function (cell) {\n          if (dom.getAttrib(cell, 'data-mce-selected') || cell === cellElm) {\n            rows.push(row);\n            return false;\n          }\n        });\n      });\n      rowElm = rows[0];\n      if (!rowElm) {\n        return;\n      }\n      if (rows.length > 1) {\n        data = {\n          height: '',\n          scope: '',\n          style: '',\n          class: '',\n          align: '',\n          type: rowElm.parentNode.nodeName.toLowerCase()\n        };\n      } else {\n        data = extractDataFromElement$1(editor, rowElm);\n      }\n      if (getRowClassList(editor).length > 0) {\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getRowClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'tr',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalRowForm = {\n        type: 'form',\n        columns: 2,\n        padding: 0,\n        defaults: { type: 'textbox' },\n        items: [\n          {\n            type: 'listbox',\n            name: 'type',\n            label: 'Row type',\n            text: 'Header',\n            maxWidth: null,\n            values: [\n              {\n                text: 'Header',\n                value: 'thead'\n              },\n              {\n                text: 'Body',\n                value: 'tbody'\n              },\n              {\n                text: 'Footer',\n                value: 'tfoot'\n              }\n            ]\n          },\n          {\n            type: 'listbox',\n            name: 'align',\n            label: 'Alignment',\n            text: 'None',\n            maxWidth: null,\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          {\n            label: 'Height',\n            name: 'height'\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedRowTab(editor)) {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalRowForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Row properties',\n          data: data,\n          body: generalRowForm,\n          onsubmit: curry(onSubmitRowForm, editor, rows, data)\n        });\n      }\n    };\n    var RowDialog = { open: open$1 };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      percentages: true\n    };\n    var makeTable = function () {\n      return Element.fromTag('table');\n    };\n    var tableBody = function () {\n      return Element.fromTag('tbody');\n    };\n    var tableRow = function () {\n      return Element.fromTag('tr');\n    };\n    var tableHeaderCell = function () {\n      return Element.fromTag('th');\n    };\n    var tableCell = function () {\n      return Element.fromTag('td');\n    };\n    var render$1 = function (rows, columns, rowHeaders, columnHeaders, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = makeTable();\n      setAll$1(table, renderOpts.styles);\n      setAll(table, renderOpts.attributes);\n      var tbody = tableBody();\n      append(table, tbody);\n      var trs = [];\n      for (var i = 0; i < rows; i++) {\n        var tr = tableRow();\n        for (var j = 0; j < columns; j++) {\n          var td = i < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n          if (j < columnHeaders) {\n            set(td, 'scope', 'row');\n          }\n          if (i < rowHeaders) {\n            set(td, 'scope', 'col');\n          }\n          append(td, Element.fromTag('br'));\n          if (renderOpts.percentages) {\n            set$1(td, 'width', 100 / columns + '%');\n          }\n          append(tr, td);\n        }\n        trs.push(tr);\n      }\n      append$1(tbody, trs);\n      return table;\n    };\n\n    var get$7 = function (element) {\n      return element.dom().innerHTML;\n    };\n    var getOuter$2 = function (element) {\n      var container = Element.fromTag('div');\n      var clone = Element.fromDom(element.dom().cloneNode(true));\n      append(container, clone);\n      return get$7(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom(), true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant$1(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each(descendants$1(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom());\n        each(descendants$1(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom());\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert$1 = function (editor, columns, rows) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        percentages: isPercentage(defaultStyles.width) && !isPixelsForced(editor)\n      };\n      var table = render$1(rows, columns, 0, 0, options);\n      set(table, 'data-mce-id', '__mce');\n      var html = getOuter$2(table);\n      editor.insertContent(html);\n      return descendant$1(getBody$1(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          set$1(table, 'width', get$1(table, 'width'));\n        }\n        remove(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom();\n      }).getOr(null);\n    };\n    var InsertTable = { insert: insert$1 };\n\n    function styleTDTH(dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        dom.setStyle(elm, name, value);\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    }\n    var extractDataFromElement$2 = function (editor, tableElm) {\n      var dom = editor.dom;\n      var data = {\n        width: dom.getStyle(tableElm, 'width') || dom.getAttrib(tableElm, 'width'),\n        height: dom.getStyle(tableElm, 'height') || dom.getAttrib(tableElm, 'height'),\n        cellspacing: dom.getStyle(tableElm, 'border-spacing') || dom.getAttrib(tableElm, 'cellspacing'),\n        cellpadding: dom.getAttrib(tableElm, 'data-mce-cell-padding') || dom.getAttrib(tableElm, 'cellpadding') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'padding'),\n        border: dom.getAttrib(tableElm, 'data-mce-border') || dom.getAttrib(tableElm, 'border') || Styles$1.getTDTHOverallStyle(editor.dom, tableElm, 'border'),\n        borderColor: dom.getAttrib(tableElm, 'data-mce-border-color'),\n        caption: !!dom.select('caption', tableElm)[0],\n        class: dom.getAttrib(tableElm, 'class')\n      };\n      global$1.each('left center right'.split(' '), function (name) {\n        if (editor.formatter.matchNode(tableElm, 'align' + name)) {\n          data.align = name;\n        }\n      });\n      if (hasAdvancedTableTab(editor)) {\n        global$1.extend(data, Helpers.extractAdvancedStyles(dom, tableElm));\n      }\n      return data;\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addSizeSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addSizeSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addSizeSuffix(data.border);\n        styles['border-spacing'] = addSizeSuffix(data.cellspacing);\n        global$1.extend(attrs, {\n          'data-mce-border-color': data.borderColor,\n          'data-mce-cell-padding': data.cellpadding,\n          'data-mce-border': data.border\n        });\n      } else {\n        global$1.extend(attrs, {\n          border: data.border,\n          cellpadding: data.cellpadding,\n          cellspacing: data.cellspacing\n        });\n      }\n      if (shouldStyleWithCss(editor)) {\n        if (tableElm.children) {\n          for (var i = 0; i < tableElm.children.length; i++) {\n            styleTDTH(dom, tableElm.children[i], {\n              'border-width': addSizeSuffix(data.border),\n              'border-color': data.borderColor,\n              'padding': addSizeSuffix(data.cellpadding)\n            });\n          }\n        }\n      }\n      if (data.style) {\n        global$1.extend(styles, dom.parseStyle(data.style));\n      } else {\n        styles = global$1.extend({}, dom.parseStyle(dom.getAttrib(tableElm, 'style')), styles);\n      }\n      attrs.style = dom.serializeStyle(styles);\n      dom.setAttribs(tableElm, attrs);\n    };\n    var onSubmitTableForm = function (editor, tableElm, evt) {\n      var dom = editor.dom;\n      var captionElm;\n      var data;\n      if (hasAdvancedTableTab(editor)) {\n        Helpers.syncAdvancedStyleFields(editor, evt);\n      }\n      data = evt.control.rootControl.toJSON();\n      if (data.class === false) {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          tableElm = InsertTable.insert(editor, data.cols || 1, data.rows || 1);\n        }\n        applyDataToElement(editor, tableElm, data);\n        captionElm = dom.select('caption', tableElm)[0];\n        if (captionElm && !data.caption) {\n          dom.remove(captionElm);\n        }\n        if (!captionElm && data.caption) {\n          captionElm = dom.create('caption');\n          captionElm.innerHTML = !global$2.ie ? '<br data-mce-bogus=\"1\"/>' : '\\xA0';\n          tableElm.insertBefore(captionElm, tableElm.firstChild);\n        }\n        Styles$1.unApplyAlign(editor, tableElm);\n        if (data.align) {\n          Styles$1.applyAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n      });\n    };\n    var open$2 = function (editor, isProps) {\n      var dom = editor.dom;\n      var tableElm, colsCtrl, rowsCtrl, classListCtrl, data = {}, generalTableForm;\n      if (isProps === true) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table');\n        if (tableElm) {\n          data = extractDataFromElement$2(editor, tableElm);\n        }\n      } else {\n        colsCtrl = {\n          label: 'Cols',\n          name: 'cols'\n        };\n        rowsCtrl = {\n          label: 'Rows',\n          name: 'rows'\n        };\n      }\n      if (getTableClassList(editor).length > 0) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n        classListCtrl = {\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          values: Helpers.buildListItems(getTableClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'table',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        };\n      }\n      generalTableForm = {\n        type: 'form',\n        layout: 'flex',\n        direction: 'column',\n        labelGapCalc: 'children',\n        padding: 0,\n        items: [\n          {\n            type: 'form',\n            labelGapCalc: false,\n            padding: 0,\n            layout: 'grid',\n            columns: 2,\n            defaults: {\n              type: 'textbox',\n              maxWidth: 50\n            },\n            items: hasAppearanceOptions(editor) ? [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Cell spacing',\n                name: 'cellspacing'\n              },\n              {\n                label: 'Cell padding',\n                name: 'cellpadding'\n              },\n              {\n                label: 'Border',\n                name: 'border'\n              },\n              {\n                label: 'Caption',\n                name: 'caption',\n                type: 'checkbox'\n              }\n            ] : [\n              colsCtrl,\n              rowsCtrl,\n              {\n                label: 'Width',\n                name: 'width',\n                onchange: curry(Helpers.updateStyleField, editor)\n              },\n              {\n                label: 'Height',\n                name: 'height',\n                onchange: curry(Helpers.updateStyleField, editor)\n              }\n            ]\n          },\n          {\n            label: 'Alignment',\n            name: 'align',\n            type: 'listbox',\n            text: 'None',\n            values: [\n              {\n                text: 'None',\n                value: ''\n              },\n              {\n                text: 'Left',\n                value: 'left'\n              },\n              {\n                text: 'Center',\n                value: 'center'\n              },\n              {\n                text: 'Right',\n                value: 'right'\n              }\n            ]\n          },\n          classListCtrl\n        ]\n      };\n      if (hasAdvancedTableTab(editor)) {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          bodyType: 'tabpanel',\n          body: [\n            {\n              title: 'General',\n              type: 'form',\n              items: generalTableForm\n            },\n            Helpers.createStyleForm(editor)\n          ],\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      } else {\n        editor.windowManager.open({\n          title: 'Table properties',\n          data: data,\n          body: generalTableForm,\n          onsubmit: curry(onSubmitTableForm, editor, tableElm)\n        });\n      }\n    };\n    var TableDialog = { open: open$2 };\n\n    var each$3 = global$1.each;\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboardRows) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        getSelectionStartCell().orThunk(getSelectionStartCaption).each(function (cellOrCaption) {\n          var table = TableLookup.table(cellOrCaption, isRoot);\n          table.filter(not(isRoot)).each(function (table) {\n            var cursor = Element.fromText('');\n            after(table, cursor);\n            remove$2(table);\n            var rng = editor.dom.createRng();\n            rng.setStart(cursor.dom(), 0);\n            rng.setEnd(cursor.dom(), 0);\n            editor.selection.setRng(rng);\n          });\n        });\n      };\n      var getSelectionStartFromSelector = function (selector) {\n        return function () {\n          return Option.from(editor.dom.getParent(editor.selection.getStart(), selector)).map(Element.fromDom);\n        };\n      };\n      var getSelectionStartCaption = getSelectionStartFromSelector('caption');\n      var getSelectionStartCell = getSelectionStartFromSelector('th,td');\n      var getTableFromCell = function (cell) {\n        return TableLookup.table(cell, isRoot);\n      };\n      var getSize = function (table) {\n        return {\n          width: getPixelWidth$1(table.dom()),\n          height: getPixelWidth$1(table.dom())\n        };\n      };\n      var resizeChange = function (editor, oldSize, table) {\n        var newSize = getSize(table);\n        if (oldSize.width !== newSize.width || oldSize.height !== newSize.height) {\n          fireObjectResizeStart(editor, table.dom(), oldSize.width, oldSize.height);\n          fireObjectResized(editor, table.dom(), newSize.width, newSize.height);\n        }\n      };\n      var actOnSelection = function (execute) {\n        getSelectionStartCell().each(function (cell) {\n          getTableFromCell(cell).each(function (table) {\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var beforeSize = getSize(table);\n            execute(table, targets).each(function (rng) {\n              resizeChange(editor, beforeSize, table);\n              editor.selection.setRng(rng);\n              editor.focus();\n              cellSelection.clear(table);\n              removeDataStyle(table);\n            });\n          });\n        });\n      };\n      var copyRowSelection = function (execute) {\n        return getSelectionStartCell().bind(function (cell) {\n          return getTableFromCell(cell).bind(function (table) {\n            var doc = Element.fromDom(editor.getDoc());\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var generators = TableFill.cellOperations(noop, doc, Option.none());\n            return CopyRows.copyRows(table, targets, generators);\n          });\n        });\n      };\n      var pasteOnSelection = function (execute) {\n        clipboardRows.get().each(function (rows) {\n          var clonedRows = map(rows, function (row) {\n            return deep(row);\n          });\n          getSelectionStartCell().each(function (cell) {\n            getTableFromCell(cell).each(function (table) {\n              var doc = Element.fromDom(editor.getDoc());\n              var generators = TableFill.paste(doc);\n              var targets = TableTargets.pasteRows(selections, table, cell, clonedRows, generators);\n              execute(table, targets).each(function (rng) {\n                editor.selection.setRng(rng);\n                editor.focus();\n                cellSelection.clear(table);\n              });\n            });\n          });\n        });\n      };\n      each$3({\n        mceTableSplitCells: function () {\n          actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCutRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCopyRow: function (grid) {\n          clipboardRows.set(copyRowSelection());\n        },\n        mceTablePasteRowBefore: function (grid) {\n          pasteOnSelection(actions.pasteRowsBefore);\n        },\n        mceTablePasteRowAfter: function (grid) {\n          pasteOnSelection(actions.pasteRowsAfter);\n        },\n        mceTableDelete: eraseTable\n      }, function (func, name) {\n        editor.addCommand(name, func);\n      });\n      each$3({\n        mceInsertTable: curry(TableDialog.open, editor),\n        mceTableProps: curry(TableDialog.open, editor, true),\n        mceTableRowProps: curry(RowDialog.open, editor),\n        mceTableCellProps: curry(CellDialog.open, editor)\n      }, function (func, name) {\n        editor.addCommand(name, function (ui, val) {\n          func(val);\n        });\n      });\n    };\n    var Commands = { registerCommands: registerCommands };\n\n    var only = function (element) {\n      var parent = Option.from(element.dom().documentElement).map(Element.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var detached = function (editable, chrome) {\n      var origin = function () {\n        return absolute(chrome);\n      };\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin\n      };\n    };\n    var body$1 = function (editable, chrome) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var ResizeWire = {\n      only: only,\n      detached: detached,\n      body: body$1\n    };\n\n    var Event = function (fields) {\n      var struct = Immutable.apply(null, fields);\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw new Error('Event bind error: undefined handler');\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var event = struct.apply(null, args);\n        each(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    };\n\n    var create$1 = function (typeDefs) {\n      var registry = map$1(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map$1(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n    var Events = { create: create$1 };\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: constant(target),\n        x: constant(x),\n        y: constant(y),\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: constant(raw)\n      };\n    };\n    var handle = function (filter, handler) {\n      return function (rawEvent) {\n        if (!filter(rawEvent)) {\n          return;\n        }\n        var target = Element.fromDom(rawEvent.target);\n        var stop = function () {\n          rawEvent.stopPropagation();\n        };\n        var prevent = function () {\n          rawEvent.preventDefault();\n        };\n        var kill = compose(prevent, stop);\n        var evt = mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n        handler(evt);\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle(filter, handler);\n      element.dom().addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom().removeEventListener(event, handler, useCapture);\n    };\n\n    var filter$1 = constant(true);\n    var bind$2 = function (element, event, handler) {\n      return bind$1(element, event, filter$1, handler);\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow$1 = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge$3 = baseMerge(shallow$1);\n\n    var styles$1 = css('ephox-dragster');\n    var Styles$2 = { resolve: styles$1.resolve };\n\n    var Blocker = function (options) {\n      var settings = merge$3({ layerClass: Styles$2.resolve('blocker') }, options);\n      var div = Element.fromTag('div');\n      set(div, 'role', 'presentation');\n      setAll$1(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add$2(div, Styles$2.resolve('blocker'));\n      add$2(div, settings.layerClass);\n      var element = function () {\n        return div;\n      };\n      var destroy = function () {\n        remove$2(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    };\n\n    var DragMode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var DragSink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var DragApi = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n\n    var compare = function (old, nu) {\n      return Position(nu.left() - old.left(), nu.top() - old.top());\n    };\n    var extract$1 = function (event) {\n      return Option.some(Position(event.x(), event.y()));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left(), info.top());\n    };\n    var sink = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind$2(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind$2(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind$2(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind$2(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$2(blocker.element());\n      };\n      return DragSink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragMode({\n      compare: compare,\n      extract: extract$1,\n      sink: sink,\n      mutate: mutate\n    });\n\n    var last$2 = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null) {\n          domGlobals.clearTimeout(timer);\n        }\n        timer = domGlobals.setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    function InDrag () {\n      var previous = Option.none();\n      var reset = function () {\n        previous = Option.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Option.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = Events.create({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    }\n\n    function NoDrag () {\n      return {\n        onEvent: noop,\n        reset: noop\n      };\n    }\n\n    function Movement () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    }\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = Events.create({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last$2(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info());\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          if (active) {\n            f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApi({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n    var Dragging = { setup: setup };\n\n    var transform$1 = function (mutation, settings) {\n      if (settings === void 0) {\n        settings = {};\n      }\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return Dragging.setup(mutation, mode, settings);\n    };\n    var Dragger = { transform: transform$1 };\n\n    var Mutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    };\n\n    var BarMutation = function () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Option.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta(), event.yDelta(), t);\n        });\n      });\n      var assign = function (t) {\n        target = Option.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    };\n\n    var isContentEditableTrue = function (elm) {\n      return get(elm, 'contenteditable') === 'true';\n    };\n    var findClosestContentEditable = function (target, isRoot) {\n      return closest$1(target, '[contenteditable]', isRoot);\n    };\n\n    var resizeBarDragging = Styles.resolve('resizer-bar-dragging');\n    var BarManager = function (wire, direction, hdirection) {\n      var mutation = BarMutation();\n      var resizing = Dragger.transform(mutation, {});\n      var hoverTable = Option.none();\n      var getResizer = function (element, type) {\n        return Option.from(get(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target(), 'data-row').each(function (_dataRow) {\n          var currentRow = CellUtils.getInt(event.target(), 'top');\n          set$1(event.target(), 'top', currentRow + event.yDelta() + 'px');\n        });\n        getResizer(event.target(), 'data-column').each(function (_dataCol) {\n          var currentCol = CellUtils.getInt(event.target(), 'left');\n          set$1(event.target(), 'left', currentCol + event.xDelta() + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = CellUtils.getInt(target, dir);\n        var oldX = parseInt(get(target, 'data-initial-' + dir), 10);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            Bars.refresh(wire, table, hdirection, direction);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set(target, 'data-initial-' + dir, parseInt(get$1(target, dir), 10));\n        add$2(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind$2(wire.parent(), 'mousedown', function (event) {\n        if (Bars.isRowBar(event.target())) {\n          handler(event.target(), 'top');\n        }\n        if (Bars.isColBar(event.target())) {\n          handler(event.target(), 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq(e, wire.view());\n      };\n      var findClosestEditableTable = function (target) {\n        return closest$1(target, 'table', isRoot).filter(function (table) {\n          return findClosestContentEditable(table, isRoot).exists(isContentEditableTrue);\n        });\n      };\n      var mouseover = bind$2(wire.view(), 'mouseover', function (event) {\n        findClosestEditableTable(event.target()).fold(function () {\n          if (inBody(event.target())) {\n            Bars.destroy(wire);\n          }\n        }, function (table) {\n          hoverTable = Option.some(table);\n          Bars.refresh(wire, table, hdirection, direction);\n        });\n      });\n      var destroy = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        Bars.destroy(wire);\n      };\n      var refresh = function (tbl) {\n        Bars.refresh(wire, tbl, hdirection, direction);\n      };\n      var events = Events.create({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy,\n        refresh: refresh,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(Bars.hide, wire),\n        showBars: curry(Bars.show, wire),\n        events: events.registry\n      };\n    };\n\n    var create$2 = function (wire, vdirection) {\n      var hdirection = BarPositions.height;\n      var manager = BarManager(wire, vdirection, hdirection);\n      var events = Events.create({\n        beforeResize: Event(['table']),\n        afterResize: Event(['table']),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = hdirection.delta(event.delta(), event.table());\n        Adjustments.adjustHeight(event.table(), delta, event.row(), hdirection);\n        events.trigger.afterResize(event.table());\n      });\n      manager.events.startAdjust.bind(function (event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = vdirection.delta(event.delta(), event.table());\n        Adjustments.adjustWidth(event.table(), delta, event.column(), vdirection);\n        events.trigger.afterResize(event.table());\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    };\n    var TableResize = { create: create$2 };\n\n    var createContainer = function () {\n      var container = Element.fromTag('div');\n      setAll$1(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append(body(), container);\n      return container;\n    };\n    var get$8 = function (editor, container) {\n      return editor.inline ? ResizeWire.body(getBody$1(editor), createContainer()) : ResizeWire.only(Element.fromDom(editor.getDoc()));\n    };\n    var remove$6 = function (editor, wire) {\n      if (editor.inline) {\n        remove$2(wire.parent());\n      }\n    };\n    var TableWire = {\n      get: get$8,\n      remove: remove$6\n    };\n\n    var ResizeHandler = function (editor) {\n      var selectionRng = Option.none();\n      var resize = Option.none();\n      var wire = Option.none();\n      var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n      var startW, startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var getRawWidth = function (elm) {\n        return editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(Element.fromDom(editor.getBody())));\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          TableWire.remove(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var direction = TableDirection(Direction.directionAt);\n        var rawWire = TableWire.get(editor);\n        wire = Option.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var sz = TableResize.create(rawWire, direction);\n          sz.on();\n          sz.events.startDrag.bind(function (event) {\n            selectionRng = Option.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table().dom();\n            fireObjectResizeStart(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table();\n            var rawTable = table.dom();\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n            editor.undoManager.add();\n          });\n          resize = Option.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          startW = e.width;\n          startRawW = getRawWidth(targetElm);\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = targetElm;\n          if (percentageBasedSizeRegex.test(startRawW)) {\n            var percentW = parseFloat(percentageBasedSizeRegex.exec(startRawW)[1]);\n            var targetPercentW = e.width * percentW / startW;\n            editor.dom.setStyle(table, 'width', targetPercentW + '%');\n          } else {\n            var newCellSizes_1 = [];\n            global$1.each(table.rows, function (row) {\n              global$1.each(row.cells, function (cell) {\n                var width = editor.dom.getStyle(cell, 'width', true);\n                newCellSizes_1.push({\n                  cell: cell,\n                  width: width\n                });\n              });\n            });\n            global$1.each(newCellSizes_1, function (newCellSize) {\n              editor.dom.setStyle(newCellSize.cell, 'width', newCellSize.width);\n              editor.dom.setAttrib(newCellSize.cell, 'width', null);\n            });\n          }\n        }\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var adt$1 = Adt.generate([\n      { none: ['current'] },\n      { first: ['current'] },\n      {\n        middle: [\n          'current',\n          'target'\n        ]\n      },\n      { last: ['current'] }\n    ]);\n    var none$1 = function (current) {\n      if (current === void 0) {\n        current = undefined;\n      }\n      return adt$1.none(current);\n    };\n    var CellLocation = __assign(__assign({}, adt$1), { none: none$1 });\n\n    var detect$4 = function (current, isRoot) {\n      return TableLookup.table(current, isRoot).bind(function (table) {\n        var all = TableLookup.cells(table);\n        var index = findIndex(all, function (x) {\n          return eq(current, x);\n        });\n        return index.map(function (ind) {\n          return {\n            index: constant(ind),\n            all: constant(all)\n          };\n        });\n      });\n    };\n    var next = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return info.index() + 1 < info.all().length ? CellLocation.middle(current, info.all()[info.index() + 1]) : CellLocation.last(current);\n      });\n    };\n    var prev = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return info.index() - 1 >= 0 ? CellLocation.middle(current, info.all()[info.index() - 1]) : CellLocation.first(current);\n      });\n    };\n    var CellNavigation = {\n      next: next,\n      prev: prev\n    };\n\n    var create$3 = Immutable('start', 'soffset', 'finish', 'foffset');\n    var SimRange = { create: create$3 };\n\n    var adt$2 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt$2.before;\n    var on = adt$2.on;\n    var after$2 = adt$2.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$2,\n      cata: cata$1,\n      getStart: getStart\n    };\n\n    var adt$3 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var exactFromRange = function (simRange) {\n      return adt$3.exact(simRange.start(), simRange.soffset(), simRange.finish(), simRange.foffset());\n    };\n    var getStart$1 = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return Element.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return start;\n        }\n      });\n    };\n    var domRange = adt$3.domRange;\n    var relative = adt$3.relative;\n    var exact = adt$3.exact;\n    var getWin = function (selection) {\n      var start = getStart$1(selection);\n      return defaultView(start);\n    };\n    var range$1 = SimRange.create;\n    var Selection = {\n      domRange: domRange,\n      relative: relative,\n      exact: exact,\n      exactFromRange: exactFromRange,\n      getWin: getWin,\n      range: range$1\n    };\n\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      rng.selectNodeContents(element.dom());\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom());\n      }, function (e, o) {\n        rng.setStart(e.dom(), o);\n      }, function (e) {\n        rng.setStartAfter(e.dom());\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom());\n      }, function (e, o) {\n        rng.setEnd(e.dom(), o);\n      }, function (e) {\n        rng.setEndAfter(e.dom());\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: constant(rect.left),\n        top: constant(rect.top),\n        right: constant(rect.right),\n        bottom: constant(rect.bottom),\n        width: constant(rect.width),\n        height: constant(rect.height)\n      };\n    };\n    var getFirstRect = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Option.some(rect).map(toRect) : Option.none();\n    };\n\n    var adt$4 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(Element.fromDom(range.startContainer), range.startOffset, Element.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Option.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Option.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Option.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$4.rtl(Element.fromDom(rev.endContainer), rev.endOffset, Element.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$4.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$4.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom(), soffset);\n          rng.setEnd(finish.dom(), foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom(), foffset);\n          rng.setEnd(start.dom(), soffset);\n          return rng;\n        }\n      });\n    };\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom().createRange();\n        r.setStart(textnode.dom(), o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$2(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Option.some(rect) : Option.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      var nodes = children(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom());\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Option.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      return isText(node) ? locate(doc, node, x, y) : searchInChildren(doc, node, x, y);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom().createRange();\n      r.selectNode(target.dom());\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom().createRange();\n      cursorRange.selectNode(node.dom());\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom().getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Option.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretPositionFromPoint(x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Option.none();\n        }\n        var r = doc.dom().createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Option.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretRangeFromPoint(x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate$1(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return Element.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = document.caretPositionFromPoint ? caretPositionFromPoint : document.caretRangeFromPoint ? caretRangeFromPoint : searchFromPoint;\n    var fromPoint$1 = function (win, x, y) {\n      var doc = Element.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return Selection.relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return Selection.relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = Element.fromDom(rng.startContainer);\n          var finish = Element.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom().createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var after$3 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var doSetNativeRange = function (win, rng) {\n      Option.from(win.getSelection()).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom(), soffset);\n      selection.extend(finish.dom(), foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var selection = win.getSelection();\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom(), soffset, finish.dom(), foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = Selection.getWin(selection).dom();\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Option.some(SimRange.create(Element.fromDom(firstRng.startContainer), firstRng.startOffset, Element.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Option.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      var anchor = Element.fromDom(selection.anchorNode);\n      var focus = Element.fromDom(selection.focusNode);\n      return after$3(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Option.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n    };\n    var setToElement = function (win, element) {\n      var rng = selectNodeContents(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return Option.from(win.getSelection()).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$9 = function (win) {\n      return getExact(win).map(function (range) {\n        return Selection.exact(range.start(), range.soffset(), range.finish(), range.foffset());\n      });\n    };\n    var getFirstRect$1 = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint$1(win, x, y);\n    };\n    var clear = function (win) {\n      var selection = win.getSelection();\n      selection.removeAllRanges();\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.next(cell), lazyWire);\n    };\n    var backward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.prev(cell), lazyWire);\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = Selection.exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var getNewRowCursorPosition = function (editor, table) {\n      var rows = descendants$1(table, 'tr');\n      return last(rows).bind(function (last) {\n        return descendant$1(last, 'td,th').map(function (first) {\n          return getCellFirstCursorPosition(editor, first);\n        });\n      });\n    };\n    var go = function (editor, isRoot, cell, actions, lazyWire) {\n      return cell.fold(Option.none, Option.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        return TableLookup.table(current, isRoot).bind(function (table) {\n          var targets = TableTargets.noMenu(current);\n          editor.undoManager.transact(function () {\n            actions.insertRowsAfter(table, targets);\n          });\n          return getNewRowCursorPosition(editor, table);\n        });\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, actions, lazyWire) {\n      if (event.keyCode === global$3.TAB) {\n        var body_1 = getBody$1(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq(element, body_1) || contains(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        if (rng.collapsed) {\n          var start = Element.fromDom(rng.startContainer);\n          TableLookup.cell(start, isRoot_1).each(function (cell) {\n            event.preventDefault();\n            var navigation = event.shiftKey ? backward : forward;\n            var rng = navigation(editor, isRoot_1, cell, actions, lazyWire);\n            rng.each(function (range) {\n              editor.selection.setRng(range);\n            });\n          });\n        }\n      }\n    };\n    var TabContext = { handle: handle$1 };\n\n    var create$4 = Immutable('selection', 'kill');\n    var Response = { create: create$4 };\n\n    var create$5 = function (start, soffset, finish, foffset) {\n      return {\n        start: constant(Situ.on(start, soffset)),\n        finish: constant(Situ.on(finish, foffset))\n      };\n    };\n    var Situs = { create: create$5 };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return SimRange.create(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n    };\n    var makeSitus = Situs.create;\n    var Util = {\n      convertToRange: convertToRange,\n      makeSitus: makeSitus\n    };\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect$5(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var detect$5 = function (container, isRoot, start, finish, selectRange) {\n      if (!eq(start, finish)) {\n        return CellSelection.identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes().getOr([]);\n          if (boxes.length > 0) {\n            selectRange(container, boxes, cellSel.start(), cellSel.finish());\n            return Option.some(Response.create(Option.some(Util.makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Option.none();\n          }\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clear(container);\n        annotations.selectRange(container, newSels.boxes(), newSels.start(), newSels.finish());\n        return newSels.boxes();\n      };\n      return CellSelection.shiftSelection(selected, rows, columns, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(updateSelection);\n    };\n    var KeySelection = {\n      sync: sync,\n      detect: detect$5,\n      update: update\n    };\n\n    var traverse = Immutable('item', 'mode');\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Option.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Option.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Option.some(sidestep)\n      }\n    ];\n    var go$1 = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go$1(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[children.length - 1]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[0]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left,\n      right: right\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go$1(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item())) {\n          return Option.none();\n        } else {\n          return predicate(n.item()) ? Option.some(n.item()) : hone(universe, n.item(), predicate, n.mode(), direction, isRoot);\n        }\n      });\n    };\n    var left$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right$1 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$3 = function (universe, item, isRoot) {\n      return seekLeft(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$4 = function (universe, item, isRoot) {\n      return seekRight(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft = left$1;\n    var seekRight = right$1;\n\n    var universe$2 = DomUniverse();\n    var before$4 = function (element, isRoot) {\n      return before$3(universe$2, element, isRoot);\n    };\n    var after$5 = function (element, isRoot) {\n      return after$4(universe$2, element, isRoot);\n    };\n    var seekLeft$1 = function (element, predicate, isRoot) {\n      return seekLeft(universe$2, element, predicate, isRoot);\n    };\n    var seekRight$1 = function (element, predicate, isRoot) {\n      return seekRight(universe$2, element, predicate, isRoot);\n    };\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      return ancestor(scope, predicate, isRoot).isSome();\n    };\n\n    var point = Immutable('element', 'offset');\n    var delta = Immutable('element', 'deltaOffset');\n    var range$2 = Immutable('element', 'start', 'finish');\n    var points = Immutable('begin', 'end');\n    var text = Immutable('element', 'text');\n\n    var adt$5 = Adt.generate([\n      { none: ['message'] },\n      { success: [] },\n      { failedUp: ['cell'] },\n      { failedDown: ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq(afterCell, beforeCell)) {\n            return DomParent.sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$5.success() : failure(beforeCell);\n            }, function (_sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$5.none('in same cell');\n          }\n        });\n      }).getOr(adt$5.none('default'));\n    };\n    var cata$2 = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = __assign(__assign({}, adt$5), {\n      verify: verify,\n      cata: cata$2\n    });\n\n    var inAncestor = Immutable('ancestor', 'descendants', 'element', 'index');\n    var inParent = Immutable('parent', 'children', 'element', 'index');\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children$1 = children(parent);\n        return indexOf(children$1, element).map(function (index) {\n          return inParent(parent, children$1, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$2(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Option.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child(element, offset).filter(isBr).orThunk(function () {\n        return child(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent(), info.index());\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: constant(tgt),\n          finish: constant(tgt)\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (message) {\n        return Option.none();\n      }, function () {\n        return Option.none();\n      }, function (cell) {\n        return Option.some(point(cell, 0));\n      }, function (cell) {\n        return Option.some(point(cell, getEnd(cell)));\n      });\n    };\n    var BrTags = {\n      tryBr: tryBr,\n      process: process\n    };\n\n    var nu$3 = MixedBag([\n      'left',\n      'top',\n      'right',\n      'bottom'\n    ], []);\n    var moveDown = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() + amount,\n        right: caret.right(),\n        bottom: caret.bottom() + amount\n      });\n    };\n    var moveUp = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() - amount,\n        right: caret.right(),\n        bottom: caret.bottom() - amount\n      });\n    };\n    var moveBottomTo = function (caret, bottom) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: bottom - height,\n        right: caret.right(),\n        bottom: bottom\n      });\n    };\n    var moveTopTo = function (caret, top) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: top,\n        right: caret.right(),\n        bottom: top + height\n      });\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return nu$3({\n        left: caret.left() + xDelta,\n        top: caret.top() + yDelta,\n        right: caret.right() + xDelta,\n        bottom: caret.bottom() + yDelta\n      });\n    };\n    var getTop$1 = function (caret) {\n      return caret.top();\n    };\n    var getBottom = function (caret) {\n      return caret.bottom();\n    };\n    var toString = function (caret) {\n      return '(' + caret.left() + ', ' + caret.top() + ') -> (' + caret.right() + ', ' + caret.bottom() + ')';\n    };\n    var Carets = {\n      nu: nu$3,\n      moveUp: moveUp,\n      moveDown: moveDown,\n      moveBottomTo: moveBottomTo,\n      moveTopTo: moveTopTo,\n      getTop: getTop$1,\n      getBottom: getBottom,\n      translate: translate,\n      toString: toString\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element)) {\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      } else if (offset > 0) {\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      }\n      return Option.none();\n    };\n    var toCaret = function (rect) {\n      return Carets.nu({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      });\n    };\n    var getElemBox = function (bridge, element) {\n      return Option.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element)) {\n        return getElemBox(bridge, element).map(toCaret);\n      } else if (isText(element)) {\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      } else {\n        return Option.none();\n      }\n    };\n    var Rectangles = {\n      getBoxAt: getBoxAt,\n      getEntireBox: getEntireBox\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt$6 = Adt.generate([\n      { none: [] },\n      { retry: ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left() < box.left() || Math.abs(box.right() - caret.left()) < 1 || caret.left() > box.right();\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest(element, DomStructure.isBlock).fold(constant(false), function (cell) {\n        return Rectangles.getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = Carets.moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom() - original.bottom()) < 1) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() > caret.bottom()) {\n        return adt$6.retry(lowerCaret);\n      } else if (guessBox.top() === caret.bottom()) {\n        return adt$6.retry(Carets.moveDown(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(lowerCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = Carets.moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top() - original.top()) < 1) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() < caret.top()) {\n        return adt$6.retry(higherCaret);\n      } else if (guessBox.bottom() === caret.top()) {\n        return adt$6.retry(Carets.moveUp(caret, 1));\n      } else {\n        return inOutsideBlock(bridge, element, caret) ? adt$6.retry(Carets.translate(higherCaret, JUMP_SIZE, 0)) : adt$6.none();\n      }\n    };\n    var upMovement = {\n      point: Carets.getTop,\n      adjuster: adjustUp,\n      move: Carets.moveUp,\n      gather: before$4\n    };\n    var downMovement = {\n      point: Carets.getBottom,\n      adjuster: adjustDown,\n      move: Carets.moveDown,\n      gather: after$5\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0) {\n        return Option.some(caret);\n      }\n      if (isAtTable(bridge, caret.left(), movement.point(caret))) {\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      }\n      return bridge.situsFromPoint(caret.left(), movement.point(caret)).bind(function (guess) {\n        return guess.start().fold(Option.none, function (element) {\n          return Rectangles.getEntireBox(bridge, element).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Option.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Option.some(caret);\n          });\n        }, Option.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.bottom() + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.top() - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight()) {\n        return Option.some(movement.point(adjusted) - bridge.getInnerHeight());\n      } else if (movement.point(adjusted) < 0) {\n        return Option.some(-movement.point(adjusted));\n      } else {\n        return Option.none();\n      }\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var MAX_RETRIES = 20;\n    var platform$1 = PlatformDetection$1.detect();\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return BrTags.tryBr(isRoot, sel.finish(), sel.foffset(), direction).fold(function () {\n          return Option.some(point(sel.finish(), sel.foffset()));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish(), sel.foffset(), range.finish(), range.foffset(), direction.failure, isRoot);\n          return BrTags.process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0) {\n        return Option.none();\n      }\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish(), range.foffset(), direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Option.none();\n        }, function () {\n          return Option.some(situs);\n        }, function (cell) {\n          if (eq(element, cell) && offset === 0) {\n            return tryAgain(bridge, element, offset, Carets.moveUp, direction);\n          } else {\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n          }\n        }, function (cell) {\n          if (eq(element, cell) && offset === getEnd(cell)) {\n            return tryAgain(bridge, element, offset, Carets.moveDown, direction);\n          } else {\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n          }\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      if (platform$1.browser.isChrome() || platform$1.browser.isSafari() || platform$1.browser.isFirefox() || platform$1.browser.isEdge()) {\n        return direction.otherRetry(bridge, box);\n      } else if (platform$1.browser.isIE()) {\n        return direction.ieRetry(bridge, box);\n      } else {\n        return Option.none();\n      }\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle$2 = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element(), spot.offset(), direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n    var TableKeys = { handle: handle$2 };\n\n    var detection = PlatformDetection$1.detect();\n    var inSameTable = function (elem, table) {\n      return ancestor$2(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table)) {\n            return Option.none();\n          }\n          return TableKeys.handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish(), 'td,th', isRoot).map(function (finish) {\n              return {\n                start: constant(start),\n                finish: constant(finish),\n                range: constant(range)\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detection.browser.isIE()) {\n        return Option.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range();\n            return Response.create(Option.some(Util.makeSitus(range.start(), range.soffset(), range.finish(), range.foffset())), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[0])) {\n            return seekLeft$1(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Response.create(Option.some(Util.makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[rows.length - 1])) {\n            return seekRight$1(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Response.create(Option.some(Util.makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return KeySelection.detect(container, isRoot, info.start(), info.finish(), selectRange);\n      });\n    };\n    var VerticalMovement = {\n      navigate: navigate,\n      select: select,\n      firstUpCheck: firstUpCheck,\n      lastDownCheck: lastDownCheck\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    function MouseSelection (bridge, container, isRoot, annotations) {\n      var cursor = Option.none();\n      var clearState = function () {\n        cursor = Option.none();\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        cursor = findCell(event.target(), isRoot);\n      };\n      var mouseover = function (event) {\n        cursor.each(function (start) {\n          annotations.clear(container);\n          findCell(event.target(), isRoot).each(function (finish) {\n            CellSelection.identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes().getOr([]);\n              if (boxes.length > 1 || boxes.length === 1 && !eq(start, finish)) {\n                annotations.selectRange(container, boxes, cellSel.start(), cellSel.finish());\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mouseup = function (_event) {\n        cursor.each(clearState);\n      };\n      return {\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    }\n\n    var down = {\n      traverse: nextSibling,\n      gather: after$5,\n      relative: Situ.before,\n      otherRetry: Retries.tryDown,\n      ieRetry: Retries.ieTryDown,\n      failure: BeforeAfter.failedDown\n    };\n    var up = {\n      traverse: prevSibling,\n      gather: before$4,\n      relative: Situ.before,\n      otherRetry: Retries.tryUp,\n      ieRetry: Retries.ieTryUp,\n      failure: BeforeAfter.failedUp\n    };\n    var KeyDirection = {\n      down: down,\n      up: up\n    };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var SelectionKeys = {\n      ltr: {\n        isBackward: isKey(37),\n        isForward: isKey(39)\n      },\n      rtl: {\n        isBackward: isKey(39),\n        isForward: isKey(37)\n      },\n      isUp: isUp,\n      isDown: isDown,\n      isNavigation: isNavigation\n    };\n\n    var toRaw = function (sr) {\n      return {\n        left: sr.left(),\n        top: sr.top(),\n        right: sr.right(),\n        bottom: sr.bottom(),\n        width: sr.width(),\n        height: sr.height()\n      };\n    };\n    var Rect = { toRaw: toRaw };\n\n    var isSafari = PlatformDetection$1.detect().browser.isSafari();\n    var get$a = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return Position(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var win = doc.defaultView;\n      win.scrollBy(x, y);\n    };\n\n    var WindowBridge = function (win) {\n      var elementFromPoint = function (x, y) {\n        return Element.fromPoint(Element.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom().getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = Selection.exact(start, soffset, finish, foffset);\n        return getFirstRect$1(win, sel).map(Rect.toRaw);\n      };\n      var getSelection = function () {\n        return get$9(win).map(function (exactAdt) {\n          return Util.convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative = Selection.relative(situs.start(), situs.finish());\n        return Util.convertToRange(win, relative);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return Situs.create(exact.start(), exact.soffset(), exact.finish(), exact.foffset());\n        });\n      };\n      var clearSelection = function () {\n        clear(win);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start(), sel.soffset(), sel.finish(), sel.foffset());\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get$a(Element.fromDom(win.document));\n        return pos.top();\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, Element.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    };\n\n    var rc = Immutable('rows', 'cols');\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Option.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var realEvent = event.raw();\n        var keycode = realEvent.which;\n        var shiftKey = realEvent.shiftKey === true;\n        var handler = CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.down, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.up, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isDown(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.down, finish, start, VerticalMovement.lastDownCheck);\n          } else if (SelectionKeys.isUp(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.up, finish, start, VerticalMovement.firstUpCheck);\n          } else {\n            return Option.none;\n          }\n        }, function (selected) {\n          var update = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return KeySelection.update(delta.rows(), delta.cols(), container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return CellSelection.getEdges(container, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(function (edges) {\n                  var relative = SelectionKeys.isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first(), 0), relative(edges.table()));\n                  annotations.clear(container);\n                  return Response.create(Option.none(), true);\n                });\n              }, function (_) {\n                return Option.some(Response.create(Option.none(), true));\n              });\n            };\n          };\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return update([rc(+1, 0)]);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return update([rc(-1, 0)]);\n          } else if (direction.isBackward(keycode) && shiftKey) {\n            return update([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          } else if (direction.isForward(keycode) && shiftKey) {\n            return update([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          } else if (SelectionKeys.isNavigation(keycode) && shiftKey === false) {\n            return clearToNavigate;\n          } else {\n            return Option.none;\n          }\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          var realEvent = event.raw();\n          var keycode = realEvent.which;\n          var shiftKey = realEvent.shiftKey === true;\n          if (shiftKey === false) {\n            return Option.none();\n          }\n          if (SelectionKeys.isNavigation(keycode)) {\n            return KeySelection.sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          } else {\n            return Option.none();\n          }\n        }, Option.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var InputHandlers = {\n      mouse: mouse,\n      keyboard: keyboard\n    };\n\n    var remove$7 = function (element, classes) {\n      each(classes, function (x) {\n        remove$5(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add$2(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove$7(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected());\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected(),\n        ephemera.lastSelected(),\n        ephemera.firstSelected()\n      ]);\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionClass);\n        add$2(start, ephemera.firstSelected());\n        add$2(finish, ephemera.lastSelected());\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera) {\n      var removeSelectionAttributes = function (element) {\n        remove(element, ephemera.selected());\n        remove(element, ephemera.firstSelected());\n        remove(element, ephemera.lastSelected());\n      };\n      var addSelectionAttribute = function (element) {\n        set(element, ephemera.selected(), '1');\n      };\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionAttribute);\n        set(start, ephemera.firstSelected(), '1');\n        set(finish, ephemera.lastSelected(), '1');\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var hasInternalTarget = function (e) {\n      return has$1(Element.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection$1 (editor, lazyResize) {\n      var handlerStruct = MixedBag([\n        'mousedown',\n        'mouseover',\n        'mouseup',\n        'keyup',\n        'keydown'\n      ], []);\n      var handlers = Option.none();\n      var annotations = SelectionAnnotation.byAttr(Ephemera);\n      editor.on('init', function (e) {\n        var win = editor.getWin();\n        var body = getBody$1(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = Element.fromDom(sel.getStart());\n          var end = Element.fromDom(sel.getEnd());\n          var shared = DomParent.sharedOne(TableLookup.table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = InputHandlers.mouse(win, body, isRoot, annotations);\n        var keyHandlers = InputHandlers.keyboard(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw().shiftKey === true;\n        };\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill()) {\n            event.kill();\n          }\n          response.selection().each(function (ns) {\n            var relative = Selection.relative(ns.start(), ns.finish());\n            var rng = asLtrRange(win, relative);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          if (wrappedEvent.raw().shiftKey && SelectionKeys.isNavigation(wrappedEvent.raw().which)) {\n            var rng = editor.selection.getRng();\n            var start = Element.fromDom(rng.startContainer);\n            var end = Element.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          lazyResize().each(function (resize) {\n            resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var startContainer = Element.fromDom(editor.selection.getStart());\n          var start = Element.fromDom(rng.startContainer);\n          var end = Element.fromDom(rng.endContainer);\n          var direction = Direction.directionAt(startContainer).isRtl() ? SelectionKeys.rtl : SelectionKeys.ltr;\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            resize.showBars();\n          });\n        };\n        var isMouseEvent = function (event) {\n          return event.hasOwnProperty('x') && event.hasOwnProperty('y');\n        };\n        var wrapEvent = function (event) {\n          var target = Element.fromDom(event.target);\n          var stop = function () {\n            event.stopPropagation();\n          };\n          var prevent = function () {\n            event.preventDefault();\n          };\n          var kill = compose(prevent, stop);\n          return {\n            target: constant(target),\n            x: constant(isMouseEvent(event) ? event.x : null),\n            y: constant(isMouseEvent(event) ? event.y : null),\n            stop: stop,\n            prevent: prevent,\n            kill: kill,\n            raw: constant(event)\n          };\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          if (global$2.ie && global$2.ie >= 12 && raw.buttons === 0) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(wrapEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(wrapEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(wrapEvent(e));\n          }\n        };\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('nodechange', syncSelection);\n        handlers = Option.some(handlerStruct({\n          mousedown: mouseDown,\n          mouseover: mouseOver,\n          mouseup: mouseUp,\n          keyup: keyup,\n          keydown: keydown\n        }));\n      });\n      var destroy = function () {\n        handlers.each(function (handlers) {\n        });\n      };\n      return {\n        clear: annotations.clear,\n        destroy: destroy\n      };\n    }\n\n    var Selections = function (editor) {\n      var get = function () {\n        var body = getBody$1(editor);\n        return TableSelection.retrieve(body, Ephemera.selectedSelector()).fold(function () {\n          if (editor.selection.getStart() === undefined) {\n            return SelectionTypes.none();\n          } else {\n            return SelectionTypes.single(editor.selection);\n          }\n        }, function (cells) {\n          return SelectionTypes.multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var each$4 = global$1.each;\n    var addButtons = function (editor) {\n      var menuItems = [];\n      each$4('inserttable tableprops deletetable | cell row column'.split(' '), function (name) {\n        if (name === '|') {\n          menuItems.push({ text: '-' });\n        } else {\n          menuItems.push(editor.menuItems[name]);\n        }\n      });\n      editor.addButton('table', {\n        type: 'menubutton',\n        title: 'Table',\n        menu: menuItems\n      });\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      editor.addButton('tableprops', {\n        title: 'Table properties',\n        onclick: cmd('mceTableProps'),\n        icon: 'table'\n      });\n      editor.addButton('tabledelete', {\n        title: 'Delete table',\n        onclick: cmd('mceTableDelete')\n      });\n      editor.addButton('tablecellprops', {\n        title: 'Cell properties',\n        onclick: cmd('mceTableCellProps')\n      });\n      editor.addButton('tablemergecells', {\n        title: 'Merge cells',\n        onclick: cmd('mceTableMergeCells')\n      });\n      editor.addButton('tablesplitcells', {\n        title: 'Split cell',\n        onclick: cmd('mceTableSplitCells')\n      });\n      editor.addButton('tableinsertrowbefore', {\n        title: 'Insert row before',\n        onclick: cmd('mceTableInsertRowBefore')\n      });\n      editor.addButton('tableinsertrowafter', {\n        title: 'Insert row after',\n        onclick: cmd('mceTableInsertRowAfter')\n      });\n      editor.addButton('tabledeleterow', {\n        title: 'Delete row',\n        onclick: cmd('mceTableDeleteRow')\n      });\n      editor.addButton('tablerowprops', {\n        title: 'Row properties',\n        onclick: cmd('mceTableRowProps')\n      });\n      editor.addButton('tablecutrow', {\n        title: 'Cut row',\n        onclick: cmd('mceTableCutRow')\n      });\n      editor.addButton('tablecopyrow', {\n        title: 'Copy row',\n        onclick: cmd('mceTableCopyRow')\n      });\n      editor.addButton('tablepasterowbefore', {\n        title: 'Paste row before',\n        onclick: cmd('mceTablePasteRowBefore')\n      });\n      editor.addButton('tablepasterowafter', {\n        title: 'Paste row after',\n        onclick: cmd('mceTablePasteRowAfter')\n      });\n      editor.addButton('tableinsertcolbefore', {\n        title: 'Insert column before',\n        onclick: cmd('mceTableInsertColBefore')\n      });\n      editor.addButton('tableinsertcolafter', {\n        title: 'Insert column after',\n        onclick: cmd('mceTableInsertColAfter')\n      });\n      editor.addButton('tabledeletecol', {\n        title: 'Delete column',\n        onclick: cmd('mceTableDeleteCol')\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        var selectorMatched = editor.dom.is(table, 'table') && editor.getBody().contains(table);\n        return selectorMatched;\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.addContextToolbar(isTable, toolbar.join(' '));\n      }\n    };\n    var Buttons = {\n      addButtons: addButtons,\n      addToolbars: addToolbars\n    };\n\n    var addMenuItems = function (editor, selections) {\n      var targets = Option.none();\n      var tableCtrls = [];\n      var cellCtrls = [];\n      var mergeCtrls = [];\n      var unmergeCtrls = [];\n      var noTargetDisable = function (ctrl) {\n        ctrl.disabled(true);\n      };\n      var ctrlEnable = function (ctrl) {\n        ctrl.disabled(false);\n      };\n      var pushTable = function () {\n        var self = this;\n        tableCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushCell = function () {\n        var self = this;\n        cellCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          ctrlEnable(self);\n        });\n      };\n      var pushMerge = function () {\n        var self = this;\n        mergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.mergable().isNone());\n        });\n      };\n      var pushUnmerge = function () {\n        var self = this;\n        unmergeCtrls.push(self);\n        targets.fold(function () {\n          noTargetDisable(self);\n        }, function (targets) {\n          self.disabled(targets.unmergable().isNone());\n        });\n      };\n      var setDisabledCtrls = function () {\n        targets.fold(function () {\n          each(tableCtrls, noTargetDisable);\n          each(cellCtrls, noTargetDisable);\n          each(mergeCtrls, noTargetDisable);\n          each(unmergeCtrls, noTargetDisable);\n        }, function (targets) {\n          each(tableCtrls, ctrlEnable);\n          each(cellCtrls, ctrlEnable);\n          each(mergeCtrls, function (mergeCtrl) {\n            mergeCtrl.disabled(targets.mergable().isNone());\n          });\n          each(unmergeCtrls, function (unmergeCtrl) {\n            unmergeCtrl.disabled(targets.unmergable().isNone());\n          });\n        });\n      };\n      editor.on('init', function () {\n        editor.on('nodechange', function (e) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          targets = cellOpt.bind(function (cellDom) {\n            var cell = Element.fromDom(cellDom);\n            var table = TableLookup.table(cell);\n            return table.map(function (table) {\n              return TableTargets.forMenu(selections, table, cell);\n            });\n          });\n          setDisabledCtrls();\n        });\n      });\n      var generateTableGrid = function () {\n        var html = '';\n        html = '<table role=\"grid\" class=\"mce-grid mce-grid-border\" aria-readonly=\"true\">';\n        for (var y = 0; y < 10; y++) {\n          html += '<tr>';\n          for (var x = 0; x < 10; x++) {\n            html += '<td role=\"gridcell\" tabindex=\"-1\"><a id=\"mcegrid' + (y * 10 + x) + '\" href=\"#\" ' + 'data-mce-x=\"' + x + '\" data-mce-y=\"' + y + '\"></a></td>';\n          }\n          html += '</tr>';\n        }\n        html += '</table>';\n        html += '<div class=\"mce-text-center\" role=\"presentation\">1 x 1</div>';\n        return html;\n      };\n      var selectGrid = function (editor, tx, ty, control) {\n        var table = control.getEl().getElementsByTagName('table')[0];\n        var x, y, focusCell, cell, active;\n        var rtl = control.isRtl() || control.parent().rel === 'tl-tr';\n        table.nextSibling.innerHTML = tx + 1 + ' x ' + (ty + 1);\n        if (rtl) {\n          tx = 9 - tx;\n        }\n        for (y = 0; y < 10; y++) {\n          for (x = 0; x < 10; x++) {\n            cell = table.rows[y].childNodes[x].firstChild;\n            active = (rtl ? x >= tx : x <= tx) && y <= ty;\n            editor.dom.toggleClass(cell, 'mce-active', active);\n            if (active) {\n              focusCell = cell;\n            }\n          }\n        }\n        return focusCell.parentNode;\n      };\n      var insertTable = hasTableGrid(editor) === false ? {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        onclick: cmd('mceInsertTable')\n      } : {\n        text: 'Table',\n        icon: 'table',\n        context: 'table',\n        ariaHideMenu: true,\n        onclick: function (e) {\n          if (e.aria) {\n            this.parent().hideAll();\n            e.stopImmediatePropagation();\n            editor.execCommand('mceInsertTable');\n          }\n        },\n        onshow: function () {\n          selectGrid(editor, 0, 0, this.menu.items()[0]);\n        },\n        onhide: function () {\n          var elements = this.menu.items()[0].getEl().getElementsByTagName('a');\n          editor.dom.removeClass(elements, 'mce-active');\n          editor.dom.addClass(elements[0], 'mce-active');\n        },\n        menu: [{\n            type: 'container',\n            html: generateTableGrid(),\n            onPostRender: function () {\n              this.lastX = this.lastY = 0;\n            },\n            onmousemove: function (e) {\n              var target = e.target;\n              var x, y;\n              if (target.tagName.toUpperCase() === 'A') {\n                x = parseInt(target.getAttribute('data-mce-x'), 10);\n                y = parseInt(target.getAttribute('data-mce-y'), 10);\n                if (this.isRtl() || this.parent().rel === 'tl-tr') {\n                  x = 9 - x;\n                }\n                if (x !== this.lastX || y !== this.lastY) {\n                  selectGrid(editor, x, y, e.control);\n                  this.lastX = x;\n                  this.lastY = y;\n                }\n              }\n            },\n            onclick: function (e) {\n              var self = this;\n              if (e.target.tagName.toUpperCase() === 'A') {\n                e.preventDefault();\n                e.stopPropagation();\n                self.parent().cancel();\n                editor.undoManager.transact(function () {\n                  InsertTable.insert(editor, self.lastX + 1, self.lastY + 1);\n                });\n                editor.addVisual();\n              }\n            }\n          }]\n      };\n      function cmd(command) {\n        return function () {\n          editor.execCommand(command);\n        };\n      }\n      var tableProperties = {\n        text: 'Table properties',\n        context: 'table',\n        onPostRender: pushTable,\n        onclick: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        context: 'table',\n        onPostRender: pushTable,\n        cmd: 'mceTableDelete'\n      };\n      var row = {\n        text: 'Row',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert row before',\n            onclick: cmd('mceTableInsertRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert row after',\n            onclick: cmd('mceTableInsertRowAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete row',\n            onclick: cmd('mceTableDeleteRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Row properties',\n            onclick: cmd('mceTableRowProps'),\n            onPostRender: pushCell\n          },\n          { text: '-' },\n          {\n            text: 'Cut row',\n            onclick: cmd('mceTableCutRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Copy row',\n            onclick: cmd('mceTableCopyRow'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row before',\n            onclick: cmd('mceTablePasteRowBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Paste row after',\n            onclick: cmd('mceTablePasteRowAfter'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var column = {\n        text: 'Column',\n        context: 'table',\n        menu: [\n          {\n            text: 'Insert column before',\n            onclick: cmd('mceTableInsertColBefore'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Insert column after',\n            onclick: cmd('mceTableInsertColAfter'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Delete column',\n            onclick: cmd('mceTableDeleteCol'),\n            onPostRender: pushCell\n          }\n        ]\n      };\n      var cell = {\n        separator: 'before',\n        text: 'Cell',\n        context: 'table',\n        menu: [\n          {\n            text: 'Cell properties',\n            onclick: cmd('mceTableCellProps'),\n            onPostRender: pushCell\n          },\n          {\n            text: 'Merge cells',\n            onclick: cmd('mceTableMergeCells'),\n            onPostRender: pushMerge\n          },\n          {\n            text: 'Split cell',\n            onclick: cmd('mceTableSplitCells'),\n            onPostRender: pushUnmerge\n          }\n        ]\n      };\n      editor.addMenuItem('inserttable', insertTable);\n      editor.addMenuItem('tableprops', tableProperties);\n      editor.addMenuItem('deletetable', deleteTable);\n      editor.addMenuItem('row', row);\n      editor.addMenuItem('column', column);\n      editor.addMenuItem('cell', cell);\n    };\n    var MenuItems = { addMenuItems: addMenuItems };\n\n    var getClipboardRows = function (clipboardRows) {\n      return clipboardRows.get().fold(function () {\n        return;\n      }, function (rows) {\n        return map(rows, function (row) {\n          return row.dom();\n        });\n      });\n    };\n    var setClipboardRows = function (rows, clipboardRows) {\n      var sugarRows = map(rows, Element.fromDom);\n      clipboardRows.set(Option.from(sugarRows));\n    };\n    var getApi = function (editor, clipboardRows) {\n      return {\n        insertTable: function (columns, rows) {\n          return InsertTable.insert(editor, columns, rows);\n        },\n        setClipboardRows: function (rows) {\n          return setClipboardRows(rows, clipboardRows);\n        },\n        getClipboardRows: function () {\n          return getClipboardRows(clipboardRows);\n        }\n      };\n    };\n\n    function Plugin(editor) {\n      var resizeHandler = ResizeHandler(editor);\n      var cellSelection = CellSelection$1(editor, resizeHandler.lazyResize);\n      var actions = TableActions(editor, resizeHandler.lazyWire);\n      var selections = Selections(editor);\n      var clipboardRows = Cell(Option.none());\n      Commands.registerCommands(editor, actions, cellSelection, selections, clipboardRows);\n      Clipboard.registerEvents(editor, selections, actions, cellSelection);\n      MenuItems.addMenuItems(editor, selections);\n      Buttons.addButtons(editor);\n      Buttons.addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(Ephemera.firstSelected());\n        editor.serializer.addTempAttr(Ephemera.lastSelected());\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          TabContext.handle(e, editor, actions, resizeHandler.lazyWire);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n        cellSelection.destroy();\n      });\n      return getApi(editor, clipboardRows);\n    }\n    global.add('table', Plugin);\n    function Plugin$1 () {\n    }\n\n    return Plugin$1;\n\n}(window));\n})();\n", "// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/table/index.js\");"],
  "mappings": "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",
  "names": []
}
