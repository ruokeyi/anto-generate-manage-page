{
  "version": 3,
  "sources": ["../tinymce/plugins/autosave/plugin.js", "../tinymce/plugins/autosave/index.js", "dep:tinymce_plugins_autosave_index"],
  "sourcesContent": ["(function () {\nvar autosave = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var fireRestoreDraft = function (editor) {\n      return editor.fire('RestoreDraft');\n    };\n    var fireStoreDraft = function (editor) {\n      return editor.fire('StoreDraft');\n    };\n    var fireRemoveDraft = function (editor) {\n      return editor.fire('RemoveDraft');\n    };\n\n    var parse = function (timeString, defaultTime) {\n      var multiples = {\n        s: 1000,\n        m: 60000\n      };\n      var toParse = timeString || defaultTime;\n      var parsedTime = /^(\\d+)([ms]?)$/.exec('' + toParse);\n      return (parsedTime[2] ? multiples[parsedTime[2]] : 1) * parseInt(toParse, 10);\n    };\n\n    var shouldAskBeforeUnload = function (editor) {\n      return editor.getParam('autosave_ask_before_unload', true);\n    };\n    var getAutoSavePrefix = function (editor) {\n      var prefix = editor.getParam('autosave_prefix', 'tinymce-autosave-{path}{query}{hash}-{id}-');\n      prefix = prefix.replace(/\\{path\\}/g, domGlobals.document.location.pathname);\n      prefix = prefix.replace(/\\{query\\}/g, domGlobals.document.location.search);\n      prefix = prefix.replace(/\\{hash\\}/g, domGlobals.document.location.hash);\n      prefix = prefix.replace(/\\{id\\}/g, editor.id);\n      return prefix;\n    };\n    var shouldRestoreWhenEmpty = function (editor) {\n      return editor.getParam('autosave_restore_when_empty', false);\n    };\n    var getAutoSaveInterval = function (editor) {\n      return parse(editor.settings.autosave_interval, '30s');\n    };\n    var getAutoSaveRetention = function (editor) {\n      return parse(editor.settings.autosave_retention, '20m');\n    };\n\n    var isEmpty = function (editor, html) {\n      var forcedRootBlockName = editor.settings.forced_root_block;\n      html = global$2.trim(typeof html === 'undefined' ? editor.getBody().innerHTML : html);\n      return html === '' || new RegExp('^<' + forcedRootBlockName + '[^>]*>((\\xA0|&nbsp;|[ \\t]|<br[^>]*>)+?|)</' + forcedRootBlockName + '>|<br>$', 'i').test(html);\n    };\n    var hasDraft = function (editor) {\n      var time = parseInt(global$1.getItem(getAutoSavePrefix(editor) + 'time'), 10) || 0;\n      if (new Date().getTime() - time > getAutoSaveRetention(editor)) {\n        removeDraft(editor, false);\n        return false;\n      }\n      return true;\n    };\n    var removeDraft = function (editor, fire) {\n      var prefix = getAutoSavePrefix(editor);\n      global$1.removeItem(prefix + 'draft');\n      global$1.removeItem(prefix + 'time');\n      if (fire !== false) {\n        fireRemoveDraft(editor);\n      }\n    };\n    var storeDraft = function (editor) {\n      var prefix = getAutoSavePrefix(editor);\n      if (!isEmpty(editor) && editor.isDirty()) {\n        global$1.setItem(prefix + 'draft', editor.getContent({\n          format: 'raw',\n          no_events: true\n        }));\n        global$1.setItem(prefix + 'time', new Date().getTime().toString());\n        fireStoreDraft(editor);\n      }\n    };\n    var restoreDraft = function (editor) {\n      var prefix = getAutoSavePrefix(editor);\n      if (hasDraft(editor)) {\n        editor.setContent(global$1.getItem(prefix + 'draft'), { format: 'raw' });\n        fireRestoreDraft(editor);\n      }\n    };\n    var startStoreDraft = function (editor, started) {\n      var interval = getAutoSaveInterval(editor);\n      if (!started.get()) {\n        setInterval(function () {\n          if (!editor.removed) {\n            storeDraft(editor);\n          }\n        }, interval);\n        started.set(true);\n      }\n    };\n    var restoreLastDraft = function (editor) {\n      editor.undoManager.transact(function () {\n        restoreDraft(editor);\n        removeDraft(editor);\n      });\n      editor.focus();\n    };\n\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n\n    var get = function (editor) {\n      return {\n        hasDraft: curry(hasDraft, editor),\n        storeDraft: curry(storeDraft, editor),\n        restoreDraft: curry(restoreDraft, editor),\n        removeDraft: curry(removeDraft, editor),\n        isEmpty: curry(isEmpty, editor)\n      };\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    global$3._beforeUnloadHandler = function () {\n      var msg;\n      global$2.each(global$3.get(), function (editor) {\n        if (editor.plugins.autosave) {\n          editor.plugins.autosave.storeDraft();\n        }\n        if (!msg && editor.isDirty() && shouldAskBeforeUnload(editor)) {\n          msg = editor.translate('You have unsaved changes are you sure you want to navigate away?');\n        }\n      });\n      return msg;\n    };\n    var setup = function (editor) {\n      domGlobals.window.onbeforeunload = global$3._beforeUnloadHandler;\n    };\n\n    var postRender = function (editor, started) {\n      return function (e) {\n        var ctrl = e.control;\n        ctrl.disabled(!hasDraft(editor));\n        editor.on('StoreDraft RestoreDraft RemoveDraft', function () {\n          ctrl.disabled(!hasDraft(editor));\n        });\n        startStoreDraft(editor, started);\n      };\n    };\n    var register = function (editor, started) {\n      editor.addButton('restoredraft', {\n        title: 'Restore last draft',\n        onclick: function () {\n          restoreLastDraft(editor);\n        },\n        onPostRender: postRender(editor, started)\n      });\n      editor.addMenuItem('restoredraft', {\n        text: 'Restore last draft',\n        onclick: function () {\n          restoreLastDraft(editor);\n        },\n        onPostRender: postRender(editor, started),\n        context: 'file'\n      });\n    };\n\n    global.add('autosave', function (editor) {\n      var started = Cell(false);\n      setup();\n      register(editor, started);\n      editor.on('init', function () {\n        if (shouldRestoreWhenEmpty(editor) && editor.dom.isEmpty(editor.getBody())) {\n          restoreDraft(editor);\n        }\n      });\n      return get(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n", "// Exports the \"autosave\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autosave')\n//   ES2015:\n//     import 'tinymce/plugins/autosave'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/autosave/index.js\");"],
  "mappings": "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",
  "names": []
}
