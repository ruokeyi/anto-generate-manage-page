{
  "version": 3,
  "sources": ["../tinymce/plugins/visualblocks/plugin.js", "../tinymce/plugins/visualblocks/index.js", "dep:tinymce_plugins_visualblocks_index"],
  "sourcesContent": ["(function () {\nvar visualblocks = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var fireVisualBlocks = function (editor, state) {\n      editor.fire('VisualBlocks', { state: state });\n    };\n    var Events = { fireVisualBlocks: fireVisualBlocks };\n\n    var isEnabledByDefault = function (editor) {\n      return editor.getParam('visualblocks_default_state', false);\n    };\n    var getContentCss = function (editor) {\n      return editor.settings.visualblocks_content_css;\n    };\n    var Settings = {\n      isEnabledByDefault: isEnabledByDefault,\n      getContentCss: getContentCss\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var cssId = global$1.DOM.uniqueId();\n    var load = function (doc, url) {\n      var linkElements = global$2.toArray(doc.getElementsByTagName('link'));\n      var matchingLinkElms = global$2.grep(linkElements, function (head) {\n        return head.id === cssId;\n      });\n      if (matchingLinkElms.length === 0) {\n        var linkElm = global$1.DOM.create('link', {\n          id: cssId,\n          rel: 'stylesheet',\n          href: url\n        });\n        doc.getElementsByTagName('head')[0].appendChild(linkElm);\n      }\n    };\n    var LoadCss = { load: load };\n\n    var toggleVisualBlocks = function (editor, pluginUrl, enabledState) {\n      var dom = editor.dom;\n      var contentCss = Settings.getContentCss(editor);\n      LoadCss.load(editor.getDoc(), contentCss ? contentCss : pluginUrl + '/css/visualblocks.css');\n      dom.toggleClass(editor.getBody(), 'mce-visualblocks');\n      enabledState.set(!enabledState.get());\n      Events.fireVisualBlocks(editor, enabledState.get());\n    };\n    var VisualBlocks = { toggleVisualBlocks: toggleVisualBlocks };\n\n    var register = function (editor, pluginUrl, enabledState) {\n      editor.addCommand('mceVisualBlocks', function () {\n        VisualBlocks.toggleVisualBlocks(editor, pluginUrl, enabledState);\n      });\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor, pluginUrl, enabledState) {\n      editor.on('PreviewFormats AfterPreviewFormats', function (e) {\n        if (enabledState.get()) {\n          editor.dom.toggleClass(editor.getBody(), 'mce-visualblocks', e.type === 'afterpreviewformats');\n        }\n      });\n      editor.on('init', function () {\n        if (Settings.isEnabledByDefault(editor)) {\n          VisualBlocks.toggleVisualBlocks(editor, pluginUrl, enabledState);\n        }\n      });\n      editor.on('remove', function () {\n        editor.dom.removeClass(editor.getBody(), 'mce-visualblocks');\n      });\n    };\n    var Bindings = { setup: setup };\n\n    var toggleActiveState = function (editor, enabledState) {\n      return function (e) {\n        var ctrl = e.control;\n        ctrl.active(enabledState.get());\n        editor.on('VisualBlocks', function (e) {\n          ctrl.active(e.state);\n        });\n      };\n    };\n    var register$1 = function (editor, enabledState) {\n      editor.addButton('visualblocks', {\n        active: false,\n        title: 'Show blocks',\n        cmd: 'mceVisualBlocks',\n        onPostRender: toggleActiveState(editor, enabledState)\n      });\n      editor.addMenuItem('visualblocks', {\n        text: 'Show blocks',\n        cmd: 'mceVisualBlocks',\n        onPostRender: toggleActiveState(editor, enabledState),\n        selectable: true,\n        context: 'view',\n        prependToContext: true\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('visualblocks', function (editor, pluginUrl) {\n      var enabledState = Cell(false);\n      Commands.register(editor, pluginUrl, enabledState);\n      Buttons.register(editor, enabledState);\n      Bindings.setup(editor, pluginUrl, enabledState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"visualblocks\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/visualblocks')\n//   ES2015:\n//     import 'tinymce/plugins/visualblocks'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/visualblocks/index.js\");"],
  "mappings": "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",
  "names": []
}
