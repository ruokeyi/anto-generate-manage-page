{
  "version": 3,
  "sources": ["../tinymce/plugins/pagebreak/plugin.js", "../tinymce/plugins/pagebreak/index.js", "dep:tinymce_plugins_pagebreak_index"],
  "sourcesContent": ["(function () {\nvar pagebreak = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var getSeparatorHtml = function (editor) {\n      return editor.getParam('pagebreak_separator', '<!-- pagebreak -->');\n    };\n    var shouldSplitBlock = function (editor) {\n      return editor.getParam('pagebreak_split_block', false);\n    };\n    var Settings = {\n      getSeparatorHtml: getSeparatorHtml,\n      shouldSplitBlock: shouldSplitBlock\n    };\n\n    var getPageBreakClass = function () {\n      return 'mce-pagebreak';\n    };\n    var getPlaceholderHtml = function () {\n      return '<img src=\"' + global$1.transparentSrc + '\" class=\"' + getPageBreakClass() + '\" data-mce-resize=\"false\" data-mce-placeholder />';\n    };\n    var setup = function (editor) {\n      var separatorHtml = Settings.getSeparatorHtml(editor);\n      var pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\\?\\.\\*\\[\\]\\(\\)\\{\\}\\+\\^\\$\\:]/g, function (a) {\n        return '\\\\' + a;\n      }), 'gi');\n      editor.on('BeforeSetContent', function (e) {\n        e.content = e.content.replace(pageBreakSeparatorRegExp, getPlaceholderHtml());\n      });\n      editor.on('PreInit', function () {\n        editor.serializer.addNodeFilter('img', function (nodes) {\n          var i = nodes.length, node, className;\n          while (i--) {\n            node = nodes[i];\n            className = node.attr('class');\n            if (className && className.indexOf('mce-pagebreak') !== -1) {\n              var parentNode = node.parent;\n              if (editor.schema.getBlockElements()[parentNode.name] && Settings.shouldSplitBlock(editor)) {\n                parentNode.type = 3;\n                parentNode.value = separatorHtml;\n                parentNode.raw = true;\n                node.remove();\n                continue;\n              }\n              node.type = 3;\n              node.value = separatorHtml;\n              node.raw = true;\n            }\n          }\n        });\n      });\n    };\n    var FilterContent = {\n      setup: setup,\n      getPlaceholderHtml: getPlaceholderHtml,\n      getPageBreakClass: getPageBreakClass\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mcePageBreak', function () {\n        if (editor.settings.pagebreak_split_block) {\n          editor.insertContent('<p>' + FilterContent.getPlaceholderHtml() + '</p>');\n        } else {\n          editor.insertContent(FilterContent.getPlaceholderHtml());\n        }\n      });\n    };\n    var Commands = { register: register };\n\n    var setup$1 = function (editor) {\n      editor.on('ResolveName', function (e) {\n        if (e.target.nodeName === 'IMG' && editor.dom.hasClass(e.target, FilterContent.getPageBreakClass())) {\n          e.name = 'pagebreak';\n        }\n      });\n    };\n    var ResolveName = { setup: setup$1 };\n\n    var register$1 = function (editor) {\n      editor.addButton('pagebreak', {\n        title: 'Page break',\n        cmd: 'mcePageBreak'\n      });\n      editor.addMenuItem('pagebreak', {\n        text: 'Page break',\n        icon: 'pagebreak',\n        cmd: 'mcePageBreak',\n        context: 'insert'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('pagebreak', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      FilterContent.setup(editor);\n      ResolveName.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"pagebreak\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/pagebreak')\n//   ES2015:\n//     import 'tinymce/plugins/pagebreak'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/pagebreak/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,IAAC,YAAY;AACb,UAAI,YAAa,WAAY;AACzB;AAEA,YAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ;AAExC,YAAI,WAAW,QAAQ,KAAK,MAAM,QAAQ;AAE1C,YAAI,mBAAmB,SAAU,QAAQ;AACvC,iBAAO,OAAO,SAAS,uBAAuB;AAAA;AAEhD,YAAI,mBAAmB,SAAU,QAAQ;AACvC,iBAAO,OAAO,SAAS,yBAAyB;AAAA;AAElD,YAAI,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAGF,YAAI,oBAAoB,WAAY;AAClC,iBAAO;AAAA;AAET,YAAI,qBAAqB,WAAY;AACnC,iBAAO,eAAe,SAAS,iBAAiB,cAAc,sBAAsB;AAAA;AAEtF,YAAI,QAAQ,SAAU,QAAQ;AAC5B,cAAI,gBAAgB,SAAS,iBAAiB;AAC9C,cAAI,2BAA2B,IAAI,OAAO,cAAc,QAAQ,iCAAiC,SAAU,GAAG;AAC5G,mBAAO,OAAO;AAAA,cACZ;AACJ,iBAAO,GAAG,oBAAoB,SAAU,GAAG;AACzC,cAAE,UAAU,EAAE,QAAQ,QAAQ,0BAA0B;AAAA;AAE1D,iBAAO,GAAG,WAAW,WAAY;AAC/B,mBAAO,WAAW,cAAc,OAAO,SAAU,OAAO;AACtD,kBAAI,IAAI,MAAM,QAAQ,MAAM;AAC5B,qBAAO,KAAK;AACV,uBAAO,MAAM;AACb,4BAAY,KAAK,KAAK;AACtB,oBAAI,aAAa,UAAU,QAAQ,qBAAqB,IAAI;AAC1D,sBAAI,aAAa,KAAK;AACtB,sBAAI,OAAO,OAAO,mBAAmB,WAAW,SAAS,SAAS,iBAAiB,SAAS;AAC1F,+BAAW,OAAO;AAClB,+BAAW,QAAQ;AACnB,+BAAW,MAAM;AACjB,yBAAK;AACL;AAAA;AAEF,uBAAK,OAAO;AACZ,uBAAK,QAAQ;AACb,uBAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrB,YAAI,gBAAgB;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA;AAGF,YAAI,WAAW,SAAU,QAAQ;AAC/B,iBAAO,WAAW,gBAAgB,WAAY;AAC5C,gBAAI,OAAO,SAAS,uBAAuB;AACzC,qBAAO,cAAc,QAAQ,cAAc,uBAAuB;AAAA,mBAC7D;AACL,qBAAO,cAAc,cAAc;AAAA;AAAA;AAAA;AAIzC,YAAI,WAAW,EAAE;AAEjB,YAAI,UAAU,SAAU,QAAQ;AAC9B,iBAAO,GAAG,eAAe,SAAU,GAAG;AACpC,gBAAI,EAAE,OAAO,aAAa,SAAS,OAAO,IAAI,SAAS,EAAE,QAAQ,cAAc,sBAAsB;AACnG,gBAAE,OAAO;AAAA;AAAA;AAAA;AAIf,YAAI,cAAc,EAAE,OAAO;AAE3B,YAAI,aAAa,SAAU,QAAQ;AACjC,iBAAO,UAAU,aAAa;AAAA,YAC5B,OAAO;AAAA,YACP,KAAK;AAAA;AAEP,iBAAO,YAAY,aAAa;AAAA,YAC9B,MAAM;AAAA,YACN,MAAM;AAAA,YACN,KAAK;AAAA,YACL,SAAS;AAAA;AAAA;AAGb,YAAI,UAAU,EAAE,UAAU;AAE1B,eAAO,IAAI,aAAa,SAAU,QAAQ;AACxC,mBAAS,SAAS;AAClB,kBAAQ,SAAS;AACjB,wBAAc,MAAM;AACpB,sBAAY,MAAM;AAAA;AAEpB,0BAAmB;AAAA;AAGnB,eAAO;AAAA;AAAA;AAAA;AAAA;;;ACzGX;AAAA;AAMA;AAAA;AAAA;;;ACNA,IAAO,0CAAQ;",
  "names": []
}
