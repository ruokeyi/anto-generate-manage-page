{
  "version": 3,
  "sources": ["../tinymce/plugins/textpattern/plugin.js", "../tinymce/plugins/textpattern/index.js", "dep:tinymce_plugins_textpattern_index"],
  "sourcesContent": ["(function () {\nvar textpattern = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    function __spreadArrays() {\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n        s += arguments[i].length;\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n      return r;\n    }\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze) {\n        Object.freeze(me);\n      }\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null) {\n        return 'null';\n      }\n      var t = typeof x;\n      if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      }\n      if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      }\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isFunction = isType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var sort = function (xs, comparator) {\n      var copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var get = function (obj, key) {\n      return has(obj, key) ? Option.from(obj[key]) : Option.none();\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var isInlinePattern = function (pattern) {\n      return has(pattern, 'start') && has(pattern, 'end');\n    };\n    var isBlockPattern = function (pattern) {\n      return !has(pattern, 'end') && !has(pattern, 'replacement');\n    };\n    var isReplacementPattern = function (pattern) {\n      return has(pattern, 'replacement');\n    };\n    var sortPatterns = function (patterns) {\n      return sort(patterns, function (a, b) {\n        if (a.start.length === b.start.length) {\n          return 0;\n        }\n        return a.start.length > b.start.length ? -1 : 1;\n      });\n    };\n    var createPatternSet = function (patterns) {\n      return {\n        inlinePatterns: sortPatterns(filter(patterns, isInlinePattern)),\n        blockPatterns: sortPatterns(filter(patterns, isBlockPattern)),\n        replacementPatterns: filter(patterns, isReplacementPattern)\n      };\n    };\n\n    var get$1 = function (patternsState) {\n      var setPatterns = function (newPatterns) {\n        patternsState.set(createPatternSet(newPatterns));\n      };\n      var getPatterns = function () {\n        return __spreadArrays(patternsState.get().inlinePatterns, patternsState.get().blockPatterns, patternsState.get().replacementPatterns);\n      };\n      return {\n        setPatterns: setPatterns,\n        getPatterns: getPatterns\n      };\n    };\n    var Api = { get: get$1 };\n\n    var defaultPatterns = [\n      {\n        start: '*',\n        end: '*',\n        format: 'italic'\n      },\n      {\n        start: '**',\n        end: '**',\n        format: 'bold'\n      },\n      {\n        start: '***',\n        end: '***',\n        format: [\n          'bold',\n          'italic'\n        ]\n      },\n      {\n        start: '#',\n        format: 'h1'\n      },\n      {\n        start: '##',\n        format: 'h2'\n      },\n      {\n        start: '###',\n        format: 'h3'\n      },\n      {\n        start: '####',\n        format: 'h4'\n      },\n      {\n        start: '#####',\n        format: 'h5'\n      },\n      {\n        start: '######',\n        format: 'h6'\n      },\n      {\n        start: '1. ',\n        cmd: 'InsertOrderedList'\n      },\n      {\n        start: '* ',\n        cmd: 'InsertUnorderedList'\n      },\n      {\n        start: '- ',\n        cmd: 'InsertUnorderedList'\n      }\n    ];\n    var getPatternSet = function (editorSettings) {\n      var patterns = get(editorSettings, 'textpattern_patterns').getOr(defaultPatterns);\n      return createPatternSet(patterns);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var findPattern = function (patterns, text) {\n      for (var i = 0; i < patterns.length; i++) {\n        var pattern = patterns[i];\n        if (text.indexOf(pattern.start) !== 0) {\n          continue;\n        }\n        if (pattern.end && text.lastIndexOf(pattern.end) !== text.length - pattern.end.length) {\n          continue;\n        }\n        return pattern;\n      }\n    };\n    var isMatchingPattern = function (pattern, text, offset, delta) {\n      var textEnd = text.substr(offset - pattern.end.length - delta, pattern.end.length);\n      return textEnd === pattern.end;\n    };\n    var hasContent = function (offset, delta, pattern) {\n      return offset - delta - pattern.end.length - pattern.start.length > 0;\n    };\n    var findEndPattern = function (patterns, text, offset, delta) {\n      var pattern, i;\n      for (i = 0; i < patterns.length; i++) {\n        pattern = patterns[i];\n        if (pattern.end !== undefined && isMatchingPattern(pattern, text, offset, delta) && hasContent(offset, delta, pattern)) {\n          return pattern;\n        }\n      }\n    };\n    var findInlinePattern = function (patterns, rng, space) {\n      if (rng.collapsed === false) {\n        return;\n      }\n      var container = rng.startContainer;\n      var text = container.data;\n      var delta = space === true ? 1 : 0;\n      if (container.nodeType !== 3) {\n        return;\n      }\n      var endPattern = findEndPattern(patterns, text, rng.startOffset, delta);\n      if (endPattern === undefined) {\n        return;\n      }\n      var endOffset = text.lastIndexOf(endPattern.end, rng.startOffset - delta);\n      var startOffset = text.lastIndexOf(endPattern.start, endOffset - endPattern.end.length);\n      endOffset = text.indexOf(endPattern.end, startOffset + endPattern.start.length);\n      if (startOffset === -1) {\n        return;\n      }\n      var patternRng = domGlobals.document.createRange();\n      patternRng.setStart(container, startOffset);\n      patternRng.setEnd(container, endOffset + endPattern.end.length);\n      var startPattern = findPattern(patterns, patternRng.toString());\n      if (endPattern === undefined || startPattern !== endPattern || container.data.length <= endPattern.start.length + endPattern.end.length) {\n        return;\n      }\n      return {\n        pattern: endPattern,\n        startOffset: startOffset,\n        endOffset: endOffset\n      };\n    };\n    var findReplacementPattern = function (patterns, startSearch, text) {\n      for (var i = 0; i < patterns.length; i++) {\n        var index = text.lastIndexOf(patterns[i].start, startSearch);\n        if (index !== -1) {\n          return Option.some({\n            pattern: patterns[i],\n            startOffset: index\n          });\n        }\n      }\n      return Option.none();\n    };\n\n    var isText = function (node) {\n      return node && node.nodeType === 3;\n    };\n    var setSelection = function (editor, textNode, offset) {\n      var newRng = editor.dom.createRng();\n      newRng.setStart(textNode, offset);\n      newRng.setEnd(textNode, offset);\n      editor.selection.setRng(newRng);\n    };\n    var splitContainer = function (container, pattern, endOffset, startOffset) {\n      container = startOffset > 0 ? container.splitText(startOffset) : container;\n      container.splitText(endOffset - startOffset + pattern.end.length);\n      container.deleteData(0, pattern.start.length);\n      container.deleteData(container.data.length - pattern.end.length, pattern.end.length);\n      return container;\n    };\n    var splitAndApply = function (editor, container, found, inline) {\n      var formatArray = global$4.isArray(found.pattern.format) ? found.pattern.format : [found.pattern.format];\n      var validFormats = global$4.grep(formatArray, function (formatName) {\n        var format = editor.formatter.get(formatName);\n        return format && format[0].inline;\n      });\n      if (validFormats.length !== 0) {\n        editor.undoManager.transact(function () {\n          container = splitContainer(container, found.pattern, found.endOffset, found.startOffset);\n          if (inline) {\n            editor.selection.setCursorLocation(container.nextSibling, 1);\n          }\n          formatArray.forEach(function (format) {\n            editor.formatter.apply(format, {}, container);\n          });\n        });\n        return container;\n      }\n    };\n    var applyInlinePattern = function (editor, patterns, inline) {\n      var rng = editor.selection.getRng();\n      return Option.from(findInlinePattern(patterns, rng, inline)).map(function (foundPattern) {\n        return splitAndApply(editor, rng.startContainer, foundPattern, inline);\n      });\n    };\n    var applyInlinePatternSpace = function (editor, patterns) {\n      applyInlinePattern(editor, patterns, true).each(function (wrappedTextNode) {\n        var lastChar = wrappedTextNode.data.slice(-1);\n        if (/[\\u00a0 ]/.test(lastChar)) {\n          wrappedTextNode.deleteData(wrappedTextNode.data.length - 1, 1);\n          var lastCharNode = editor.dom.doc.createTextNode(lastChar);\n          editor.dom.insertAfter(lastCharNode, wrappedTextNode.parentNode);\n          setSelection(editor, lastCharNode, 1);\n        }\n      });\n    };\n    var applyInlinePatternEnter = function (editor, patterns) {\n      applyInlinePattern(editor, patterns, false).each(function (wrappedTextNode) {\n        setSelection(editor, wrappedTextNode, wrappedTextNode.data.length);\n      });\n    };\n    var applyBlockPattern = function (editor, patterns) {\n      var selection, dom, container, firstTextNode, node, format, textBlockElm, pattern, walker, rng, offset;\n      selection = editor.selection;\n      dom = editor.dom;\n      if (!selection.isCollapsed()) {\n        return;\n      }\n      textBlockElm = dom.getParent(selection.getStart(), 'p');\n      if (textBlockElm) {\n        walker = new global$3(textBlockElm, textBlockElm);\n        while (node = walker.next()) {\n          if (isText(node)) {\n            firstTextNode = node;\n            break;\n          }\n        }\n        if (firstTextNode) {\n          pattern = findPattern(patterns, firstTextNode.data);\n          if (!pattern) {\n            return;\n          }\n          rng = selection.getRng(true);\n          container = rng.startContainer;\n          offset = rng.startOffset;\n          if (firstTextNode === container) {\n            offset = Math.max(0, offset - pattern.start.length);\n          }\n          if (global$4.trim(firstTextNode.data).length === pattern.start.length) {\n            return;\n          }\n          if (pattern.format) {\n            format = editor.formatter.get(pattern.format);\n            if (format && format[0].block) {\n              firstTextNode.deleteData(0, pattern.start.length);\n              editor.formatter.apply(pattern.format, {}, firstTextNode);\n              rng.setStart(container, offset);\n              rng.collapse(true);\n              selection.setRng(rng);\n            }\n          }\n          if (pattern.cmd) {\n            editor.undoManager.transact(function () {\n              firstTextNode.deleteData(0, pattern.start.length);\n              editor.execCommand(pattern.cmd);\n            });\n          }\n        }\n      }\n    };\n    var selectionInsertText = function (editor, string) {\n      var rng = editor.selection.getRng();\n      var container = rng.startContainer;\n      if (isText(container)) {\n        var offset = rng.startOffset;\n        container.insertData(offset, string);\n        setSelection(editor, container, offset + string.length);\n      } else {\n        var newNode = editor.dom.doc.createTextNode(string);\n        rng.insertNode(newNode);\n        setSelection(editor, newNode, newNode.length);\n      }\n    };\n    var applyReplacement = function (editor, target, match) {\n      target.deleteData(match.startOffset, match.pattern.start.length);\n      editor.insertContent(match.pattern.replacement);\n      Option.from(target.nextSibling).filter(isText).each(function (nextSibling) {\n        nextSibling.insertData(0, target.data);\n        editor.dom.remove(target);\n      });\n    };\n    var extractChar = function (node, match) {\n      var offset = match.startOffset + match.pattern.start.length;\n      var char = node.data.slice(offset, offset + 1);\n      node.deleteData(offset, 1);\n      return char;\n    };\n    var applyReplacementPattern = function (editor, patterns, inline) {\n      var rng = editor.selection.getRng();\n      var container = rng.startContainer;\n      if (rng.collapsed && isText(container)) {\n        findReplacementPattern(patterns, rng.startOffset, container.data).each(function (match) {\n          var char = inline ? Option.some(extractChar(container, match)) : Option.none();\n          applyReplacement(editor, container, match);\n          char.each(function (ch) {\n            return selectionInsertText(editor, ch);\n          });\n        });\n      }\n    };\n    var applyReplacementPatternSpace = function (editor, patterns) {\n      applyReplacementPattern(editor, patterns, true);\n    };\n    var applyReplacementPatternEnter = function (editor, patterns) {\n      applyReplacementPattern(editor, patterns, false);\n    };\n\n    var handleEnter = function (editor, patternSet) {\n      applyReplacementPatternEnter(editor, patternSet.replacementPatterns);\n      applyInlinePatternEnter(editor, patternSet.inlinePatterns);\n      applyBlockPattern(editor, patternSet.blockPatterns);\n    };\n    var handleInlineKey = function (editor, patternSet) {\n      applyReplacementPatternSpace(editor, patternSet.replacementPatterns);\n      applyInlinePatternSpace(editor, patternSet.inlinePatterns);\n    };\n    var checkKeyEvent = function (codes, event, predicate) {\n      for (var i = 0; i < codes.length; i++) {\n        if (predicate(codes[i], event)) {\n          return true;\n        }\n      }\n    };\n    var checkKeyCode = function (codes, event) {\n      return checkKeyEvent(codes, event, function (code, event) {\n        return code === event.keyCode && global$2.modifierPressed(event) === false;\n      });\n    };\n    var checkCharCode = function (chars, event) {\n      return checkKeyEvent(chars, event, function (chr, event) {\n        return chr.charCodeAt(0) === event.charCode;\n      });\n    };\n    var KeyHandler = {\n      handleEnter: handleEnter,\n      handleInlineKey: handleInlineKey,\n      checkCharCode: checkCharCode,\n      checkKeyCode: checkKeyCode\n    };\n\n    var setup = function (editor, patternsState) {\n      var charCodes = [\n        ',',\n        '.',\n        ';',\n        ':',\n        '!',\n        '?'\n      ];\n      var keyCodes = [32];\n      editor.on('keydown', function (e) {\n        if (e.keyCode === 13 && !global$2.modifierPressed(e)) {\n          KeyHandler.handleEnter(editor, patternsState.get());\n        }\n      }, true);\n      editor.on('keyup', function (e) {\n        if (KeyHandler.checkKeyCode(keyCodes, e)) {\n          KeyHandler.handleInlineKey(editor, patternsState.get());\n        }\n      });\n      editor.on('keypress', function (e) {\n        if (KeyHandler.checkCharCode(charCodes, e)) {\n          global$1.setEditorTimeout(editor, function () {\n            KeyHandler.handleInlineKey(editor, patternsState.get());\n          });\n        }\n      });\n    };\n    var Keyboard = { setup: setup };\n\n    global.add('textpattern', function (editor) {\n      var patternsState = Cell(getPatternSet(editor.settings));\n      Keyboard.setup(editor, patternsState);\n      return Api.get(patternsState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n", "// Exports the \"textpattern\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/textpattern')\n//   ES2015:\n//     import 'tinymce/plugins/textpattern'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/textpattern/index.js\");"],
  "mappings": "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",
  "names": []
}
