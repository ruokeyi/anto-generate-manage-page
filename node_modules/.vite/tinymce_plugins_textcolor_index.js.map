{
  "version": 3,
  "sources": ["../tinymce/plugins/textcolor/plugin.js", "../tinymce/plugins/textcolor/index.js", "dep:tinymce_plugins_textcolor_index"],
  "sourcesContent": ["(function () {\nvar textcolor = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var getCurrentColor = function (editor, format) {\n      var color;\n      editor.dom.getParents(editor.selection.getStart(), function (elm) {\n        var value;\n        if (value = elm.style[format === 'forecolor' ? 'color' : 'background-color']) {\n          color = color ? color : value;\n        }\n      });\n      return color;\n    };\n    var mapColors = function (colorMap) {\n      var i;\n      var colors = [];\n      for (i = 0; i < colorMap.length; i += 2) {\n        colors.push({\n          text: colorMap[i + 1],\n          color: '#' + colorMap[i]\n        });\n      }\n      return colors;\n    };\n    var applyFormat = function (editor, format, value) {\n      editor.undoManager.transact(function () {\n        editor.focus();\n        editor.formatter.apply(format, { value: value });\n        editor.nodeChanged();\n      });\n    };\n    var removeFormat = function (editor, format) {\n      editor.undoManager.transact(function () {\n        editor.focus();\n        editor.formatter.remove(format, { value: null }, null, true);\n        editor.nodeChanged();\n      });\n    };\n    var TextColor = {\n      getCurrentColor: getCurrentColor,\n      mapColors: mapColors,\n      applyFormat: applyFormat,\n      removeFormat: removeFormat\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceApplyTextcolor', function (format, value) {\n        TextColor.applyFormat(editor, format, value);\n      });\n      editor.addCommand('mceRemoveTextcolor', function (format) {\n        TextColor.removeFormat(editor, format);\n      });\n    };\n    var Commands = { register: register };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var defaultColorMap = [\n      '000000',\n      'Black',\n      '993300',\n      'Burnt orange',\n      '333300',\n      'Dark olive',\n      '003300',\n      'Dark green',\n      '003366',\n      'Dark azure',\n      '000080',\n      'Navy Blue',\n      '333399',\n      'Indigo',\n      '333333',\n      'Very dark gray',\n      '800000',\n      'Maroon',\n      'FF6600',\n      'Orange',\n      '808000',\n      'Olive',\n      '008000',\n      'Green',\n      '008080',\n      'Teal',\n      '0000FF',\n      'Blue',\n      '666699',\n      'Grayish blue',\n      '808080',\n      'Gray',\n      'FF0000',\n      'Red',\n      'FF9900',\n      'Amber',\n      '99CC00',\n      'Yellow green',\n      '339966',\n      'Sea green',\n      '33CCCC',\n      'Turquoise',\n      '3366FF',\n      'Royal blue',\n      '800080',\n      'Purple',\n      '999999',\n      'Medium gray',\n      'FF00FF',\n      'Magenta',\n      'FFCC00',\n      'Gold',\n      'FFFF00',\n      'Yellow',\n      '00FF00',\n      'Lime',\n      '00FFFF',\n      'Aqua',\n      '00CCFF',\n      'Sky blue',\n      '993366',\n      'Red violet',\n      'FFFFFF',\n      'White',\n      'FF99CC',\n      'Pink',\n      'FFCC99',\n      'Peach',\n      'FFFF99',\n      'Light yellow',\n      'CCFFCC',\n      'Pale green',\n      'CCFFFF',\n      'Pale cyan',\n      '99CCFF',\n      'Light sky blue',\n      'CC99FF',\n      'Plum'\n    ];\n    var getTextColorMap = function (editor) {\n      return editor.getParam('textcolor_map', defaultColorMap);\n    };\n    var getForeColorMap = function (editor) {\n      return editor.getParam('forecolor_map', getTextColorMap(editor));\n    };\n    var getBackColorMap = function (editor) {\n      return editor.getParam('backcolor_map', getTextColorMap(editor));\n    };\n    var getTextColorRows = function (editor) {\n      return editor.getParam('textcolor_rows', 5);\n    };\n    var getTextColorCols = function (editor) {\n      return editor.getParam('textcolor_cols', 8);\n    };\n    var getForeColorRows = function (editor) {\n      return editor.getParam('forecolor_rows', getTextColorRows(editor));\n    };\n    var getBackColorRows = function (editor) {\n      return editor.getParam('backcolor_rows', getTextColorRows(editor));\n    };\n    var getForeColorCols = function (editor) {\n      return editor.getParam('forecolor_cols', getTextColorCols(editor));\n    };\n    var getBackColorCols = function (editor) {\n      return editor.getParam('backcolor_cols', getTextColorCols(editor));\n    };\n    var getColorPickerCallback = function (editor) {\n      return editor.getParam('color_picker_callback', null);\n    };\n    var hasColorPicker = function (editor) {\n      return typeof getColorPickerCallback(editor) === 'function';\n    };\n    var Settings = {\n      getForeColorMap: getForeColorMap,\n      getBackColorMap: getBackColorMap,\n      getForeColorRows: getForeColorRows,\n      getBackColorRows: getBackColorRows,\n      getForeColorCols: getForeColorCols,\n      getBackColorCols: getBackColorCols,\n      getColorPickerCallback: getColorPickerCallback,\n      hasColorPicker: hasColorPicker\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    var getHtml = function (cols, rows, colorMap, hasColorPicker) {\n      var colors, color, html, last, x, y, i, count = 0;\n      var id = global$1.DOM.uniqueId('mcearia');\n      var getColorCellHtml = function (color, title) {\n        var isNoColor = color === 'transparent';\n        return '<td class=\"mce-grid-cell' + (isNoColor ? ' mce-colorbtn-trans' : '') + '\">' + '<div id=\"' + id + '-' + count++ + '\"' + ' data-mce-color=\"' + (color ? color : '') + '\"' + ' role=\"option\"' + ' tabIndex=\"-1\"' + ' style=\"' + (color ? 'background-color: ' + color : '') + '\"' + ' title=\"' + global$3.translate(title) + '\">' + (isNoColor ? '&#215;' : '') + '</div>' + '</td>';\n      };\n      colors = TextColor.mapColors(colorMap);\n      colors.push({\n        text: global$3.translate('No color'),\n        color: 'transparent'\n      });\n      html = '<table class=\"mce-grid mce-grid-border mce-colorbutton-grid\" role=\"list\" cellspacing=\"0\"><tbody>';\n      last = colors.length - 1;\n      for (y = 0; y < rows; y++) {\n        html += '<tr>';\n        for (x = 0; x < cols; x++) {\n          i = y * cols + x;\n          if (i > last) {\n            html += '<td></td>';\n          } else {\n            color = colors[i];\n            html += getColorCellHtml(color.color, color.text);\n          }\n        }\n        html += '</tr>';\n      }\n      if (hasColorPicker) {\n        html += '<tr>' + '<td colspan=\"' + cols + '\" class=\"mce-custom-color-btn\">' + '<div id=\"' + id + '-c\" class=\"mce-widget mce-btn mce-btn-small mce-btn-flat\" ' + 'role=\"button\" tabindex=\"-1\" aria-labelledby=\"' + id + '-c\" style=\"width: 100%\">' + '<button type=\"button\" role=\"presentation\" tabindex=\"-1\">' + global$3.translate('Custom...') + '</button>' + '</div>' + '</td>' + '</tr>';\n        html += '<tr>';\n        for (x = 0; x < cols; x++) {\n          html += getColorCellHtml('', 'Custom color');\n        }\n        html += '</tr>';\n      }\n      html += '</tbody></table>';\n      return html;\n    };\n    var ColorPickerHtml = { getHtml: getHtml };\n\n    var setDivColor = function setDivColor(div, value) {\n      div.style.background = value;\n      div.setAttribute('data-mce-color', value);\n    };\n    var onButtonClick = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        if (ctrl._color) {\n          editor.execCommand('mceApplyTextcolor', ctrl.settings.format, ctrl._color);\n        } else {\n          editor.execCommand('mceRemoveTextcolor', ctrl.settings.format);\n        }\n      };\n    };\n    var onPanelClick = function (editor, cols) {\n      return function (e) {\n        var buttonCtrl = this.parent();\n        var value;\n        var currentColor = TextColor.getCurrentColor(editor, buttonCtrl.settings.format);\n        var selectColor = function (value) {\n          editor.execCommand('mceApplyTextcolor', buttonCtrl.settings.format, value);\n          buttonCtrl.hidePanel();\n          buttonCtrl.color(value);\n        };\n        var resetColor = function () {\n          editor.execCommand('mceRemoveTextcolor', buttonCtrl.settings.format);\n          buttonCtrl.hidePanel();\n          buttonCtrl.resetColor();\n        };\n        if (global$1.DOM.getParent(e.target, '.mce-custom-color-btn')) {\n          buttonCtrl.hidePanel();\n          var colorPickerCallback = Settings.getColorPickerCallback(editor);\n          colorPickerCallback.call(editor, function (value) {\n            var tableElm = buttonCtrl.panel.getEl().getElementsByTagName('table')[0];\n            var customColorCells, div, i;\n            customColorCells = global$2.map(tableElm.rows[tableElm.rows.length - 1].childNodes, function (elm) {\n              return elm.firstChild;\n            });\n            for (i = 0; i < customColorCells.length; i++) {\n              div = customColorCells[i];\n              if (!div.getAttribute('data-mce-color')) {\n                break;\n              }\n            }\n            if (i === cols) {\n              for (i = 0; i < cols - 1; i++) {\n                setDivColor(customColorCells[i], customColorCells[i + 1].getAttribute('data-mce-color'));\n              }\n            }\n            setDivColor(div, value);\n            selectColor(value);\n          }, currentColor);\n        }\n        value = e.target.getAttribute('data-mce-color');\n        if (value) {\n          if (this.lastId) {\n            global$1.DOM.get(this.lastId).setAttribute('aria-selected', 'false');\n          }\n          e.target.setAttribute('aria-selected', true);\n          this.lastId = e.target.id;\n          if (value === 'transparent') {\n            resetColor();\n          } else {\n            selectColor(value);\n          }\n        } else if (value !== null) {\n          buttonCtrl.hidePanel();\n        }\n      };\n    };\n    var renderColorPicker = function (editor, foreColor) {\n      return function () {\n        var cols = foreColor ? Settings.getForeColorCols(editor) : Settings.getBackColorCols(editor);\n        var rows = foreColor ? Settings.getForeColorRows(editor) : Settings.getBackColorRows(editor);\n        var colorMap = foreColor ? Settings.getForeColorMap(editor) : Settings.getBackColorMap(editor);\n        var hasColorPicker = Settings.hasColorPicker(editor);\n        return ColorPickerHtml.getHtml(cols, rows, colorMap, hasColorPicker);\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addButton('forecolor', {\n        type: 'colorbutton',\n        tooltip: 'Text color',\n        format: 'forecolor',\n        panel: {\n          role: 'application',\n          ariaRemember: true,\n          html: renderColorPicker(editor, true),\n          onclick: onPanelClick(editor, Settings.getForeColorCols(editor))\n        },\n        onclick: onButtonClick(editor)\n      });\n      editor.addButton('backcolor', {\n        type: 'colorbutton',\n        tooltip: 'Background color',\n        format: 'hilitecolor',\n        panel: {\n          role: 'application',\n          ariaRemember: true,\n          html: renderColorPicker(editor, false),\n          onclick: onPanelClick(editor, Settings.getBackColorCols(editor))\n        },\n        onclick: onButtonClick(editor)\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('textcolor', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"textcolor\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/textcolor')\n//   ES2015:\n//     import 'tinymce/plugins/textcolor'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/textcolor/index.js\");"],
  "mappings": "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",
  "names": []
}
