{
  "version": 3,
  "sources": ["../tinymce/plugins/insertdatetime/plugin.js", "../tinymce/plugins/insertdatetime/index.js", "dep:tinymce_plugins_insertdatetime_index"],
  "sourcesContent": ["(function () {\nvar insertdatetime = (function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var getDateFormat = function (editor) {\n      return editor.getParam('insertdatetime_dateformat', editor.translate('%Y-%m-%d'));\n    };\n    var getTimeFormat = function (editor) {\n      return editor.getParam('insertdatetime_timeformat', editor.translate('%H:%M:%S'));\n    };\n    var getFormats = function (editor) {\n      return editor.getParam('insertdatetime_formats', [\n        '%H:%M:%S',\n        '%Y-%m-%d',\n        '%I:%M:%S %p',\n        '%D'\n      ]);\n    };\n    var getDefaultDateTime = function (editor) {\n      var formats = getFormats(editor);\n      return formats.length > 0 ? formats[0] : getTimeFormat(editor);\n    };\n    var shouldInsertTimeElement = function (editor) {\n      return editor.getParam('insertdatetime_element', false);\n    };\n    var Settings = {\n      getDateFormat: getDateFormat,\n      getTimeFormat: getTimeFormat,\n      getFormats: getFormats,\n      getDefaultDateTime: getDefaultDateTime,\n      shouldInsertTimeElement: shouldInsertTimeElement\n    };\n\n    var daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n    var daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n    var monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n    var monthsLong = 'January February March April May June July August September October November December'.split(' ');\n    var addZeros = function (value, len) {\n      value = '' + value;\n      if (value.length < len) {\n        for (var i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    var getDateTime = function (editor, fmt, date) {\n      date = date || new Date();\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n    var updateElement = function (editor, timeElm, computerTime, userTime) {\n      var newTimeElm = editor.dom.create('time', { datetime: computerTime }, userTime);\n      timeElm.parentNode.insertBefore(newTimeElm, timeElm);\n      editor.dom.remove(timeElm);\n      editor.selection.select(newTimeElm, true);\n      editor.selection.collapse(false);\n    };\n    var insertDateTime = function (editor, format) {\n      if (Settings.shouldInsertTimeElement(editor)) {\n        var userTime = getDateTime(editor, format);\n        var computerTime = void 0;\n        if (/%[HMSIp]/.test(format)) {\n          computerTime = getDateTime(editor, '%Y-%m-%dT%H:%M');\n        } else {\n          computerTime = getDateTime(editor, '%Y-%m-%d');\n        }\n        var timeElm = editor.dom.getParent(editor.selection.getStart(), 'time');\n        if (timeElm) {\n          updateElement(editor, timeElm, computerTime, userTime);\n        } else {\n          editor.insertContent('<time datetime=\"' + computerTime + '\">' + userTime + '</time>');\n        }\n      } else {\n        editor.insertContent(getDateTime(editor, format));\n      }\n    };\n    var Actions = {\n      insertDateTime: insertDateTime,\n      getDateTime: getDateTime\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceInsertDate', function () {\n        Actions.insertDateTime(editor, Settings.getDateFormat(editor));\n      });\n      editor.addCommand('mceInsertTime', function () {\n        Actions.insertDateTime(editor, Settings.getTimeFormat(editor));\n      });\n    };\n    var Commands = { register: register };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var createMenuItems = function (editor, lastFormatState) {\n      var formats = Settings.getFormats(editor);\n      return global$1.map(formats, function (fmt) {\n        return {\n          text: Actions.getDateTime(editor, fmt),\n          onclick: function () {\n            lastFormatState.set(fmt);\n            Actions.insertDateTime(editor, fmt);\n          }\n        };\n      });\n    };\n    var register$1 = function (editor, lastFormatState) {\n      var menuItems = createMenuItems(editor, lastFormatState);\n      editor.addButton('insertdatetime', {\n        type: 'splitbutton',\n        title: 'Insert date/time',\n        menu: menuItems,\n        onclick: function () {\n          var lastFormat = lastFormatState.get();\n          Actions.insertDateTime(editor, lastFormat ? lastFormat : Settings.getDefaultDateTime(editor));\n        }\n      });\n      editor.addMenuItem('insertdatetime', {\n        icon: 'date',\n        text: 'Date/time',\n        menu: menuItems,\n        context: 'insert'\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('insertdatetime', function (editor) {\n      var lastFormatState = Cell(null);\n      Commands.register(editor);\n      Buttons.register(editor, lastFormatState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"insertdatetime\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/insertdatetime')\n//   ES2015:\n//     import 'tinymce/plugins/insertdatetime'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/insertdatetime/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,IAAC,YAAY;AACb,UAAI,iBAAkB,WAAY;AAC9B;AAEA,YAAI,OAAO,SAAU,SAAS;AAC5B,cAAI,QAAQ;AACZ,cAAI,MAAM,WAAY;AACpB,mBAAO;AAAA;AAET,cAAI,MAAM,SAAU,GAAG;AACrB,oBAAQ;AAAA;AAEV,cAAI,QAAQ,WAAY;AACtB,mBAAO,KAAK;AAAA;AAEd,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA;AAAA;AAIJ,YAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ;AAExC,YAAI,gBAAgB,SAAU,QAAQ;AACpC,iBAAO,OAAO,SAAS,6BAA6B,OAAO,UAAU;AAAA;AAEvE,YAAI,gBAAgB,SAAU,QAAQ;AACpC,iBAAO,OAAO,SAAS,6BAA6B,OAAO,UAAU;AAAA;AAEvE,YAAI,aAAa,SAAU,QAAQ;AACjC,iBAAO,OAAO,SAAS,0BAA0B;AAAA,YAC/C;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA;AAGJ,YAAI,qBAAqB,SAAU,QAAQ;AACzC,cAAI,UAAU,WAAW;AACzB,iBAAO,QAAQ,SAAS,IAAI,QAAQ,KAAK,cAAc;AAAA;AAEzD,YAAI,0BAA0B,SAAU,QAAQ;AAC9C,iBAAO,OAAO,SAAS,0BAA0B;AAAA;AAEnD,YAAI,WAAW;AAAA,UACb;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAGF,YAAI,YAAY,kCAAkC,MAAM;AACxD,YAAI,WAAW,kEAAkE,MAAM;AACvF,YAAI,cAAc,kDAAkD,MAAM;AAC1E,YAAI,aAAa,wFAAwF,MAAM;AAC/G,YAAI,WAAW,SAAU,OAAO,KAAK;AACnC,kBAAQ,KAAK;AACb,cAAI,MAAM,SAAS,KAAK;AACtB,qBAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,sBAAQ,MAAM;AAAA;AAAA;AAGlB,iBAAO;AAAA;AAET,YAAI,cAAc,SAAU,QAAQ,KAAK,MAAM;AAC7C,iBAAO,QAAQ,IAAI;AACnB,gBAAM,IAAI,QAAQ,MAAM;AACxB,gBAAM,IAAI,QAAQ,MAAM;AACxB,gBAAM,IAAI,QAAQ,MAAM,KAAK,KAAK;AAClC,gBAAM,IAAI,QAAQ,MAAM,KAAK,KAAK;AAClC,gBAAM,IAAI,QAAQ,MAAM,SAAS,KAAK,aAAa,GAAG;AACtD,gBAAM,IAAI,QAAQ,MAAM,SAAS,KAAK,WAAW;AACjD,gBAAM,IAAI,QAAQ,MAAM,KAAK,SAAS,KAAK,YAAY;AACvD,gBAAM,IAAI,QAAQ,MAAM,KAAK,SAAS,KAAK,cAAc;AACzD,gBAAM,IAAI,QAAQ,MAAM,KAAK,SAAS,KAAK,cAAc;AACzD,gBAAM,IAAI,QAAQ,MAAM,KAAO,OAAK,aAAa,MAAM,KAAK;AAC5D,gBAAM,IAAI,QAAQ,MAAM,KAAM,MAAK,aAAa,KAAK,OAAO;AAC5D,gBAAM,IAAI,QAAQ,MAAM,KAAK,OAAO,UAAU,WAAW,KAAK;AAC9D,gBAAM,IAAI,QAAQ,MAAM,KAAK,OAAO,UAAU,YAAY,KAAK;AAC/D,gBAAM,IAAI,QAAQ,MAAM,KAAK,OAAO,UAAU,SAAS,KAAK;AAC5D,gBAAM,IAAI,QAAQ,MAAM,KAAK,OAAO,UAAU,UAAU,KAAK;AAC7D,gBAAM,IAAI,QAAQ,MAAM;AACxB,iBAAO;AAAA;AAET,YAAI,gBAAgB,SAAU,QAAQ,SAAS,cAAc,UAAU;AACrE,cAAI,aAAa,OAAO,IAAI,OAAO,QAAQ,EAAE,UAAU,gBAAgB;AACvE,kBAAQ,WAAW,aAAa,YAAY;AAC5C,iBAAO,IAAI,OAAO;AAClB,iBAAO,UAAU,OAAO,YAAY;AACpC,iBAAO,UAAU,SAAS;AAAA;AAE5B,YAAI,iBAAiB,SAAU,QAAQ,QAAQ;AAC7C,cAAI,SAAS,wBAAwB,SAAS;AAC5C,gBAAI,WAAW,YAAY,QAAQ;AACnC,gBAAI,eAAe;AACnB,gBAAI,WAAW,KAAK,SAAS;AAC3B,6BAAe,YAAY,QAAQ;AAAA,mBAC9B;AACL,6BAAe,YAAY,QAAQ;AAAA;AAErC,gBAAI,UAAU,OAAO,IAAI,UAAU,OAAO,UAAU,YAAY;AAChE,gBAAI,SAAS;AACX,4BAAc,QAAQ,SAAS,cAAc;AAAA,mBACxC;AACL,qBAAO,cAAc,qBAAqB,eAAe,OAAO,WAAW;AAAA;AAAA,iBAExE;AACL,mBAAO,cAAc,YAAY,QAAQ;AAAA;AAAA;AAG7C,YAAI,UAAU;AAAA,UACZ;AAAA,UACA;AAAA;AAGF,YAAI,WAAW,SAAU,QAAQ;AAC/B,iBAAO,WAAW,iBAAiB,WAAY;AAC7C,oBAAQ,eAAe,QAAQ,SAAS,cAAc;AAAA;AAExD,iBAAO,WAAW,iBAAiB,WAAY;AAC7C,oBAAQ,eAAe,QAAQ,SAAS,cAAc;AAAA;AAAA;AAG1D,YAAI,WAAW,EAAE;AAEjB,YAAI,WAAW,QAAQ,KAAK,MAAM,QAAQ;AAE1C,YAAI,kBAAkB,SAAU,QAAQ,iBAAiB;AACvD,cAAI,UAAU,SAAS,WAAW;AAClC,iBAAO,SAAS,IAAI,SAAS,SAAU,KAAK;AAC1C,mBAAO;AAAA,cACL,MAAM,QAAQ,YAAY,QAAQ;AAAA,cAClC,SAAS,WAAY;AACnB,gCAAgB,IAAI;AACpB,wBAAQ,eAAe,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKvC,YAAI,aAAa,SAAU,QAAQ,iBAAiB;AAClD,cAAI,YAAY,gBAAgB,QAAQ;AACxC,iBAAO,UAAU,kBAAkB;AAAA,YACjC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM;AAAA,YACN,SAAS,WAAY;AACnB,kBAAI,aAAa,gBAAgB;AACjC,sBAAQ,eAAe,QAAQ,aAAa,aAAa,SAAS,mBAAmB;AAAA;AAAA;AAGzF,iBAAO,YAAY,kBAAkB;AAAA,YACnC,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA;AAAA;AAGb,YAAI,UAAU,EAAE,UAAU;AAE1B,eAAO,IAAI,kBAAkB,SAAU,QAAQ;AAC7C,cAAI,kBAAkB,KAAK;AAC3B,mBAAS,SAAS;AAClB,kBAAQ,SAAS,QAAQ;AAAA;AAE3B,0BAAmB;AAAA;AAGnB,eAAO;AAAA;AAAA;AAAA;AAAA;;;ACzKX;AAAA;AAMA;AAAA;AAAA;;;ACNA,IAAO,+CAAQ;",
  "names": []
}
