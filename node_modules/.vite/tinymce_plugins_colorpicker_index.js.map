{
  "version": 3,
  "sources": ["../tinymce/plugins/colorpicker/plugin.js", "../tinymce/plugins/colorpicker/index.js", "dep:tinymce_plugins_colorpicker_index"],
  "sourcesContent": ["(function () {\nvar colorpicker = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Color');\n\n    var showPreview = function (win, hexColor) {\n      win.find('#preview')[0].getEl().style.background = hexColor;\n    };\n    var setColor = function (win, value) {\n      var color = global$1(value), rgb = color.toRgb();\n      win.fromJSON({\n        r: rgb.r,\n        g: rgb.g,\n        b: rgb.b,\n        hex: color.toHex().substr(1)\n      });\n      showPreview(win, color.toHex());\n    };\n    var open = function (editor, callback, value) {\n      var win = editor.windowManager.open({\n        title: 'Color',\n        items: {\n          type: 'container',\n          layout: 'flex',\n          direction: 'row',\n          align: 'stretch',\n          padding: 5,\n          spacing: 10,\n          items: [\n            {\n              type: 'colorpicker',\n              value: value,\n              onchange: function () {\n                var rgb = this.rgb();\n                if (win) {\n                  win.find('#r').value(rgb.r);\n                  win.find('#g').value(rgb.g);\n                  win.find('#b').value(rgb.b);\n                  win.find('#hex').value(this.value().substr(1));\n                  showPreview(win, this.value());\n                }\n              }\n            },\n            {\n              type: 'form',\n              padding: 0,\n              labelGap: 5,\n              defaults: {\n                type: 'textbox',\n                size: 7,\n                value: '0',\n                flex: 1,\n                spellcheck: false,\n                onchange: function () {\n                  var colorPickerCtrl = win.find('colorpicker')[0];\n                  var name, value;\n                  name = this.name();\n                  value = this.value();\n                  if (name === 'hex') {\n                    value = '#' + value;\n                    setColor(win, value);\n                    colorPickerCtrl.value(value);\n                    return;\n                  }\n                  value = {\n                    r: win.find('#r').value(),\n                    g: win.find('#g').value(),\n                    b: win.find('#b').value()\n                  };\n                  colorPickerCtrl.value(value);\n                  setColor(win, value);\n                }\n              },\n              items: [\n                {\n                  name: 'r',\n                  label: 'R',\n                  autofocus: 1\n                },\n                {\n                  name: 'g',\n                  label: 'G'\n                },\n                {\n                  name: 'b',\n                  label: 'B'\n                },\n                {\n                  name: 'hex',\n                  label: '#',\n                  value: '000000'\n                },\n                {\n                  name: 'preview',\n                  type: 'container',\n                  border: 1\n                }\n              ]\n            }\n          ]\n        },\n        onSubmit: function () {\n          callback('#' + win.toJSON().hex);\n        }\n      });\n      setColor(win, value);\n    };\n    var Dialog = { open: open };\n\n    global.add('colorpicker', function (editor) {\n      if (!editor.settings.color_picker_callback) {\n        editor.settings.color_picker_callback = function (callback, value) {\n          Dialog.open(editor, callback, value);\n        };\n      }\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"colorpicker\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/colorpicker')\n//   ES2015:\n//     import 'tinymce/plugins/colorpicker'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/colorpicker/index.js\");"],
  "mappings": "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",
  "names": []
}
