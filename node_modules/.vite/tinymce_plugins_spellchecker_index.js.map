{
  "version": 3,
  "sources": ["../tinymce/plugins/spellchecker/plugin.js", "../tinymce/plugins/spellchecker/index.js", "dep:tinymce_plugins_spellchecker_index"],
  "sourcesContent": ["(function () {\nvar spellchecker = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (/(^|[ ,])tinymcespellchecker([, ]|$)/.test(editor.settings.plugins) && global.get('tinymcespellchecker')) {\n        if (typeof domGlobals.window.console !== 'undefined' && domGlobals.window.console.log) {\n          domGlobals.window.console.log('Spell Checker Pro is incompatible with Spell Checker plugin! ' + 'Remove \\'spellchecker\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n    var DetectProPlugin = { hasProPlugin: hasProPlugin };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv';\n      return editor.getParam('spellchecker_languages', defaultLanguages);\n    };\n    var getLanguage = function (editor) {\n      var defaultLanguage = editor.getParam('language', 'en');\n      return editor.getParam('spellchecker_language', defaultLanguage);\n    };\n    var getRpcUrl = function (editor) {\n      return editor.getParam('spellchecker_rpc_url');\n    };\n    var getSpellcheckerCallback = function (editor) {\n      return editor.getParam('spellchecker_callback');\n    };\n    var getSpellcheckerWordcharPattern = function (editor) {\n      var defaultPattern = new RegExp('[^' + '\\\\s!\"#$%&()*+,-./:;<=>?@[\\\\]^_{|}`' + '\\xA7\\xA9\\xAB\\xAE\\xB1\\xB6\\xB7\\xB8\\xBB' + '\\xBC\\xBD\\xBE\\xBF\\xD7\\xF7\\xA4\\u201D\\u201C\\u201E\\xA0\\u2002\\u2003\\u2009' + ']+', 'g');\n      return editor.getParam('spellchecker_wordchar_pattern', defaultPattern);\n    };\n    var Settings = {\n      getLanguages: getLanguages,\n      getLanguage: getLanguage,\n      getRpcUrl: getRpcUrl,\n      getSpellcheckerCallback: getSpellcheckerCallback,\n      getSpellcheckerWordcharPattern: getSpellcheckerWordcharPattern\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var fireSpellcheckStart = function (editor) {\n      return editor.fire('SpellcheckStart');\n    };\n    var fireSpellcheckEnd = function (editor) {\n      return editor.fire('SpellcheckEnd');\n    };\n    var Events = {\n      fireSpellcheckStart: fireSpellcheckStart,\n      fireSpellcheckEnd: fireSpellcheckEnd\n    };\n\n    function isContentEditableFalse(node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    }\n    var DomTextMatcher = function (node, editor) {\n      var m, matches = [], text;\n      var dom = editor.dom;\n      var blockElementsMap, hiddenTextElementsMap, shortEndedElementsMap;\n      blockElementsMap = editor.schema.getBlockElements();\n      hiddenTextElementsMap = editor.schema.getWhiteSpaceElements();\n      shortEndedElementsMap = editor.schema.getShortEndedElements();\n      function createMatch(m, data) {\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        return {\n          start: m.index,\n          end: m.index + m[0].length,\n          text: m[0],\n          data: data\n        };\n      }\n      function getText(node) {\n        var txt;\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        txt = '';\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      }\n      function stepThroughMatches(node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation, matchIndex = 0;\n        matches = matches.slice(0);\n        matches.sort(function (a, b) {\n          return a.start - b.start;\n        });\n        matchLocation = matches.shift();\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation.end) {\n                endNode = curNode;\n                endNodeIndex = matchLocation.end - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation.start) {\n                startNode = curNode;\n                startNodeIndex = matchLocation.start - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation.text,\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      }\n      function genReplacer(callback) {\n        function makeReplacementNode(fill, matchIndex) {\n          var match = matches[matchIndex];\n          if (!match.stencil) {\n            match.stencil = callback(match);\n          }\n          var clone = match.stencil.cloneNode(false);\n          clone.setAttribute('data-mce-index', matchIndex);\n          if (fill) {\n            clone.appendChild(dom.doc.createTextNode(fill));\n          }\n          return clone;\n        }\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          var doc = dom.doc;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match, matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      }\n      function unwrapElement(element) {\n        var parentNode = element.parentNode;\n        parentNode.insertBefore(element.firstChild, element);\n        element.parentNode.removeChild(element);\n      }\n      function hasClass(elm) {\n        return elm.className.indexOf('mce-spellchecker-word') !== -1;\n      }\n      function getWrappersByIndex(index) {\n        var elements = node.getElementsByTagName('*'), wrappers = [];\n        index = typeof index === 'number' ? '' + index : null;\n        for (var i = 0; i < elements.length; i++) {\n          var element = elements[i], dataIndex = element.getAttribute('data-mce-index');\n          if (dataIndex !== null && dataIndex.length && hasClass(element)) {\n            if (dataIndex === index || index === null) {\n              wrappers.push(element);\n            }\n          }\n        }\n        return wrappers;\n      }\n      function indexOf(match) {\n        var i = matches.length;\n        while (i--) {\n          if (matches[i] === match) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      function filter(callback) {\n        var filteredMatches = [];\n        each(function (match, i) {\n          if (callback(match, i)) {\n            filteredMatches.push(match);\n          }\n        });\n        matches = filteredMatches;\n        return this;\n      }\n      function each(callback) {\n        for (var i = 0, l = matches.length; i < l; i++) {\n          if (callback(matches[i], i) === false) {\n            break;\n          }\n        }\n        return this;\n      }\n      function wrap(callback) {\n        if (matches.length) {\n          stepThroughMatches(node, matches, genReplacer(callback));\n        }\n        return this;\n      }\n      function find(regex, data) {\n        if (text && regex.global) {\n          while (m = regex.exec(text)) {\n            matches.push(createMatch(m, data));\n          }\n        }\n        return this;\n      }\n      function unwrap(match) {\n        var i;\n        var elements = getWrappersByIndex(match ? indexOf(match) : null);\n        i = elements.length;\n        while (i--) {\n          unwrapElement(elements[i]);\n        }\n        return this;\n      }\n      function matchFromElement(element) {\n        return matches[element.getAttribute('data-mce-index')];\n      }\n      function elementFromMatch(match) {\n        return getWrappersByIndex(indexOf(match))[0];\n      }\n      function add(start, length, data) {\n        matches.push({\n          start: start,\n          end: start + length,\n          text: text.substr(start, length),\n          data: data\n        });\n        return this;\n      }\n      function rangeFromMatch(match) {\n        var wrappers = getWrappersByIndex(indexOf(match));\n        var rng = editor.dom.createRng();\n        rng.setStartBefore(wrappers[0]);\n        rng.setEndAfter(wrappers[wrappers.length - 1]);\n        return rng;\n      }\n      function replace(match, text) {\n        var rng = rangeFromMatch(match);\n        rng.deleteContents();\n        if (text.length > 0) {\n          rng.insertNode(editor.dom.doc.createTextNode(text));\n        }\n        return rng;\n      }\n      function reset() {\n        matches.splice(0, matches.length);\n        unwrap();\n        return this;\n      }\n      text = getText(node);\n      return {\n        text: text,\n        matches: matches,\n        each: each,\n        filter: filter,\n        reset: reset,\n        matchFromElement: matchFromElement,\n        elementFromMatch: elementFromMatch,\n        find: find,\n        add: add,\n        wrap: wrap,\n        unwrap: unwrap,\n        replace: replace,\n        rangeFromMatch: rangeFromMatch,\n        indexOf: indexOf\n      };\n    };\n\n    var getTextMatcher = function (editor, textMatcherState) {\n      if (!textMatcherState.get()) {\n        var textMatcher = DomTextMatcher(editor.getBody(), editor);\n        textMatcherState.set(textMatcher);\n      }\n      return textMatcherState.get();\n    };\n    var isEmpty = function (obj) {\n      for (var _ in obj) {\n        return false;\n      }\n      return true;\n    };\n    var defaultSpellcheckCallback = function (editor, pluginUrl, currentLanguageState) {\n      return function (method, text, doneCallback, errorCallback) {\n        var data = {\n          method: method,\n          lang: currentLanguageState.get()\n        };\n        var postData = '';\n        data[method === 'addToDictionary' ? 'word' : 'text'] = text;\n        global$1.each(data, function (value, key) {\n          if (postData) {\n            postData += '&';\n          }\n          postData += key + '=' + encodeURIComponent(value);\n        });\n        global$3.send({\n          url: new global$2(pluginUrl).toAbsolute(Settings.getRpcUrl(editor)),\n          type: 'post',\n          content_type: 'application/x-www-form-urlencoded',\n          data: postData,\n          success: function (result) {\n            result = JSON.parse(result);\n            if (!result) {\n              var message = editor.translate('Server response wasn\\'t proper JSON.');\n              errorCallback(message);\n            } else if (result.error) {\n              errorCallback(result.error);\n            } else {\n              doneCallback(result);\n            }\n          },\n          error: function () {\n            var message = editor.translate('The spelling service was not found: (') + Settings.getRpcUrl(editor) + editor.translate(')');\n            errorCallback(message);\n          }\n        });\n      };\n    };\n    var sendRpcCall = function (editor, pluginUrl, currentLanguageState, name, data, successCallback, errorCallback) {\n      var userSpellcheckCallback = Settings.getSpellcheckerCallback(editor);\n      var spellCheckCallback = userSpellcheckCallback ? userSpellcheckCallback : defaultSpellcheckCallback(editor, pluginUrl, currentLanguageState);\n      spellCheckCallback.call(editor.plugins.spellchecker, name, data, successCallback, errorCallback);\n    };\n    var spellcheck = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      if (finish(editor, startedState, textMatcherState)) {\n        return;\n      }\n      var errorCallback = function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n        finish(editor, startedState, textMatcherState);\n      };\n      var successCallback = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'spellcheck', getTextMatcher(editor, textMatcherState).text, successCallback, errorCallback);\n      editor.focus();\n    };\n    var checkIfFinished = function (editor, startedState, textMatcherState) {\n      if (!editor.dom.select('span.mce-spellchecker-word').length) {\n        finish(editor, startedState, textMatcherState);\n      }\n    };\n    var addToDictionary = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans) {\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'addToDictionary', word, function () {\n        editor.setProgressState(false);\n        editor.dom.remove(spans, true);\n        checkIfFinished(editor, startedState, textMatcherState);\n      }, function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n      });\n    };\n    var ignoreWord = function (editor, startedState, textMatcherState, word, spans, all) {\n      editor.selection.collapse();\n      if (all) {\n        global$1.each(editor.dom.select('span.mce-spellchecker-word'), function (span) {\n          if (span.getAttribute('data-mce-word') === word) {\n            editor.dom.remove(span, true);\n          }\n        });\n      } else {\n        editor.dom.remove(spans, true);\n      }\n      checkIfFinished(editor, startedState, textMatcherState);\n    };\n    var finish = function (editor, startedState, textMatcherState) {\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).reset();\n      editor.selection.moveToBookmark(bookmark);\n      textMatcherState.set(null);\n      if (startedState.get()) {\n        startedState.set(false);\n        Events.fireSpellcheckEnd(editor);\n        return true;\n      }\n    };\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var findSpansByIndex = function (editor, index) {\n      var nodes;\n      var spans = [];\n      nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var markErrors = function (editor, startedState, textMatcherState, lastSuggestionsState, data) {\n      var suggestions, hasDictionarySupport;\n      if (typeof data !== 'string' && data.words) {\n        hasDictionarySupport = !!data.dictionary;\n        suggestions = data.words;\n      } else {\n        suggestions = data;\n      }\n      editor.setProgressState(false);\n      if (isEmpty(suggestions)) {\n        var message = editor.translate('No misspellings found.');\n        editor.notificationManager.open({\n          text: message,\n          type: 'info'\n        });\n        startedState.set(false);\n        return;\n      }\n      lastSuggestionsState.set({\n        suggestions: suggestions,\n        hasDictionarySupport: hasDictionarySupport\n      });\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).find(Settings.getSpellcheckerWordcharPattern(editor)).filter(function (match) {\n        return !!suggestions[match.text];\n      }).wrap(function (match) {\n        return editor.dom.create('span', {\n          'class': 'mce-spellchecker-word',\n          'data-mce-bogus': 1,\n          'data-mce-word': match.text\n        });\n      });\n      editor.selection.moveToBookmark(bookmark);\n      startedState.set(true);\n      Events.fireSpellcheckStart(editor);\n    };\n    var Actions = {\n      spellcheck: spellcheck,\n      checkIfFinished: checkIfFinished,\n      addToDictionary: addToDictionary,\n      ignoreWord: ignoreWord,\n      findSpansByIndex: findSpansByIndex,\n      getElmIndex: getElmIndex,\n      markErrors: markErrors\n    };\n\n    var get = function (editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState, url) {\n      var getLanguage = function () {\n        return currentLanguageState.get();\n      };\n      var getWordCharPattern = function () {\n        return Settings.getSpellcheckerWordcharPattern(editor);\n      };\n      var markErrors = function (data) {\n        Actions.markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      var getTextMatcher = function () {\n        return textMatcherState.get();\n      };\n      return {\n        getTextMatcher: getTextMatcher,\n        getWordCharPattern: getWordCharPattern,\n        markErrors: markErrors,\n        getLanguage: getLanguage\n      };\n    };\n    var Api = { get: get };\n\n    var register = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      editor.addCommand('mceSpellCheck', function () {\n        Actions.spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      });\n    };\n    var Commands = { register: register };\n\n    var buildMenuItems = function (listName, languageValues) {\n      var items = [];\n      global$1.each(languageValues, function (languageValue) {\n        items.push({\n          selectable: true,\n          text: languageValue.name,\n          data: languageValue.value\n        });\n      });\n      return items;\n    };\n    var updateSelection = function (editor, currentLanguageState) {\n      return function (e) {\n        var selectedLanguage = currentLanguageState.get();\n        e.control.items().each(function (ctrl) {\n          ctrl.active(ctrl.settings.data === selectedLanguage);\n        });\n      };\n    };\n    var getItems = function (editor) {\n      return global$1.map(Settings.getLanguages(editor).split(','), function (langPair) {\n        langPair = langPair.split('=');\n        return {\n          name: langPair[0],\n          value: langPair[1]\n        };\n      });\n    };\n    var register$1 = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState) {\n      var languageMenuItems = buildMenuItems('Language', getItems(editor));\n      var startSpellchecking = function () {\n        Actions.spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      };\n      var buttonArgs = {\n        tooltip: 'Spellcheck',\n        onclick: startSpellchecking,\n        onPostRender: function (e) {\n          var ctrl = e.control;\n          editor.on('SpellcheckStart SpellcheckEnd', function () {\n            ctrl.active(startedState.get());\n          });\n        }\n      };\n      if (languageMenuItems.length > 1) {\n        buttonArgs.type = 'splitbutton';\n        buttonArgs.menu = languageMenuItems;\n        buttonArgs.onshow = updateSelection(editor, currentLanguageState);\n        buttonArgs.onselect = function (e) {\n          currentLanguageState.set(e.control.settings.data);\n        };\n      }\n      editor.addButton('spellchecker', buttonArgs);\n      editor.addMenuItem('spellchecker', {\n        text: 'Spellcheck',\n        context: 'tools',\n        onclick: startSpellchecking,\n        selectable: true,\n        onPostRender: function () {\n          var self = this;\n          self.active(startedState.get());\n          editor.on('SpellcheckStart SpellcheckEnd', function () {\n            self.active(startedState.get());\n          });\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.ui.Factory');\n\n    var suggestionsMenu;\n    var showSuggestions = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, word, spans) {\n      var items = [], suggestions = lastSuggestionsState.get().suggestions[word];\n      global$1.each(suggestions, function (suggestion) {\n        items.push({\n          text: suggestion,\n          onclick: function () {\n            editor.insertContent(editor.dom.encode(suggestion));\n            editor.dom.remove(spans);\n            Actions.checkIfFinished(editor, startedState, textMatcherState);\n          }\n        });\n      });\n      items.push({ text: '-' });\n      var hasDictionarySupport = lastSuggestionsState.get().hasDictionarySupport;\n      if (hasDictionarySupport) {\n        items.push({\n          text: 'Add to Dictionary',\n          onclick: function () {\n            Actions.addToDictionary(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans);\n          }\n        });\n      }\n      items.push.apply(items, [\n        {\n          text: 'Ignore',\n          onclick: function () {\n            Actions.ignoreWord(editor, startedState, textMatcherState, word, spans);\n          }\n        },\n        {\n          text: 'Ignore all',\n          onclick: function () {\n            Actions.ignoreWord(editor, startedState, textMatcherState, word, spans, true);\n          }\n        }\n      ]);\n      suggestionsMenu = global$5.create('menu', {\n        items: items,\n        context: 'contextmenu',\n        onautohide: function (e) {\n          if (e.target.className.indexOf('spellchecker') !== -1) {\n            e.preventDefault();\n          }\n        },\n        onhide: function () {\n          suggestionsMenu.remove();\n          suggestionsMenu = null;\n        }\n      });\n      suggestionsMenu.renderTo(domGlobals.document.body);\n      var pos = global$4.DOM.getPos(editor.getContentAreaContainer());\n      var targetPos = editor.dom.getPos(spans[0]);\n      var root = editor.dom.getRoot();\n      if (root.nodeName === 'BODY') {\n        targetPos.x -= root.ownerDocument.documentElement.scrollLeft || root.scrollLeft;\n        targetPos.y -= root.ownerDocument.documentElement.scrollTop || root.scrollTop;\n      } else {\n        targetPos.x -= root.scrollLeft;\n        targetPos.y -= root.scrollTop;\n      }\n      pos.x += targetPos.x;\n      pos.y += targetPos.y;\n      suggestionsMenu.moveTo(pos.x, pos.y + spans[0].offsetHeight);\n    };\n    var setup = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState) {\n      editor.on('click', function (e) {\n        var target = e.target;\n        if (target.className === 'mce-spellchecker-word') {\n          e.preventDefault();\n          var spans = Actions.findSpansByIndex(editor, Actions.getElmIndex(target));\n          if (spans.length > 0) {\n            var rng = editor.dom.createRng();\n            rng.setStartBefore(spans[0]);\n            rng.setEndAfter(spans[spans.length - 1]);\n            editor.selection.setRng(rng);\n            showSuggestions(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, target.getAttribute('data-mce-word'), spans);\n          }\n        }\n      });\n    };\n    var SuggestionsMenu = { setup: setup };\n\n    global.add('spellchecker', function (editor, pluginUrl) {\n      if (DetectProPlugin.hasProPlugin(editor) === false) {\n        var startedState = Cell(false);\n        var currentLanguageState = Cell(Settings.getLanguage(editor));\n        var textMatcherState = Cell(null);\n        var lastSuggestionsState = Cell(null);\n        Buttons.register(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState);\n        SuggestionsMenu.setup(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState);\n        Commands.register(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n        return Api.get(editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState, pluginUrl);\n      }\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n", "// Exports the \"spellchecker\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/spellchecker')\n//   ES2015:\n//     import 'tinymce/plugins/spellchecker'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/spellchecker/index.js\");"],
  "mappings": "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",
  "names": []
}
