{
  "version": 3,
  "sources": ["../tinymce/plugins/advlist/plugin.js", "../tinymce/plugins/advlist/index.js", "dep:tinymce_plugins_advlist_index"],
  "sourcesContent": ["(function () {\nvar advlist = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var applyListFormat = function (editor, listName, styleValue) {\n      var cmd = listName === 'UL' ? 'InsertUnorderedList' : 'InsertOrderedList';\n      editor.execCommand(cmd, false, styleValue === false ? null : { 'list-style-type': styleValue });\n    };\n    var Actions = { applyListFormat: applyListFormat };\n\n    var register = function (editor) {\n      editor.addCommand('ApplyUnorderedListStyle', function (ui, value) {\n        Actions.applyListFormat(editor, 'UL', value['list-style-type']);\n      });\n      editor.addCommand('ApplyOrderedListStyle', function (ui, value) {\n        Actions.applyListFormat(editor, 'OL', value['list-style-type']);\n      });\n    };\n    var Commands = { register: register };\n\n    var getNumberStyles = function (editor) {\n      var styles = editor.getParam('advlist_number_styles', 'default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n    var getBulletStyles = function (editor) {\n      var styles = editor.getParam('advlist_bullet_styles', 'default,circle,disc,square');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n    var Settings = {\n      getNumberStyles: getNumberStyles,\n      getBulletStyles: getBulletStyles\n    };\n\n    var isChildOfBody = function (editor, elm) {\n      return editor.$.contains(editor.getBody(), elm);\n    };\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n    var isListNode = function (editor) {\n      return function (node) {\n        return node && /^(OL|UL|DL)$/.test(node.nodeName) && isChildOfBody(editor, node);\n      };\n    };\n    var getSelectedStyleType = function (editor) {\n      var listElm = editor.dom.getParent(editor.selection.getNode(), 'ol,ul');\n      return editor.dom.getStyle(listElm, 'listStyleType') || '';\n    };\n    var ListUtils = {\n      isTableCellNode: isTableCellNode,\n      isListNode: isListNode,\n      getSelectedStyleType: getSelectedStyleType\n    };\n\n    var styleValueToText = function (styleValue) {\n      return styleValue.replace(/\\-/g, ' ').replace(/\\b\\w/g, function (chr) {\n        return chr.toUpperCase();\n      });\n    };\n    var toMenuItems = function (styles) {\n      return global$1.map(styles, function (styleValue) {\n        var text = styleValueToText(styleValue);\n        var data = styleValue === 'default' ? '' : styleValue;\n        return {\n          text: text,\n          data: data\n        };\n      });\n    };\n    var ListStyles = { toMenuItems: toMenuItems };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (predicate(element)) {\n          return index;\n        }\n      }\n      return -1;\n    };\n    var listState = function (editor, listName) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('NodeChange', function (e) {\n          var tableCellIndex = findIndex(e.parents, ListUtils.isTableCellNode);\n          var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n          var lists = global$1.grep(parents, ListUtils.isListNode(editor));\n          ctrl.active(lists.length > 0 && lists[0].nodeName === listName);\n        });\n      };\n    };\n    var updateSelection = function (editor) {\n      return function (e) {\n        var listStyleType = ListUtils.getSelectedStyleType(editor);\n        e.control.items().each(function (ctrl) {\n          ctrl.active(ctrl.settings.data === listStyleType);\n        });\n      };\n    };\n    var addSplitButton = function (editor, id, tooltip, cmd, nodeName, styles) {\n      editor.addButton(id, {\n        active: false,\n        type: 'splitbutton',\n        tooltip: tooltip,\n        menu: ListStyles.toMenuItems(styles),\n        onPostRender: listState(editor, nodeName),\n        onshow: updateSelection(editor),\n        onselect: function (e) {\n          Actions.applyListFormat(editor, nodeName, e.control.settings.data);\n        },\n        onclick: function () {\n          editor.execCommand(cmd);\n        }\n      });\n    };\n    var addButton = function (editor, id, tooltip, cmd, nodeName, styles) {\n      editor.addButton(id, {\n        active: false,\n        type: 'button',\n        tooltip: tooltip,\n        onPostRender: listState(editor, nodeName),\n        onclick: function () {\n          editor.execCommand(cmd);\n        }\n      });\n    };\n    var addControl = function (editor, id, tooltip, cmd, nodeName, styles) {\n      if (styles.length > 0) {\n        addSplitButton(editor, id, tooltip, cmd, nodeName, styles);\n      } else {\n        addButton(editor, id, tooltip, cmd, nodeName);\n      }\n    };\n    var register$1 = function (editor) {\n      addControl(editor, 'numlist', 'Numbered list', 'InsertOrderedList', 'OL', Settings.getNumberStyles(editor));\n      addControl(editor, 'bullist', 'Bullet list', 'InsertUnorderedList', 'UL', Settings.getBulletStyles(editor));\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('advlist', function (editor) {\n      var hasPlugin = function (editor, plugin) {\n        var plugins = editor.settings.plugins ? editor.settings.plugins : '';\n        return global$1.inArray(plugins.split(/[ ,]/), plugin) !== -1;\n      };\n      if (hasPlugin(editor, 'lists')) {\n        Buttons.register(editor);\n        Commands.register(editor);\n      }\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n", "// Exports the \"advlist\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/advlist')\n//   ES2015:\n//     import 'tinymce/plugins/advlist'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/advlist/index.js\");"],
  "mappings": "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",
  "names": []
}
