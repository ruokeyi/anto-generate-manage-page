{
  "version": 3,
  "sources": ["../tinymce/plugins/fullscreen/plugin.js", "../tinymce/plugins/fullscreen/index.js", "dep:tinymce_plugins_fullscreen_index"],
  "sourcesContent": ["(function () {\nvar fullscreen = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var get = function (fullscreenState) {\n      return {\n        isFullscreen: function () {\n          return fullscreenState.get() !== null;\n        }\n      };\n    };\n    var Api = { get: get };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var fireFullscreenStateChanged = function (editor, state) {\n      editor.fire('FullscreenStateChanged', { state: state });\n    };\n    var Events = { fireFullscreenStateChanged: fireFullscreenStateChanged };\n\n    var DOM = global$1.DOM;\n    var getWindowSize = function () {\n      var w;\n      var h;\n      var win = domGlobals.window;\n      var doc = domGlobals.document;\n      var body = doc.body;\n      if (body.offsetWidth) {\n        w = body.offsetWidth;\n        h = body.offsetHeight;\n      }\n      if (win.innerWidth && win.innerHeight) {\n        w = win.innerWidth;\n        h = win.innerHeight;\n      }\n      return {\n        w: w,\n        h: h\n      };\n    };\n    var getScrollPos = function () {\n      var vp = DOM.getViewPort();\n      return {\n        x: vp.x,\n        y: vp.y\n      };\n    };\n    var setScrollPos = function (pos) {\n      domGlobals.window.scrollTo(pos.x, pos.y);\n    };\n    var toggleFullscreen = function (editor, fullscreenState) {\n      var body = domGlobals.document.body;\n      var documentElement = domGlobals.document.documentElement;\n      var editorContainerStyle;\n      var editorContainer, iframe, iframeStyle;\n      var fullscreenInfo = fullscreenState.get();\n      var resize = function () {\n        DOM.setStyle(iframe, 'height', getWindowSize().h - (editorContainer.clientHeight - iframe.clientHeight));\n      };\n      var removeResize = function () {\n        DOM.unbind(domGlobals.window, 'resize', resize);\n      };\n      editorContainer = editor.getContainer();\n      editorContainerStyle = editorContainer.style;\n      iframe = editor.getContentAreaContainer().firstChild;\n      iframeStyle = iframe.style;\n      if (!fullscreenInfo) {\n        var newFullScreenInfo = {\n          scrollPos: getScrollPos(),\n          containerWidth: editorContainerStyle.width,\n          containerHeight: editorContainerStyle.height,\n          iframeWidth: iframeStyle.width,\n          iframeHeight: iframeStyle.height,\n          resizeHandler: resize,\n          removeHandler: removeResize\n        };\n        iframeStyle.width = iframeStyle.height = '100%';\n        editorContainerStyle.width = editorContainerStyle.height = '';\n        DOM.addClass(body, 'mce-fullscreen');\n        DOM.addClass(documentElement, 'mce-fullscreen');\n        DOM.addClass(editorContainer, 'mce-fullscreen');\n        DOM.bind(domGlobals.window, 'resize', resize);\n        editor.on('remove', removeResize);\n        resize();\n        fullscreenState.set(newFullScreenInfo);\n        Events.fireFullscreenStateChanged(editor, true);\n      } else {\n        iframeStyle.width = fullscreenInfo.iframeWidth;\n        iframeStyle.height = fullscreenInfo.iframeHeight;\n        if (fullscreenInfo.containerWidth) {\n          editorContainerStyle.width = fullscreenInfo.containerWidth;\n        }\n        if (fullscreenInfo.containerHeight) {\n          editorContainerStyle.height = fullscreenInfo.containerHeight;\n        }\n        DOM.removeClass(body, 'mce-fullscreen');\n        DOM.removeClass(documentElement, 'mce-fullscreen');\n        DOM.removeClass(editorContainer, 'mce-fullscreen');\n        setScrollPos(fullscreenInfo.scrollPos);\n        DOM.unbind(domGlobals.window, 'resize', fullscreenInfo.resizeHandler);\n        editor.off('remove', fullscreenInfo.removeHandler);\n        fullscreenState.set(null);\n        Events.fireFullscreenStateChanged(editor, false);\n      }\n    };\n    var Actions = { toggleFullscreen: toggleFullscreen };\n\n    var register = function (editor, fullscreenState) {\n      editor.addCommand('mceFullScreen', function () {\n        Actions.toggleFullscreen(editor, fullscreenState);\n      });\n    };\n    var Commands = { register: register };\n\n    var postRender = function (editor) {\n      return function (e) {\n        var ctrl = e.control;\n        editor.on('FullscreenStateChanged', function (e) {\n          ctrl.active(e.state);\n        });\n      };\n    };\n    var register$1 = function (editor) {\n      editor.addMenuItem('fullscreen', {\n        text: 'Fullscreen',\n        shortcut: 'Ctrl+Shift+F',\n        selectable: true,\n        cmd: 'mceFullScreen',\n        onPostRender: postRender(editor),\n        context: 'view'\n      });\n      editor.addButton('fullscreen', {\n        active: false,\n        tooltip: 'Fullscreen',\n        cmd: 'mceFullScreen',\n        onPostRender: postRender(editor)\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('fullscreen', function (editor) {\n      var fullscreenState = Cell(null);\n      if (editor.settings.inline) {\n        return Api.get(fullscreenState);\n      }\n      Commands.register(editor, fullscreenState);\n      Buttons.register(editor);\n      editor.addShortcut('Ctrl+Shift+F', '', 'mceFullScreen');\n      return Api.get(fullscreenState);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n", "// Exports the \"fullscreen\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/fullscreen')\n//   ES2015:\n//     import 'tinymce/plugins/fullscreen'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/fullscreen/index.js\");"],
  "mappings": "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",
  "names": []
}
